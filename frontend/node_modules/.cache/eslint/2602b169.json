[{"D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\main.js":"1","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\router\\permission.js":"2","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\locales\\zh-CN.js":"3","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\App.vue":"4","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\locales\\en.js":"5","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\router\\index.js":"6","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\store\\index.js":"7","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\Home.vue":"8","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\NotFound.vue":"9","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\reservation\\ReservationDetail.vue":"10","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\reservation\\ReservationForm.vue":"11","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\reservation\\ReservationQuery.vue":"12","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\equipment\\EquipmentList.vue":"13","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\admin\\AdminLogin.vue":"14","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\admin\\AdminReservation.vue":"15","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\admin\\AdminDashboard.vue":"16","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\admin\\AdminSettings.vue":"17","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\equipment\\EquipmentDetail.vue":"18","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\admin\\AdminEquipment.vue":"19","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\components\\layout\\AppHeader.vue":"20","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\components\\layout\\AppFooter.vue":"21","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\components\\admin\\AdminLayout.vue":"22","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\components\\common\\RichTextEditor.vue":"23","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\components\\layout\\MobileNav.vue":"24","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\api\\index.js":"25","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\components\\common\\LanguageSwitcher.vue":"26"},{"size":2501,"mtime":1745392029617,"results":"27","hashOfConfig":"28"},{"size":1996,"mtime":1745383353508,"results":"29","hashOfConfig":"28"},{"size":6290,"mtime":1745388151432,"results":"30","hashOfConfig":"28"},{"size":2184,"mtime":1745378156066,"results":"31","hashOfConfig":"28"},{"size":6764,"mtime":1745388167529,"results":"32","hashOfConfig":"28"},{"size":3475,"mtime":1745391032562,"results":"33","hashOfConfig":"28"},{"size":6414,"mtime":1745391354710,"results":"34","hashOfConfig":"28"},{"size":4342,"mtime":1745378324198,"results":"35","hashOfConfig":"28"},{"size":992,"mtime":1745378334464,"results":"36","hashOfConfig":"28"},{"size":9046,"mtime":1745378606047,"results":"37","hashOfConfig":"28"},{"size":15876,"mtime":1745378544778,"results":"38","hashOfConfig":"28"},{"size":4431,"mtime":1745378567892,"results":"39","hashOfConfig":"28"},{"size":7945,"mtime":1745378441589,"results":"40","hashOfConfig":"28"},{"size":3846,"mtime":1745378625574,"results":"41","hashOfConfig":"28"},{"size":262,"mtime":1745391985556,"results":"42","hashOfConfig":"28"},{"size":8681,"mtime":1745378661529,"results":"43","hashOfConfig":"28"},{"size":253,"mtime":1745391993201,"results":"44","hashOfConfig":"28"},{"size":11728,"mtime":1745388200004,"results":"45","hashOfConfig":"28"},{"size":23687,"mtime":1745388107218,"results":"46","hashOfConfig":"28"},{"size":3227,"mtime":1745383333245,"results":"47","hashOfConfig":"28"},{"size":1144,"mtime":1745378300185,"results":"48","hashOfConfig":"28"},{"size":5657,"mtime":1745378688632,"results":"49","hashOfConfig":"28"},{"size":4311,"mtime":1745384524485,"results":"50","hashOfConfig":"28"},{"size":3889,"mtime":1745383234928,"results":"51","hashOfConfig":"28"},{"size":3070,"mtime":1745381347057,"results":"52","hashOfConfig":"28"},{"size":942,"mtime":1745381262484,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"iry8ly",{"filePath":"57","messages":"58","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},"D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\main.js",["132"],"import Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\nimport VueI18n from 'vue-i18n'\nimport axios from 'axios'\n\n// 导入权限控制\nimport './router/permission'\n\n// 导入富文本编辑器\n// 暂时注释掉富文本编辑器相关代码\n// import VueQuillEditor from 'vue-quill-editor'\n// import 'quill/dist/quill.core.css'\n// import 'quill/dist/quill.snow.css'\n// import 'quill/dist/quill.bubble.css'\n\n// 导入语言包\nimport zhCN from './locales/zh-CN'\nimport en from './locales/en'\n\n// 使用插件\nVue.use(ElementUI)\nVue.use(VueI18n)\n// Vue.use(VueQuillEditor) // 暂时注释掉\n\n// 配置axios\naxios.defaults.baseURL = process.env.VUE_APP_API_URL || 'http://localhost:8000'\naxios.defaults.timeout = 10000\naxios.interceptors.request.use(config => {\n  // 从localStorage获取token\n  const token = localStorage.getItem('token')\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`\n  }\n  return config\n}, error => {\n  return Promise.reject(error)\n})\n\naxios.interceptors.response.use(response => {\n  return response\n}, error => {\n  if (error.response) {\n    // 处理401错误（未授权）\n    if (error.response.status === 401) {\n      store.dispatch('logout')\n      router.push('/admin/login')\n    }\n  }\n  return Promise.reject(error)\n})\n\nVue.prototype.$http = axios\n\n// 配置i18n\nconst i18n = new VueI18n({\n  locale: store.state.language || 'zh-CN',\n  messages: {\n    'zh-CN': zhCN,\n    'en': en\n  },\n  silentTranslationWarn: true\n})\n\n// 同步语言设置\nstore.watch(\n  state => state.language,\n  (newLang) => {\n    i18n.locale = newLang\n    document.querySelector('html').setAttribute('lang', newLang)\n    console.log('Language changed to:', newLang)\n  }\n)\n\n// 全局过滤器\nVue.filter('dateFormat', function(value, format = 'YYYY-MM-DD HH:mm') {\n  if (!value) return ''\n  const date = new Date(value)\n  const year = date.getFullYear()\n  const month = String(date.getMonth() + 1).padStart(2, '0')\n  const day = String(date.getDate()).padStart(2, '0')\n  const hours = String(date.getHours()).padStart(2, '0')\n  const minutes = String(date.getMinutes()).padStart(2, '0')\n\n  return format\n    .replace('YYYY', year)\n    .replace('MM', month)\n    .replace('DD', day)\n    .replace('HH', hours)\n    .replace('mm', minutes)\n})\n\nVue.config.productionTip = false\n\nnew Vue({\n  router,\n  store,\n  i18n,\n  render: h => h(App)\n}).$mount('#app')\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\router\\permission.js",["133"],"import router from './index'\nimport store from '@/store'\nimport { Message } from 'element-ui'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\n// 配置NProgress\nNProgress.configure({ showSpinner: false })\n\n// 白名单路由（不需要登录即可访问）\nconst whiteList = [\n  '/',\n  '/equipment',\n  '/equipment/:id',\n  '/reservation/query',\n  '/reservation/:code',\n  '/admin/login',\n  '/404'\n]\n\n// 路由前置守卫\nrouter.beforeEach(async (to, from, next) => {\n  // 开始进度条\n  NProgress.start()\n  \n  // 设置页面标题\n  document.title = to.meta.title ? `${to.meta.title} - HTNIA设备预定系统` : 'HTNIA设备预定系统'\n  \n  // 获取用户登录状态\n  const hasToken = store.getters.getToken\n  \n  // 判断是否需要登录权限\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth)\n  \n  if (hasToken) {\n    if (to.path === '/admin/login') {\n      // 已登录，跳转到管理控制台\n      next({ path: '/admin/dashboard' })\n      NProgress.done()\n    } else {\n      // 已登录，获取用户信息\n      const hasUserInfo = store.getters.currentUser && store.getters.currentUser.id\n      \n      if (hasUserInfo) {\n        next()\n      } else {\n        try {\n          // 获取用户信息\n          await store.dispatch('getUserInfo')\n          next()\n        } catch (error) {\n          // 获取用户信息失败，清除token并重新登录\n          await store.dispatch('logout')\n          Message.error('登录已过期，请重新登录')\n          next(`/admin/login?redirect=${to.path}`)\n          NProgress.done()\n        }\n      }\n    }\n  } else {\n    // 未登录\n    if (requiresAuth) {\n      // 需要登录权限，跳转到登录页\n      next(`/admin/login?redirect=${to.path}`)\n      NProgress.done()\n    } else {\n      // 不需要登录权限，直接访问\n      next()\n    }\n  }\n})\n\n// 路由后置守卫\nrouter.afterEach(() => {\n  // 结束进度条\n  NProgress.done()\n})\n\nexport default router\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\locales\\zh-CN.js",["134"],"export default {\n  // 通用\n  common: {\n    appName: '设备预定系统',\n    loading: '加载中...',\n    success: '成功',\n    error: '错误',\n    warning: '警告',\n    info: '信息',\n    confirm: '确认',\n    cancel: '取消',\n    save: '保存',\n    edit: '编辑',\n    delete: '删除',\n    search: '搜索',\n    reset: '重置',\n    submit: '提交',\n    back: '返回',\n    more: '更多',\n    all: '全部',\n    yes: '是',\n    no: '否',\n    noData: '暂无数据',\n    operation: '操作',\n    status: '状态',\n    createTime: '创建时间',\n    updateTime: '更新时间'\n  },\n\n  // 导航\n  nav: {\n    home: '首页',\n    equipment: '设备列表',\n    reservation: '预定管理',\n    query: '查询预定',\n    admin: '管理控制台',\n    login: '登录',\n    logout: '退出登录'\n  },\n\n  // 首页\n  home: {\n    welcome: '欢迎使用设备预定系统',\n    description: '这是一个简单易用的设备预定系统，您可以在这里预定学校IT部门的各种设备。',\n    reserveEquipment: '预定设备',\n    queryReservation: '查询预定',\n    instructions: '使用说明',\n    step1: '浏览可用设备并选择您需要的设备',\n    step2: '选择预定时间段',\n    step3: '填写您的个人信息',\n    step4: '提交预定申请',\n    step5: '记录预定码，用于后续查询或取消预定',\n    contactInfo: '如有任何问题，请联系IT部门。'\n  },\n\n  // 设备\n  equipment: {\n    description: '浏览并预定系统中可用的各种设备。',\n    list: '设备列表',\n    detail: '设备详情',\n    name: '设备名称',\n    category: '设备类别',\n    model: '设备型号',\n    location: '设备位置',\n    status: '设备状态',\n    description: '设备描述',\n    userGuide: '使用指南',\n    userGuidePlaceholder: '请输入设备的详细使用步骤、注意事项等信息...',\n    videoTutorial: '视频教程',\n    videoTutorialPlaceholder: '请输入视频链接，支持YouTube、Bilibili等平台',\n    available: '可用',\n    maintenance: '维护中',\n    reserve: '预定此设备',\n    viewDetail: '查看详情',\n    noDescription: '暂无描述',\n    filter: '筛选',\n    allCategories: '所有类别',\n    allStatus: '所有状态',\n    searchPlaceholder: '搜索设备名称、型号或位置',\n    currentReservations: '当前预定情况',\n    noReservations: '当前没有预定记录'\n  },\n\n  // 预定\n  reservation: {\n    description: '轻松创建、管理和跟踪您的设备预定。',\n    queryDescription: '使用预定码或联系方式查询您的预定详情。',\n    form: '预定表单',\n    detail: '预定详情',\n    query: '查询预定',\n    code: '预定码',\n    equipmentName: '设备名称',\n    userName: '用户姓名',\n    userDepartment: '用户部门',\n    userContact: '联系方式',\n    userEmail: '用户邮箱（可选）',\n    startTime: '开始时间',\n    endTime: '结束时间',\n    purpose: '使用目的（可选）',\n    status: '状态',\n    confirmed: '已确认',\n    cancelled: '已取消',\n    createReservation: '创建预定',\n    updateReservation: '更新预定',\n    cancelReservation: '取消预定',\n    confirmCancel: '确认取消预定？',\n    cancelSuccess: '预定已取消',\n    createSuccess: '预定创建成功',\n    updateSuccess: '预定已更新',\n    queryPlaceholder: '请输入预定码',\n    contactPlaceholder: '请输入预定时使用的联系方式',\n    queryButton: '查询',\n    reservationNotFound: '预定不存在',\n    selectDate: '选择日期',\n    selectTime: '选择时间',\n    timeConflict: '所选时间段已被预定',\n    invalidTime: '开始时间必须早于结束时间',\n    requiredField: '此字段为必填项',\n    emailFormat: '请输入正确的邮箱格式',\n    phoneFormat: '请输入正确的手机号格式',\n    saveReservationCode: '请保存您的预定码',\n    reservationCodeTip: '您可以使用预定码查询、修改或取消预定。'\n  },\n\n  // 管理员\n  admin: {\n    uploadImage: '上传图片',\n    changeImage: '更换图片',\n    uploadEquipmentImage: '上传设备图片',\n    imageTip: '建议尺寸：300x200像素，最大2MB',\n    imageTypeError: '只允许上传图片文件',\n    imageSizeError: '图片大小不能超过2MB',\n    imageUploadSuccess: '图片上传成功',\n    imageUploadError: '图片上传失败',\n    richTextEditorTip: '您可以使用富文本编辑器添加格式化文本、列表、链接等内容',\n    videoTutorialTip: '输入视频链接后可以在设备详情页面查看视频教程',\n    importExport: '导入/导出',\n    importEquipment: '导入设备',\n    exportEquipment: '导出设备',\n    downloadTemplate: '下载模板',\n    importSuccess: '设备导入成功',\n    importError: '设备导入失败',\n    exportError: '设备导出失败',\n    templateError: '模板下载失败',\n    login: '管理员登录',\n    dashboard: '控制台',\n    equipment: '设备管理',\n    reservation: '预定管理',\n    settings: '系统设置',\n    username: '用户名',\n    password: '密码',\n    loginButton: '登录',\n    loginSuccess: '登录成功',\n    loginFailed: '登录失败，请检查用户名和密码',\n    welcome: '欢迎，',\n    statistics: '统计数据',\n    totalEquipment: '设备总数',\n    availableEquipment: '可用设备',\n    totalReservation: '预定总数',\n    activeReservation: '活跃预定',\n    recentReservations: '最近预定',\n    addEquipment: '添加设备',\n    editEquipment: '编辑设备',\n    deleteEquipment: '删除设备',\n    confirmDeleteEquipment: '确认删除此设备？',\n    equipmentDeleted: '设备已删除',\n    equipmentAdded: '设备已添加',\n    equipmentUpdated: '设备已更新',\n    viewReservation: '查看预定',\n    systemSettings: '系统设置',\n    siteName: '站点名称',\n    maintenanceMode: '维护模式',\n    reservationLimitPerDay: '每日预定限制',\n    allowEquipmentConflict: '允许设备冲突',\n    advanceReservationDays: '提前预定天数',\n    settingsSaved: '设置已保存'\n  },\n\n  // 错误页面\n  error: {\n    notFound: '页面未找到',\n    backHome: '返回首页',\n    serverError: '服务器错误',\n    unauthorized: '未授权访问',\n    forbidden: '禁止访问',\n    errorMessage: '出错了！'\n  }\n}\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\App.vue",["135"],"<template>\n  <div id=\"app\">\n    <el-container>\n      <el-header v-if=\"!isAdminRoute\">\n        <app-header />\n      </el-header>\n      <el-main>\n        <router-view />\n      </el-main>\n      <el-footer v-if=\"!isAdminRoute\">\n        <app-footer />\n      </el-footer>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport AppHeader from '@/components/layout/AppHeader.vue'\nimport AppFooter from '@/components/layout/AppFooter.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    AppHeader,\n    AppFooter\n  },\n  computed: {\n    isAdminRoute() {\n      return this.$route.path.startsWith('/admin')\n    }\n  }\n}\n</script>\n\n<style>\n/* 全局样式 */\nhtml, body {\n  margin: 0;\n  padding: 0;\n  height: 100%;\n  font-family: 'Helvetica Neue', Helvetica, 'PingFang SC', 'Hiragino Sans GB', 'Microsoft YaHei', '微软雅黑', Arial, sans-serif;\n}\n\n#app {\n  height: 100%;\n}\n\n.el-container {\n  height: 100%;\n}\n\n.el-header {\n  padding: 0;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n}\n\n.el-main {\n  padding: 20px;\n  background-color: #f5f7fa;\n}\n\n.el-footer {\n  padding: 20px;\n  background-color: #f5f7fa;\n  border-top: 1px solid #e6e6e6;\n}\n\n/* 响应式调整 */\n@media (max-width: 768px) {\n  .el-main {\n    padding: 10px;\n  }\n  \n  .el-footer {\n    padding: 10px;\n  }\n}\n\n/* 通用样式 */\n.page-title {\n  margin-bottom: 20px;\n  font-weight: bold;\n  color: #303133;\n}\n\n.text-center {\n  text-align: center;\n}\n\n.mb-20 {\n  margin-bottom: 20px;\n}\n\n.mt-20 {\n  margin-top: 20px;\n}\n\n/* 卡片样式 */\n.custom-card {\n  border-radius: 4px;\n  border: 1px solid #ebeef5;\n  background-color: #fff;\n  overflow: hidden;\n  color: #303133;\n  transition: 0.3s;\n  margin-bottom: 20px;\n}\n\n.custom-card:hover {\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.custom-card-header {\n  padding: 18px 20px;\n  border-bottom: 1px solid #ebeef5;\n  box-sizing: border-box;\n}\n\n.custom-card-body {\n  padding: 20px;\n}\n\n/* 表单样式 */\n.form-container {\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n/* 按钮样式 */\n.action-button {\n  margin-right: 10px;\n}\n\n/* 加载动画容器 */\n.loading-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100px;\n}\n</style>\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\locales\\en.js",["136"],"export default {\n  // Common\n  common: {\n    appName: 'Equipment Reservation System',\n    loading: 'Loading...',\n    success: 'Success',\n    error: 'Error',\n    warning: 'Warning',\n    info: 'Information',\n    confirm: 'Confirm',\n    cancel: 'Cancel',\n    save: 'Save',\n    edit: 'Edit',\n    delete: 'Delete',\n    search: 'Search',\n    reset: 'Reset',\n    submit: 'Submit',\n    back: 'Back',\n    more: 'More',\n    all: 'All',\n    yes: 'Yes',\n    no: 'No',\n    noData: 'No Data',\n    operation: 'Operation',\n    status: 'Status',\n    createTime: 'Create Time',\n    updateTime: 'Update Time'\n  },\n\n  // Navigation\n  nav: {\n    home: 'Home',\n    equipment: 'Equipment List',\n    reservation: 'Reservation Management',\n    query: 'Query Reservation',\n    admin: 'Admin Console',\n    login: 'Login',\n    logout: 'Logout'\n  },\n\n  // Home\n  home: {\n    welcome: 'Welcome to Equipment Reservation System',\n    description: 'This is a simple and easy-to-use equipment reservation system where you can reserve various equipment from the school IT department.',\n    reserveEquipment: 'Reserve Equipment',\n    queryReservation: 'Query Reservation',\n    instructions: 'Instructions',\n    step1: 'Browse available equipment and select the one you need',\n    step2: 'Choose reservation time slot',\n    step3: 'Fill in your personal information',\n    step4: 'Submit reservation request',\n    step5: 'Record the reservation code for future query or cancellation',\n    contactInfo: 'If you have any questions, please contact the IT department.'\n  },\n\n  // Equipment\n  equipment: {\n    description: 'Browse and reserve various equipment available in our system.',\n    list: 'Equipment List',\n    detail: 'Equipment Detail',\n    name: 'Equipment Name',\n    category: 'Category',\n    model: 'Model',\n    location: 'Location',\n    status: 'Status',\n    description: 'Description',\n    userGuide: 'User Guide',\n    userGuidePlaceholder: 'Please enter detailed usage steps, precautions and other information...',\n    videoTutorial: 'Video Tutorial',\n    videoTutorialPlaceholder: 'Please enter video link, supporting YouTube, Bilibili, etc.',\n    available: 'Available',\n    maintenance: 'Maintenance',\n    reserve: 'Reserve This Equipment',\n    viewDetail: 'View Detail',\n    noDescription: 'No description',\n    filter: 'Filter',\n    allCategories: 'All Categories',\n    allStatus: 'All Status',\n    searchPlaceholder: 'Search equipment name, model or location',\n    currentReservations: 'Current Reservations',\n    noReservations: 'No reservation records'\n  },\n\n  // Reservation\n  reservation: {\n    description: 'Create, manage and track your equipment reservations easily.',\n    queryDescription: 'Find your reservation details using reservation code or contact information.',\n    form: 'Reservation Form',\n    detail: 'Reservation Detail',\n    query: 'Query Reservation',\n    code: 'Reservation Code',\n    equipmentName: 'Equipment Name',\n    userName: 'User Name',\n    userDepartment: 'User Department',\n    userContact: 'Contact',\n    userEmail: 'Email (Optional)',\n    startTime: 'Start Time',\n    endTime: 'End Time',\n    purpose: 'Purpose (Optional)',\n    status: 'Status',\n    confirmed: 'Confirmed',\n    cancelled: 'Cancelled',\n    createReservation: 'Create Reservation',\n    updateReservation: 'Update Reservation',\n    cancelReservation: 'Cancel Reservation',\n    confirmCancel: 'Confirm to cancel the reservation?',\n    cancelSuccess: 'Reservation cancelled',\n    createSuccess: 'Reservation created successfully',\n    updateSuccess: 'Reservation updated',\n    queryPlaceholder: 'Please enter reservation code',\n    contactPlaceholder: 'Please enter the contact used when reserving',\n    queryButton: 'Query',\n    reservationNotFound: 'Reservation not found',\n    selectDate: 'Select Date',\n    selectTime: 'Select Time',\n    timeConflict: 'The selected time slot has been reserved',\n    invalidTime: 'Start time must be earlier than end time',\n    requiredField: 'This field is required',\n    emailFormat: 'Please enter a valid email format',\n    phoneFormat: 'Please enter a valid phone number format',\n    saveReservationCode: 'Please save your reservation code',\n    reservationCodeTip: 'You can use the reservation code to query, modify or cancel the reservation.'\n  },\n\n  // Admin\n  admin: {\n    uploadImage: 'Upload Image',\n    changeImage: 'Change Image',\n    uploadEquipmentImage: 'Upload Equipment Image',\n    imageTip: 'Recommended size: 300x200px, max 2MB',\n    imageTypeError: 'Only image files are allowed',\n    imageSizeError: 'Image size cannot exceed 2MB',\n    imageUploadSuccess: 'Image uploaded successfully',\n    imageUploadError: 'Failed to upload image',\n    richTextEditorTip: 'You can use the rich text editor to add formatted text, lists, links, etc.',\n    videoTutorialTip: 'Enter video link to display video tutorial on equipment detail page',\n    importExport: 'Import/Export',\n    importEquipment: 'Import Equipment',\n    exportEquipment: 'Export Equipment',\n    downloadTemplate: 'Download Template',\n    importSuccess: 'Equipment imported successfully',\n    importError: 'Failed to import equipment',\n    exportError: 'Failed to export equipment',\n    templateError: 'Failed to download template',\n    login: 'Admin Login',\n    dashboard: 'Dashboard',\n    equipment: 'Equipment Management',\n    reservation: 'Reservation Management',\n    settings: 'System Settings',\n    username: 'Username',\n    password: 'Password',\n    loginButton: 'Login',\n    loginSuccess: 'Login successful',\n    loginFailed: 'Login failed, please check username and password',\n    welcome: 'Welcome, ',\n    statistics: 'Statistics',\n    totalEquipment: 'Total Equipment',\n    availableEquipment: 'Available Equipment',\n    totalReservation: 'Total Reservations',\n    activeReservation: 'Active Reservations',\n    recentReservations: 'Recent Reservations',\n    addEquipment: 'Add Equipment',\n    editEquipment: 'Edit Equipment',\n    deleteEquipment: 'Delete Equipment',\n    confirmDeleteEquipment: 'Confirm to delete this equipment?',\n    equipmentDeleted: 'Equipment deleted',\n    equipmentAdded: 'Equipment added',\n    equipmentUpdated: 'Equipment updated',\n    viewReservation: 'View Reservation',\n    systemSettings: 'System Settings',\n    siteName: 'Site Name',\n    maintenanceMode: 'Maintenance Mode',\n    reservationLimitPerDay: 'Reservation Limit Per Day',\n    allowEquipmentConflict: 'Allow Equipment Conflict',\n    advanceReservationDays: 'Advance Reservation Days',\n    settingsSaved: 'Settings saved'\n  },\n\n  // Error\n  error: {\n    notFound: 'Page Not Found',\n    backHome: 'Back to Home',\n    serverError: 'Server Error',\n    unauthorized: 'Unauthorized Access',\n    forbidden: 'Forbidden Access',\n    errorMessage: 'Oops! Something went wrong!'\n  }\n}\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\router\\index.js",["137"],"import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport store from '@/store'\n\n// 导入视图组件\nimport Home from '@/views/Home.vue'\nimport EquipmentList from '@/views/equipment/EquipmentList.vue'\nimport EquipmentDetail from '@/views/equipment/EquipmentDetail.vue'\nimport ReservationForm from '@/views/reservation/ReservationForm.vue'\nimport ReservationQuery from '@/views/reservation/ReservationQuery.vue'\nimport ReservationDetail from '@/views/reservation/ReservationDetail.vue'\nimport AdminLogin from '@/views/admin/AdminLogin.vue'\nimport AdminDashboard from '@/views/admin/AdminDashboard.vue'\nimport AdminEquipment from '@/views/admin/AdminEquipment.vue'\nimport AdminReservation from '@/views/admin/AdminReservation.vue'\nimport AdminSettings from '@/views/admin/AdminSettings.vue'\nimport NotFound from '@/views/NotFound.vue'\n\nVue.use(VueRouter)\n\n// 路由配置\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: Home,\n    meta: { title: '首页' }\n  },\n  {\n    path: '/equipment',\n    name: 'equipment-list',\n    component: EquipmentList,\n    meta: { title: '设备列表' }\n  },\n  {\n    path: '/equipment/:id',\n    name: 'equipment-detail',\n    component: EquipmentDetail,\n    meta: { title: '设备详情' }\n  },\n  {\n    path: '/equipment/:id/reserve',\n    name: 'reservation-form',\n    component: ReservationForm,\n    meta: { title: '预定设备' }\n  },\n  {\n    path: '/reservation/query',\n    name: 'reservation-query',\n    component: ReservationQuery,\n    meta: { title: '查询预定' }\n  },\n  {\n    path: '/reservation/:code',\n    name: 'reservation-detail',\n    component: ReservationDetail,\n    meta: { title: '预定详情' }\n  },\n  {\n    path: '/admin/login',\n    name: 'admin-login',\n    component: AdminLogin,\n    meta: { title: '管理员登录' }\n  },\n  {\n    path: '/admin',\n    name: 'admin',\n    component: AdminDashboard,\n    meta: { title: '管理控制台', requiresAuth: true },\n    children: [\n      {\n        path: 'dashboard',\n        name: 'admin-dashboard',\n        component: AdminDashboard,\n        meta: { title: '控制台', requiresAuth: true }\n      },\n      {\n        path: 'equipment',\n        name: 'admin-equipment',\n        component: AdminEquipment,\n        meta: { title: '设备管理', requiresAuth: true }\n      },\n      {\n        path: 'reservation',\n        name: 'admin-reservation',\n        component: AdminReservation,\n        meta: { title: '预定管理', requiresAuth: true }\n      },\n      {\n        path: 'settings',\n        name: 'admin-settings',\n        component: AdminSettings,\n        meta: { title: '系统设置', requiresAuth: true }\n      }\n    ]\n  },\n  {\n    path: '*',\n    name: 'not-found',\n    component: NotFound,\n    meta: { title: '页面未找到' }\n  }\n]\n\nconst router = new VueRouter({\n  mode: 'hash',\n  base: process.env.BASE_URL,\n  routes\n})\n\n// 全局前置守卫\nrouter.beforeEach((to, from, next) => {\n  // 设置页面标题\n  document.title = to.meta.title ? `${to.meta.title} - 设备预定系统` : '设备预定系统'\n\n  // 检查是否需要登录\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    // 检查是否已登录\n    if (!store.getters.isLoggedIn) {\n      // 未登录，重定向到登录页\n      next({\n        path: '/admin/login',\n        query: { redirect: to.fullPath }\n      })\n    } else {\n      // 已登录，继续\n      next()\n    }\n  } else {\n    // 不需要登录，继续\n    next()\n  }\n})\n\nexport default router\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\store\\index.js",["138"],"import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    // 用户状态\n    token: localStorage.getItem('token') || '',\n    user: JSON.parse(localStorage.getItem('user') || '{}'),\n\n    // 设备数据\n    equipments: [],\n    equipmentTotal: 0,\n    equipmentCategories: [],\n\n    // 预定数据\n    reservations: [],\n    reservationTotal: 0,\n\n    // 系统设置\n    settings: {},\n\n    // 加载状态\n    loading: false,\n\n    // 语言设置\n    language: localStorage.getItem('language') || 'zh-CN'\n  },\n\n  getters: {\n    // 用户状态\n    isLoggedIn: state => !!state.token,\n    currentUser: state => state.user,\n    isAdmin: state => state.user && state.user.role === 'admin',\n    isSuperAdmin: state => state.user && state.user.role === 'superadmin',\n\n    // 设备数据\n    getEquipments: state => state.equipments,\n    getEquipmentTotal: state => state.equipmentTotal,\n    getEquipmentCategories: state => state.equipmentCategories,\n\n    // 预定数据\n    getReservations: state => state.reservations,\n    getReservationTotal: state => state.reservationTotal,\n\n    // 系统设置\n    getSettings: state => state.settings,\n\n    // 加载状态\n    isLoading: state => state.loading,\n\n    // 语言设置\n    getLanguage: state => state.language\n  },\n\n  mutations: {\n    // 用户状态\n    SET_TOKEN(state, token) {\n      state.token = token\n    },\n    SET_USER(state, user) {\n      state.user = user\n    },\n    CLEAR_AUTH(state) {\n      state.token = ''\n      state.user = {}\n    },\n\n    // 设备数据\n    SET_EQUIPMENTS(state, { items, total }) {\n      state.equipments = items\n      state.equipmentTotal = total\n    },\n    SET_EQUIPMENT_CATEGORIES(state, categories) {\n      state.equipmentCategories = categories\n    },\n\n    // 预定数据\n    SET_RESERVATIONS(state, { items, total }) {\n      state.reservations = items\n      state.reservationTotal = total\n    },\n\n    // 系统设置\n    SET_SETTINGS(state, settings) {\n      state.settings = settings\n    },\n\n    // 加载状态\n    SET_LOADING(state, isLoading) {\n      state.loading = isLoading\n    },\n\n    // 语言设置\n    SET_LANGUAGE(state, language) {\n      state.language = language\n      localStorage.setItem('language', language)\n    }\n  },\n\n  actions: {\n    // 用户登录\n    async login({ commit }, credentials) {\n      try {\n        commit('SET_LOADING', true)\n\n        // 创建表单数据\n        const formData = new FormData()\n        formData.append('username', credentials.username)\n        formData.append('password', credentials.password)\n\n        // 发送登录请求\n        const response = await axios.post('/api/admin/login', formData)\n\n        // 保存令牌和用户信息\n        const token = response.data.access_token\n        const user = {\n          id: response.data.admin_id,\n          username: response.data.username,\n          name: response.data.name,\n          role: response.data.role\n        }\n\n        // 更新状态\n        commit('SET_TOKEN', token)\n        commit('SET_USER', user)\n\n        // 保存到本地存储\n        localStorage.setItem('token', token)\n        localStorage.setItem('user', JSON.stringify(user))\n\n        return true\n      } catch (error) {\n        console.error('Login error:', error)\n        return false\n      } finally {\n        commit('SET_LOADING', false)\n      }\n    },\n\n    // 用户登出\n    logout({ commit }) {\n      // 清除状态\n      commit('CLEAR_AUTH')\n\n      // 清除本地存储\n      localStorage.removeItem('token')\n      localStorage.removeItem('user')\n    },\n\n    // 获取设备列表\n    async fetchEquipments({ commit }, { page = 1, limit = 10, category = null, status = null, search = null }) {\n      try {\n        commit('SET_LOADING', true)\n\n        // 构建查询参数\n        const params = {\n          skip: (page - 1) * limit,\n          limit,\n          category,\n          status,\n          search\n        }\n\n        // 发送请求\n        const response = await axios.get('/api/equipment', { params })\n\n        // 更新状态\n        commit('SET_EQUIPMENTS', response.data)\n\n        return response.data\n      } catch (error) {\n        console.error('Fetch equipments error:', error)\n        return { items: [], total: 0 }\n      } finally {\n        commit('SET_LOADING', false)\n      }\n    },\n\n    // 获取设备类别\n    async fetchEquipmentCategories({ commit }) {\n      try {\n        commit('SET_LOADING', true)\n\n        // 发送请求\n        const response = await axios.get('/api/equipment/categories')\n\n        // 更新状态\n        commit('SET_EQUIPMENT_CATEGORIES', response.data.categories)\n\n        return response.data.categories\n      } catch (error) {\n        console.error('Fetch equipment categories error:', error)\n        return []\n      } finally {\n        commit('SET_LOADING', false)\n      }\n    },\n\n    // 获取预定列表\n    async fetchReservations({ commit }, { page = 1, limit = 10, equipmentId = null, userName = null, status = null, fromDate = null, toDate = null }) {\n      try {\n        commit('SET_LOADING', true)\n\n        // 构建查询参数\n        const params = {\n          skip: (page - 1) * limit,\n          limit,\n          equipment_id: equipmentId,\n          user_name: userName,\n          status,\n          from_date: fromDate,\n          to_date: toDate\n        }\n\n        // 发送请求\n        const response = await axios.get('/api/reservation', { params })\n\n        // 更新状态\n        commit('SET_RESERVATIONS', response.data)\n\n        return response.data\n      } catch (error) {\n        console.error('Fetch reservations error:', error)\n        return { items: [], total: 0 }\n      } finally {\n        commit('SET_LOADING', false)\n      }\n    },\n\n    // 获取系统设置\n    async fetchSettings({ commit }) {\n      try {\n        commit('SET_LOADING', true)\n\n        // 发送请求\n        const response = await axios.get('/api/admin/settings')\n\n        // 更新状态\n        commit('SET_SETTINGS', response.data)\n\n        return response.data\n      } catch (error) {\n        console.error('Fetch settings error:', error)\n        return {}\n      } finally {\n        commit('SET_LOADING', false)\n      }\n    },\n\n    // 设置语言\n    setLanguage({ commit }, language) {\n      commit('SET_LANGUAGE', language)\n    }\n  },\n\n  modules: {\n    // 可以在这里添加模块\n  }\n})\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\Home.vue",["139"],"<template>\n  <div class=\"home-page\">\n    <div class=\"banner\">\n      <h1>{{ $t('home.welcome') }}</h1>\n      <p class=\"description\">{{ $t('home.description') }}</p>\n      <div class=\"banner-buttons\">\n        <el-button type=\"primary\" size=\"large\" @click=\"goToEquipment\">\n          {{ $t('home.reserveEquipment') }}\n        </el-button>\n        <el-button type=\"success\" size=\"large\" @click=\"goToQuery\">\n          {{ $t('home.queryReservation') }}\n        </el-button>\n      </div>\n    </div>\n    \n    <div class=\"features\">\n      <el-row :gutter=\"20\">\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\">\n          <div class=\"feature-card\">\n            <i class=\"el-icon-s-grid feature-icon\"></i>\n            <h3>{{ $t('equipment.list') }}</h3>\n            <p>{{ $t('equipment.description') }}</p>\n            <el-button type=\"text\" @click=\"goToEquipment\">\n              {{ $t('equipment.viewDetail') }} <i class=\"el-icon-arrow-right\"></i>\n            </el-button>\n          </div>\n        </el-col>\n        \n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\">\n          <div class=\"feature-card\">\n            <i class=\"el-icon-date feature-icon\"></i>\n            <h3>{{ $t('reservation.form') }}</h3>\n            <p>{{ $t('reservation.description') }}</p>\n            <el-button type=\"text\" @click=\"goToEquipment\">\n              {{ $t('reservation.createReservation') }} <i class=\"el-icon-arrow-right\"></i>\n            </el-button>\n          </div>\n        </el-col>\n        \n        <el-col :xs=\"24\" :sm=\"12\" :md=\"8\">\n          <div class=\"feature-card\">\n            <i class=\"el-icon-search feature-icon\"></i>\n            <h3>{{ $t('reservation.query') }}</h3>\n            <p>{{ $t('reservation.queryDescription') }}</p>\n            <el-button type=\"text\" @click=\"goToQuery\">\n              {{ $t('reservation.queryButton') }} <i class=\"el-icon-arrow-right\"></i>\n            </el-button>\n          </div>\n        </el-col>\n      </el-row>\n    </div>\n    \n    <div class=\"instructions\">\n      <h2>{{ $t('home.instructions') }}</h2>\n      <el-steps :active=\"5\" finish-status=\"success\" simple>\n        <el-step :title=\"$t('home.step1')\"></el-step>\n        <el-step :title=\"$t('home.step2')\"></el-step>\n        <el-step :title=\"$t('home.step3')\"></el-step>\n        <el-step :title=\"$t('home.step4')\"></el-step>\n        <el-step :title=\"$t('home.step5')\"></el-step>\n      </el-steps>\n      <p class=\"contact-info\">{{ $t('home.contactInfo') }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HomePage',\n  \n  methods: {\n    goToEquipment() {\n      this.$router.push('/equipment')\n    },\n    \n    goToQuery() {\n      this.$router.push('/reservation/query')\n    }\n  }\n}\n</script>\n\n<style scoped>\n.home-page {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.banner {\n  text-align: center;\n  padding: 60px 20px;\n  background-color: #f0f9ff;\n  border-radius: 8px;\n  margin-bottom: 40px;\n}\n\n.banner h1 {\n  font-size: 2.5rem;\n  color: #303133;\n  margin-bottom: 20px;\n}\n\n.description {\n  font-size: 1.2rem;\n  color: #606266;\n  max-width: 800px;\n  margin: 0 auto 30px;\n}\n\n.banner-buttons {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n}\n\n.features {\n  margin-bottom: 40px;\n}\n\n.feature-card {\n  background-color: #fff;\n  border-radius: 8px;\n  padding: 30px;\n  text-align: center;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  height: 100%;\n  transition: transform 0.3s, box-shadow 0.3s;\n}\n\n.feature-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.2);\n}\n\n.feature-icon {\n  font-size: 3rem;\n  color: #409EFF;\n  margin-bottom: 20px;\n}\n\n.feature-card h3 {\n  font-size: 1.5rem;\n  color: #303133;\n  margin-bottom: 15px;\n}\n\n.feature-card p {\n  color: #606266;\n  margin-bottom: 20px;\n}\n\n.instructions {\n  background-color: #fff;\n  border-radius: 8px;\n  padding: 30px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.instructions h2 {\n  text-align: center;\n  margin-bottom: 30px;\n  color: #303133;\n}\n\n.contact-info {\n  text-align: center;\n  margin-top: 30px;\n  color: #606266;\n}\n\n@media (max-width: 768px) {\n  .banner {\n    padding: 40px 20px;\n  }\n  \n  .banner h1 {\n    font-size: 2rem;\n  }\n  \n  .description {\n    font-size: 1rem;\n  }\n  \n  .banner-buttons {\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n  }\n  \n  .feature-card {\n    margin-bottom: 20px;\n  }\n}\n</style>\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\NotFound.vue",["140"],"<template>\n  <div class=\"not-found\">\n    <div class=\"error-container\">\n      <div class=\"error-code\">404</div>\n      <h1>{{ $t('error.notFound') }}</h1>\n      <p>{{ $t('error.errorMessage') }}</p>\n      <el-button type=\"primary\" @click=\"goHome\">\n        {{ $t('error.backHome') }}\n      </el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'NotFound',\n  \n  methods: {\n    goHome() {\n      this.$router.push('/')\n    }\n  }\n}\n</script>\n\n<style scoped>\n.not-found {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 70vh;\n}\n\n.error-container {\n  text-align: center;\n  max-width: 500px;\n  padding: 40px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.error-code {\n  font-size: 8rem;\n  font-weight: bold;\n  color: #409EFF;\n  line-height: 1;\n  margin-bottom: 20px;\n}\n\nh1 {\n  font-size: 2rem;\n  color: #303133;\n  margin-bottom: 20px;\n}\n\np {\n  color: #606266;\n  margin-bottom: 30px;\n}\n</style>\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\reservation\\ReservationDetail.vue",["141"],"<template>\n  <div class=\"reservation-detail\">\n    <div v-if=\"loading\" class=\"loading-container\">\n      <el-skeleton :rows=\"10\" animated />\n    </div>\n    \n    <div v-else-if=\"!reservation\" class=\"error-container\">\n      <el-result\n        icon=\"error\"\n        :title=\"$t('error.errorMessage')\"\n        :sub-title=\"$t('reservation.reservationNotFound')\"\n      >\n        <template #extra>\n          <el-button type=\"primary\" @click=\"$router.push('/reservation/query')\">\n            {{ $t('reservation.query') }}\n          </el-button>\n        </template>\n      </el-result>\n    </div>\n    \n    <div v-else>\n      <!-- 返回按钮 -->\n      <div class=\"back-link\">\n        <el-button icon=\"el-icon-arrow-left\" @click=\"$router.push('/reservation/query')\">\n          {{ $t('common.back') }}\n        </el-button>\n      </div>\n      \n      <h1 class=\"page-title\">{{ $t('reservation.detail') }}</h1>\n      \n      <!-- 预定状态 -->\n      <div class=\"reservation-status-card\" :class=\"{ 'cancelled': reservation.status === 'cancelled' }\">\n        <div class=\"status-icon\">\n          <i :class=\"reservation.status === 'confirmed' ? 'el-icon-success' : 'el-icon-close'\"></i>\n        </div>\n        <div class=\"status-text\">\n          <h2>{{ reservation.status === 'confirmed' ? $t('reservation.confirmed') : $t('reservation.cancelled') }}</h2>\n          <p>{{ $t('reservation.code') }}: {{ reservation.reservation_code }}</p>\n        </div>\n      </div>\n      \n      <!-- 预定详情 -->\n      <el-card shadow=\"never\" class=\"detail-card\">\n        <div slot=\"header\">\n          <span>{{ $t('reservation.detail') }}</span>\n        </div>\n        \n        <el-descriptions :column=\"1\" border>\n          <el-descriptions-item :label=\"$t('reservation.equipmentName')\">\n            {{ reservation.equipment_name }}\n          </el-descriptions-item>\n          \n          <el-descriptions-item :label=\"$t('equipment.category')\" v-if=\"reservation.equipment_category\">\n            {{ reservation.equipment_category }}\n          </el-descriptions-item>\n          \n          <el-descriptions-item :label=\"$t('equipment.location')\" v-if=\"reservation.equipment_location\">\n            {{ reservation.equipment_location }}\n          </el-descriptions-item>\n          \n          <el-descriptions-item :label=\"$t('reservation.startTime')\">\n            {{ formatDateTime(reservation.start_datetime) }}\n          </el-descriptions-item>\n          \n          <el-descriptions-item :label=\"$t('reservation.endTime')\">\n            {{ formatDateTime(reservation.end_datetime) }}\n          </el-descriptions-item>\n          \n          <el-descriptions-item :label=\"$t('reservation.purpose')\" v-if=\"reservation.purpose\">\n            {{ reservation.purpose }}\n          </el-descriptions-item>\n        </el-descriptions>\n      </el-card>\n      \n      <!-- 用户信息 -->\n      <el-card shadow=\"never\" class=\"user-card\">\n        <div slot=\"header\">\n          <span>{{ $t('common.userInfo') }}</span>\n        </div>\n        \n        <el-descriptions :column=\"1\" border>\n          <el-descriptions-item :label=\"$t('reservation.userName')\">\n            {{ reservation.user_name }}\n          </el-descriptions-item>\n          \n          <el-descriptions-item :label=\"$t('reservation.userDepartment')\">\n            {{ reservation.user_department }}\n          </el-descriptions-item>\n          \n          <el-descriptions-item :label=\"$t('reservation.userContact')\">\n            {{ reservation.user_contact }}\n          </el-descriptions-item>\n          \n          <el-descriptions-item :label=\"$t('reservation.userEmail')\" v-if=\"reservation.user_email\">\n            {{ reservation.user_email }}\n          </el-descriptions-item>\n        </el-descriptions>\n      </el-card>\n      \n      <!-- 二维码 -->\n      <el-card v-if=\"reservation.qrcode_url\" shadow=\"never\" class=\"qrcode-card\">\n        <div slot=\"header\">\n          <span>{{ $t('common.qrcode') }}</span>\n        </div>\n        \n        <div class=\"qrcode-container\">\n          <img :src=\"reservation.qrcode_url\" alt=\"QR Code\" class=\"qrcode-image\" />\n          <p>{{ $t('reservation.scanQrcode') }}</p>\n        </div>\n      </el-card>\n      \n      <!-- 操作按钮 -->\n      <div class=\"action-buttons\" v-if=\"reservation.status === 'confirmed'\">\n        <el-button\n          type=\"danger\"\n          @click=\"showCancelDialog\"\n        >\n          {{ $t('reservation.cancelReservation') }}\n        </el-button>\n      </div>\n      \n      <!-- 取消预定对话框 -->\n      <el-dialog\n        :title=\"$t('reservation.cancelReservation')\"\n        :visible.sync=\"cancelDialogVisible\"\n        width=\"500px\"\n      >\n        <div class=\"cancel-content\">\n          <p>{{ $t('reservation.confirmCancel') }}</p>\n          \n          <el-form ref=\"cancelForm\" :model=\"cancelForm\" label-position=\"top\">\n            <el-form-item :label=\"$t('reservation.cancelReason')\">\n              <el-input\n                v-model=\"cancelForm.reason\"\n                type=\"textarea\"\n                :rows=\"3\"\n              ></el-input>\n            </el-form-item>\n          </el-form>\n        </div>\n        \n        <span slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"cancelDialogVisible = false\">{{ $t('common.cancel') }}</el-button>\n          <el-button type=\"danger\" :loading=\"cancelling\" @click=\"cancelReservation\">{{ $t('common.confirm') }}</el-button>\n        </span>\n      </el-dialog>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { reservationApi } from '@/api'\n\nexport default {\n  name: 'ReservationDetail',\n  \n  data() {\n    return {\n      loading: false,\n      cancelling: false,\n      reservation: null,\n      cancelDialogVisible: false,\n      cancelForm: {\n        reason: ''\n      }\n    }\n  },\n  \n  created() {\n    this.fetchReservation()\n  },\n  \n  methods: {\n    async fetchReservation() {\n      this.loading = true\n      try {\n        const reservationCode = this.$route.params.code\n        const response = await reservationApi.getReservation(reservationCode)\n        \n        if (response.data.success) {\n          this.reservation = response.data.data\n        } else {\n          this.reservation = null\n        }\n      } catch (error) {\n        console.error('Failed to fetch reservation:', error)\n        this.$message.error(this.$t('common.error'))\n        this.reservation = null\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    showCancelDialog() {\n      this.cancelDialogVisible = true\n    },\n    \n    async cancelReservation() {\n      this.cancelling = true\n      try {\n        const reservationCode = this.reservation.reservation_code\n        const data = {\n          reason: this.cancelForm.reason,\n          user_email: this.reservation.user_email,\n          lang: this.$i18n.locale\n        }\n        \n        const response = await reservationApi.cancelReservation(reservationCode, data)\n        \n        if (response.data.success) {\n          this.$message.success(this.$t('reservation.cancelSuccess'))\n          this.cancelDialogVisible = false\n          \n          // 重新获取预定信息\n          this.fetchReservation()\n        } else {\n          this.$message.error(response.data.message || this.$t('common.error'))\n        }\n      } catch (error) {\n        console.error('Failed to cancel reservation:', error)\n        this.$message.error(this.$t('common.error'))\n      } finally {\n        this.cancelling = false\n      }\n    },\n    \n    formatDateTime(dateTime) {\n      if (!dateTime) return ''\n      \n      const date = new Date(dateTime)\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`\n    }\n  }\n}\n</script>\n\n<style scoped>\n.reservation-detail {\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.back-link {\n  margin-bottom: 20px;\n}\n\n.page-title {\n  margin-bottom: 20px;\n  font-size: 24px;\n  color: #303133;\n}\n\n.reservation-status-card {\n  display: flex;\n  align-items: center;\n  padding: 20px;\n  background-color: #f0f9eb;\n  border-radius: 4px;\n  margin-bottom: 20px;\n}\n\n.reservation-status-card.cancelled {\n  background-color: #fef0f0;\n}\n\n.status-icon {\n  font-size: 48px;\n  margin-right: 20px;\n  color: #67c23a;\n}\n\n.reservation-status-card.cancelled .status-icon {\n  color: #f56c6c;\n}\n\n.status-text h2 {\n  margin: 0 0 10px;\n  font-size: 20px;\n  color: #67c23a;\n}\n\n.reservation-status-card.cancelled .status-text h2 {\n  color: #f56c6c;\n}\n\n.status-text p {\n  margin: 0;\n  font-size: 16px;\n  color: #606266;\n}\n\n.detail-card,\n.user-card,\n.qrcode-card {\n  margin-bottom: 20px;\n}\n\n.qrcode-container {\n  text-align: center;\n}\n\n.qrcode-image {\n  max-width: 200px;\n  border: 1px solid #EBEEF5;\n  padding: 10px;\n  background-color: white;\n  margin-bottom: 10px;\n}\n\n.action-buttons {\n  margin-top: 30px;\n  text-align: center;\n}\n\n.loading-container {\n  padding: 40px 0;\n}\n\n.error-container {\n  padding: 40px 0;\n  text-align: center;\n}\n\n.cancel-content p {\n  margin-top: 0;\n  margin-bottom: 20px;\n}\n</style>\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\reservation\\ReservationForm.vue",["142"],"<template>\n  <div class=\"reservation-form\">\n    <div v-if=\"loading\" class=\"loading-container\">\n      <el-skeleton :rows=\"10\" animated />\n    </div>\n    \n    <div v-else-if=\"!equipment\" class=\"error-container\">\n      <el-result\n        icon=\"error\"\n        :title=\"$t('error.errorMessage')\"\n        :sub-title=\"$t('equipment.notFound')\"\n      >\n        <template #extra>\n          <el-button type=\"primary\" @click=\"$router.push('/equipment')\">\n            {{ $t('equipment.list') }}\n          </el-button>\n        </template>\n      </el-result>\n    </div>\n    \n    <div v-else>\n      <!-- 返回按钮 -->\n      <div class=\"back-link\">\n        <el-button icon=\"el-icon-arrow-left\" @click=\"$router.push(`/equipment/${equipment.id}`)\">\n          {{ $t('common.back') }}\n        </el-button>\n      </div>\n      \n      <h1 class=\"page-title\">{{ $t('reservation.form') }}</h1>\n      \n      <!-- 设备信息 -->\n      <el-card shadow=\"never\" class=\"equipment-card\">\n        <div class=\"equipment-info\">\n          <div class=\"equipment-image-container\">\n            <img\n              :src=\"equipment.image_path || '/static/images/default_equipment.png'\"\n              :alt=\"equipment.name\"\n              class=\"equipment-image\"\n            />\n          </div>\n          \n          <div class=\"equipment-details\">\n            <h2 class=\"equipment-name\">{{ equipment.name }}</h2>\n            <p class=\"equipment-category\">{{ equipment.category }}</p>\n            \n            <div v-if=\"equipment.location\" class=\"equipment-location\">\n              <i class=\"el-icon-location\"></i> {{ equipment.location }}\n            </div>\n            \n            <el-tag\n              :type=\"equipment.status === 'available' ? 'success' : 'warning'\"\n              size=\"medium\"\n            >\n              {{ equipment.status === 'available' ? $t('equipment.available') : $t('equipment.maintenance') }}\n            </el-tag>\n          </div>\n        </div>\n      </el-card>\n      \n      <!-- 预定表单 -->\n      <el-card shadow=\"never\" class=\"form-card\">\n        <el-form\n          ref=\"reservationForm\"\n          :model=\"form\"\n          :rules=\"rules\"\n          label-position=\"top\"\n          size=\"medium\"\n        >\n          <!-- 时间选择 -->\n          <el-divider>{{ $t('reservation.selectTime') }}</el-divider>\n          \n          <el-row :gutter=\"20\">\n            <el-col :xs=\"24\" :sm=\"12\">\n              <el-form-item :label=\"$t('reservation.startTime')\" prop=\"startDateTime\">\n                <el-date-picker\n                  v-model=\"form.startDateTime\"\n                  type=\"datetime\"\n                  :placeholder=\"$t('reservation.startTime')\"\n                  style=\"width: 100%\"\n                  :picker-options=\"startPickerOptions\"\n                  @change=\"checkTimeAvailability\"\n                ></el-date-picker>\n              </el-form-item>\n            </el-col>\n            \n            <el-col :xs=\"24\" :sm=\"12\">\n              <el-form-item :label=\"$t('reservation.endTime')\" prop=\"endDateTime\">\n                <el-date-picker\n                  v-model=\"form.endDateTime\"\n                  type=\"datetime\"\n                  :placeholder=\"$t('reservation.endTime')\"\n                  style=\"width: 100%\"\n                  :picker-options=\"endPickerOptions\"\n                  @change=\"checkTimeAvailability\"\n                ></el-date-picker>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          \n          <div v-if=\"timeConflict\" class=\"time-conflict-warning\">\n            <el-alert\n              :title=\"$t('reservation.timeConflict')\"\n              type=\"error\"\n              :closable=\"false\"\n              show-icon\n            ></el-alert>\n          </div>\n          \n          <!-- 用户信息 -->\n          <el-divider>{{ $t('common.userInfo') }}</el-divider>\n          \n          <el-row :gutter=\"20\">\n            <el-col :xs=\"24\" :sm=\"12\">\n              <el-form-item :label=\"$t('reservation.userName')\" prop=\"userName\">\n                <el-input v-model=\"form.userName\"></el-input>\n              </el-form-item>\n            </el-col>\n            \n            <el-col :xs=\"24\" :sm=\"12\">\n              <el-form-item :label=\"$t('reservation.userDepartment')\" prop=\"userDepartment\">\n                <el-input v-model=\"form.userDepartment\"></el-input>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          \n          <el-row :gutter=\"20\">\n            <el-col :xs=\"24\" :sm=\"12\">\n              <el-form-item :label=\"$t('reservation.userContact')\" prop=\"userContact\">\n                <el-input v-model=\"form.userContact\"></el-input>\n              </el-form-item>\n            </el-col>\n            \n            <el-col :xs=\"24\" :sm=\"12\">\n              <el-form-item :label=\"$t('reservation.userEmail')\" prop=\"userEmail\">\n                <el-input v-model=\"form.userEmail\" type=\"email\"></el-input>\n              </el-form-item>\n            </el-col>\n          </el-row>\n          \n          <el-form-item :label=\"$t('reservation.purpose')\" prop=\"purpose\">\n            <el-input\n              v-model=\"form.purpose\"\n              type=\"textarea\"\n              :rows=\"3\"\n            ></el-input>\n          </el-form-item>\n          \n          <el-form-item>\n            <el-button\n              type=\"primary\"\n              :loading=\"submitting\"\n              @click=\"submitForm\"\n              :disabled=\"timeConflict\"\n            >\n              {{ $t('reservation.createReservation') }}\n            </el-button>\n            <el-button @click=\"resetForm\">{{ $t('common.reset') }}</el-button>\n          </el-form-item>\n        </el-form>\n      </el-card>\n      \n      <!-- 预定成功对话框 -->\n      <el-dialog\n        :title=\"$t('reservation.createSuccess')\"\n        :visible.sync=\"successDialogVisible\"\n        width=\"500px\"\n        :close-on-click-modal=\"false\"\n        :close-on-press-escape=\"false\"\n        :show-close=\"false\"\n      >\n        <div class=\"success-content\">\n          <i class=\"el-icon-success success-icon\"></i>\n          \n          <p class=\"success-message\">{{ $t('reservation.saveReservationCode') }}</p>\n          \n          <div class=\"reservation-code\">\n            {{ reservationCode }}\n          </div>\n          \n          <div v-if=\"qrcodeUrl\" class=\"qrcode-container\">\n            <img :src=\"qrcodeUrl\" alt=\"QR Code\" class=\"qrcode-image\" />\n          </div>\n          \n          <p class=\"reservation-tip\">{{ $t('reservation.reservationCodeTip') }}</p>\n          \n          <div class=\"dialog-footer\">\n            <el-button @click=\"viewReservation\">{{ $t('reservation.viewDetail') }}</el-button>\n            <el-button type=\"primary\" @click=\"closeSuccessDialog\">{{ $t('common.confirm') }}</el-button>\n          </div>\n        </div>\n      </el-dialog>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { equipmentApi, reservationApi } from '@/api'\n\nexport default {\n  name: 'ReservationForm',\n  \n  data() {\n    // 表单验证规则\n    const validateTime = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error(this.$t('reservation.requiredField')))\n      } else if (this.form.startDateTime && this.form.endDateTime) {\n        if (this.form.startDateTime >= this.form.endDateTime) {\n          callback(new Error(this.$t('reservation.invalidTime')))\n        } else {\n          callback()\n        }\n      } else {\n        callback()\n      }\n    }\n    \n    const validateEmail = (rule, value, callback) => {\n      if (!value) {\n        callback()\n      } else {\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n        if (!emailRegex.test(value)) {\n          callback(new Error(this.$t('reservation.emailFormat')))\n        } else {\n          callback()\n        }\n      }\n    }\n    \n    return {\n      loading: false,\n      submitting: false,\n      equipment: null,\n      timeConflict: false,\n      successDialogVisible: false,\n      reservationCode: '',\n      qrcodeUrl: '',\n      \n      form: {\n        startDateTime: '',\n        endDateTime: '',\n        userName: '',\n        userDepartment: '',\n        userContact: '',\n        userEmail: '',\n        purpose: ''\n      },\n      \n      rules: {\n        startDateTime: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'change' },\n          { validator: validateTime, trigger: 'change' }\n        ],\n        endDateTime: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'change' },\n          { validator: validateTime, trigger: 'change' }\n        ],\n        userName: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'blur' },\n          { min: 2, max: 50, message: this.$t('common.lengthLimit', { min: 2, max: 50 }), trigger: 'blur' }\n        ],\n        userDepartment: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'blur' },\n          { min: 2, max: 50, message: this.$t('common.lengthLimit', { min: 2, max: 50 }), trigger: 'blur' }\n        ],\n        userContact: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'blur' },\n          { min: 5, max: 50, message: this.$t('common.lengthLimit', { min: 5, max: 50 }), trigger: 'blur' }\n        ],\n        userEmail: [\n          { validator: validateEmail, trigger: 'blur' }\n        ],\n        purpose: [\n          { max: 500, message: this.$t('common.lengthLimit', { max: 500 }), trigger: 'blur' }\n        ]\n      },\n      \n      startPickerOptions: {\n        disabledDate(time) {\n          return time.getTime() < Date.now() - 8.64e7 // 不能选择过去的日期\n        }\n      },\n      \n      endPickerOptions: {\n        disabledDate(time) {\n          return time.getTime() < Date.now() - 8.64e7 // 不能选择过去的日期\n        }\n      }\n    }\n  },\n  \n  created() {\n    this.fetchEquipment()\n  },\n  \n  methods: {\n    async fetchEquipment() {\n      this.loading = true\n      try {\n        const equipmentId = this.$route.params.id\n        const response = await equipmentApi.getEquipment(equipmentId)\n        this.equipment = response.data\n        \n        if (this.equipment.status !== 'available') {\n          this.$message.warning(this.$t('equipment.notAvailable'))\n        }\n      } catch (error) {\n        console.error('Failed to fetch equipment:', error)\n        this.$message.error(this.$t('common.error'))\n        this.equipment = null\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    async checkTimeAvailability() {\n      if (!this.form.startDateTime || !this.form.endDateTime) {\n        this.timeConflict = false\n        return\n      }\n      \n      if (this.form.startDateTime >= this.form.endDateTime) {\n        this.timeConflict = true\n        return\n      }\n      \n      try {\n        const equipmentId = this.equipment.id\n        const startDate = this.formatDateTime(this.form.startDateTime)\n        const endDate = this.formatDateTime(this.form.endDateTime)\n        \n        const response = await equipmentApi.getAvailability(equipmentId, startDate, endDate)\n        \n        // 检查是否有冲突\n        this.timeConflict = response.data.available.includes(false)\n      } catch (error) {\n        console.error('Failed to check availability:', error)\n        this.$message.error(this.$t('common.error'))\n        this.timeConflict = true\n      }\n    },\n    \n    submitForm() {\n      this.$refs.reservationForm.validate(async (valid) => {\n        if (!valid) {\n          return false\n        }\n        \n        if (this.timeConflict) {\n          this.$message.error(this.$t('reservation.timeConflict'))\n          return false\n        }\n        \n        this.submitting = true\n        \n        try {\n          const reservationData = {\n            equipment_id: this.equipment.id,\n            user_name: this.form.userName,\n            user_department: this.form.userDepartment,\n            user_contact: this.form.userContact,\n            user_email: this.form.userEmail || undefined,\n            start_datetime: this.formatDateTime(this.form.startDateTime),\n            end_datetime: this.formatDateTime(this.form.endDateTime),\n            purpose: this.form.purpose || undefined,\n            lang: this.$i18n.locale\n          }\n          \n          const response = await reservationApi.createReservation(reservationData)\n          \n          if (response.data.success) {\n            // 获取预定码和二维码\n            this.reservationCode = response.data.data.reservation_code\n            \n            try {\n              const qrcodeResponse = await reservationApi.getReservationQrcode(this.reservationCode)\n              this.qrcodeUrl = qrcodeResponse.data.qrcode_url\n            } catch (error) {\n              console.error('Failed to get QR code:', error)\n              this.qrcodeUrl = ''\n            }\n            \n            // 显示成功对话框\n            this.successDialogVisible = true\n          } else {\n            this.$message.error(response.data.message || this.$t('common.error'))\n          }\n        } catch (error) {\n          console.error('Failed to create reservation:', error)\n          this.$message.error(this.$t('common.error'))\n        } finally {\n          this.submitting = false\n        }\n      })\n    },\n    \n    resetForm() {\n      this.$refs.reservationForm.resetFields()\n      this.timeConflict = false\n    },\n    \n    viewReservation() {\n      this.$router.push(`/reservation/${this.reservationCode}`)\n    },\n    \n    closeSuccessDialog() {\n      this.successDialogVisible = false\n      this.resetForm()\n      this.$router.push('/equipment')\n    },\n    \n    formatDateTime(dateTime) {\n      if (!dateTime) return ''\n      \n      const date = new Date(dateTime)\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}T${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`\n    }\n  }\n}\n</script>\n\n<style scoped>\n.reservation-form {\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.back-link {\n  margin-bottom: 20px;\n}\n\n.page-title {\n  margin-bottom: 20px;\n  font-size: 24px;\n  color: #303133;\n}\n\n.equipment-card {\n  margin-bottom: 20px;\n}\n\n.equipment-info {\n  display: flex;\n  align-items: center;\n}\n\n.equipment-image-container {\n  width: 100px;\n  height: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  background-color: #f5f7fa;\n  border-radius: 4px;\n  margin-right: 20px;\n}\n\n.equipment-image {\n  max-height: 100%;\n  max-width: 100%;\n  object-fit: contain;\n}\n\n.equipment-details {\n  flex: 1;\n}\n\n.equipment-name {\n  margin: 0 0 5px;\n  font-size: 18px;\n  color: #303133;\n}\n\n.equipment-category {\n  margin: 0 0 10px;\n  font-size: 14px;\n  color: #909399;\n}\n\n.equipment-location {\n  margin-bottom: 10px;\n  font-size: 14px;\n  color: #606266;\n}\n\n.form-card {\n  margin-bottom: 20px;\n}\n\n.time-conflict-warning {\n  margin-bottom: 20px;\n}\n\n.loading-container {\n  padding: 40px 0;\n}\n\n.error-container {\n  padding: 40px 0;\n  text-align: center;\n}\n\n.success-content {\n  text-align: center;\n}\n\n.success-icon {\n  font-size: 72px;\n  color: #67C23A;\n  margin-bottom: 20px;\n}\n\n.success-message {\n  font-size: 18px;\n  color: #303133;\n  margin-bottom: 20px;\n}\n\n.reservation-code {\n  font-size: 24px;\n  font-weight: bold;\n  color: #409EFF;\n  background-color: #ecf5ff;\n  padding: 15px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  letter-spacing: 2px;\n}\n\n.qrcode-container {\n  margin-bottom: 20px;\n}\n\n.qrcode-image {\n  max-width: 200px;\n  border: 1px solid #EBEEF5;\n  padding: 10px;\n  background-color: white;\n}\n\n.reservation-tip {\n  color: #909399;\n  margin-bottom: 20px;\n}\n\n.dialog-footer {\n  margin-top: 20px;\n}\n\n@media (max-width: 768px) {\n  .equipment-info {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  \n  .equipment-image-container {\n    margin-right: 0;\n    margin-bottom: 20px;\n  }\n}\n</style>\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\reservation\\ReservationQuery.vue",["143"],"<template>\n  <div class=\"reservation-query\">\n    <h1 class=\"page-title\">{{ $t('reservation.query') }}</h1>\n    \n    <el-card shadow=\"never\" class=\"query-card\">\n      <el-form\n        ref=\"queryForm\"\n        :model=\"queryForm\"\n        :rules=\"queryRules\"\n        label-position=\"top\"\n        @submit.native.prevent=\"handleQuery\"\n      >\n        <el-form-item :label=\"$t('reservation.code')\" prop=\"reservationCode\">\n          <el-input\n            v-model=\"queryForm.reservationCode\"\n            :placeholder=\"$t('reservation.queryPlaceholder')\"\n            clearable\n          ></el-input>\n        </el-form-item>\n        \n        <el-form-item :label=\"$t('reservation.userContact')\" prop=\"userContact\">\n          <el-input\n            v-model=\"queryForm.userContact\"\n            :placeholder=\"$t('reservation.contactPlaceholder')\"\n            clearable\n          ></el-input>\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button\n            type=\"primary\"\n            native-type=\"submit\"\n            :loading=\"loading\"\n          >\n            {{ $t('reservation.queryButton') }}\n          </el-button>\n          <el-button @click=\"resetForm\">{{ $t('common.reset') }}</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n    \n    <div v-if=\"showInstructions\" class=\"instructions-card\">\n      <el-card shadow=\"never\">\n        <div slot=\"header\">\n          <span>{{ $t('common.instructions') }}</span>\n        </div>\n        \n        <div class=\"instructions-content\">\n          <p>{{ $t('reservation.queryInstructions') }}</p>\n          <ul>\n            <li>{{ $t('reservation.queryInstruction1') }}</li>\n            <li>{{ $t('reservation.queryInstruction2') }}</li>\n            <li>{{ $t('reservation.queryInstruction3') }}</li>\n          </ul>\n        </div>\n      </el-card>\n    </div>\n    \n    <div v-if=\"notFound\" class=\"not-found-card\">\n      <el-card shadow=\"never\">\n        <el-result\n          icon=\"error\"\n          :title=\"$t('reservation.reservationNotFound')\"\n          :sub-title=\"$t('reservation.checkCodeAndContact')\"\n        ></el-result>\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { reservationApi } from '@/api'\n\nexport default {\n  name: 'ReservationQuery',\n  \n  data() {\n    return {\n      loading: false,\n      showInstructions: true,\n      notFound: false,\n      \n      queryForm: {\n        reservationCode: '',\n        userContact: ''\n      },\n      \n      queryRules: {\n        reservationCode: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'blur' },\n          { min: 6, max: 20, message: this.$t('common.lengthLimit', { min: 6, max: 20 }), trigger: 'blur' }\n        ],\n        userContact: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  \n  created() {\n    // 如果URL中有预定码参数，自动填充\n    const code = this.$route.query.code\n    if (code) {\n      this.queryForm.reservationCode = code\n    }\n  },\n  \n  methods: {\n    handleQuery() {\n      this.$refs.queryForm.validate(async (valid) => {\n        if (!valid) {\n          return false\n        }\n        \n        this.loading = true\n        this.showInstructions = false\n        this.notFound = false\n        \n        try {\n          const response = await reservationApi.getReservation(this.queryForm.reservationCode)\n          \n          if (response.data.success) {\n            // 导航到预定详情页\n            this.$router.push(`/reservation/${this.queryForm.reservationCode}`)\n          } else {\n            this.notFound = true\n          }\n        } catch (error) {\n          console.error('Failed to query reservation:', error)\n          this.notFound = true\n        } finally {\n          this.loading = false\n        }\n      })\n    },\n    \n    resetForm() {\n      this.$refs.queryForm.resetFields()\n      this.notFound = false\n      this.showInstructions = true\n    }\n  }\n}\n</script>\n\n<style scoped>\n.reservation-query {\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.page-title {\n  margin-bottom: 20px;\n  font-size: 24px;\n  color: #303133;\n}\n\n.query-card {\n  margin-bottom: 20px;\n}\n\n.instructions-card,\n.not-found-card {\n  margin-top: 30px;\n}\n\n.instructions-content {\n  color: #606266;\n}\n\n.instructions-content p {\n  margin-top: 0;\n}\n\n.instructions-content ul {\n  padding-left: 20px;\n}\n\n.instructions-content li {\n  margin-bottom: 10px;\n}\n</style>\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\equipment\\EquipmentList.vue",["144"],"<template>\n  <div class=\"equipment-list\">\n    <h1 class=\"page-title\">{{ $t('equipment.list') }}</h1>\n    \n    <!-- 筛选和搜索 -->\n    <el-card class=\"filter-card\">\n      <el-row :gutter=\"20\">\n        <el-col :xs=\"24\" :sm=\"8\" :md=\"6\">\n          <el-select\n            v-model=\"filter.category\"\n            :placeholder=\"$t('equipment.allCategories')\"\n            clearable\n            style=\"width: 100%\"\n            @change=\"handleFilterChange\"\n          >\n            <el-option\n              v-for=\"category in categories\"\n              :key=\"category\"\n              :label=\"category\"\n              :value=\"category\"\n            ></el-option>\n          </el-select>\n        </el-col>\n        \n        <el-col :xs=\"24\" :sm=\"8\" :md=\"6\">\n          <el-select\n            v-model=\"filter.status\"\n            :placeholder=\"$t('equipment.allStatus')\"\n            clearable\n            style=\"width: 100%\"\n            @change=\"handleFilterChange\"\n          >\n            <el-option\n              :label=\"$t('equipment.available')\"\n              value=\"available\"\n            ></el-option>\n            <el-option\n              :label=\"$t('equipment.maintenance')\"\n              value=\"maintenance\"\n            ></el-option>\n          </el-select>\n        </el-col>\n        \n        <el-col :xs=\"24\" :sm=\"8\" :md=\"12\">\n          <el-input\n            v-model=\"filter.search\"\n            :placeholder=\"$t('equipment.searchPlaceholder')\"\n            clearable\n            @keyup.enter.native=\"handleFilterChange\"\n            @clear=\"handleFilterChange\"\n          >\n            <el-button\n              slot=\"append\"\n              icon=\"el-icon-search\"\n              @click=\"handleFilterChange\"\n            ></el-button>\n          </el-input>\n        </el-col>\n      </el-row>\n    </el-card>\n    \n    <!-- 设备列表 -->\n    <div v-if=\"loading\" class=\"loading-container\">\n      <el-skeleton :rows=\"3\" animated />\n    </div>\n    \n    <div v-else>\n      <div v-if=\"equipments.length === 0\" class=\"empty-data\">\n        <el-empty :description=\"$t('common.noData')\"></el-empty>\n      </div>\n      \n      <el-row :gutter=\"20\" v-else>\n        <el-col\n          v-for=\"equipment in equipments\"\n          :key=\"equipment.id\"\n          :xs=\"24\"\n          :sm=\"12\"\n          :md=\"8\"\n          :lg=\"6\"\n          class=\"equipment-item\"\n        >\n          <el-card\n            :body-style=\"{ padding: '0px' }\"\n            shadow=\"hover\"\n            @click.native=\"viewEquipmentDetail(equipment.id)\"\n          >\n            <div class=\"equipment-image-container\">\n              <img\n                :src=\"equipment.image_path || '/static/images/default_equipment.png'\"\n                :alt=\"equipment.name\"\n                class=\"equipment-image\"\n              />\n            </div>\n            \n            <div class=\"equipment-info\">\n              <h3 class=\"equipment-name\">{{ equipment.name }}</h3>\n              <p class=\"equipment-category\">{{ equipment.category }}</p>\n              \n              <div class=\"equipment-meta\">\n                <span class=\"equipment-location\" v-if=\"equipment.location\">\n                  <i class=\"el-icon-location\"></i> {{ equipment.location }}\n                </span>\n                \n                <el-tag\n                  :type=\"equipment.status === 'available' ? 'success' : 'warning'\"\n                  size=\"small\"\n                >\n                  {{ equipment.status === 'available' ? $t('equipment.available') : $t('equipment.maintenance') }}\n                </el-tag>\n              </div>\n              \n              <div class=\"equipment-actions\">\n                <el-button\n                  type=\"text\"\n                  @click.stop=\"viewEquipmentDetail(equipment.id)\"\n                >\n                  {{ $t('equipment.viewDetail') }}\n                </el-button>\n                \n                <el-button\n                  type=\"primary\"\n                  size=\"small\"\n                  @click.stop=\"reserveEquipment(equipment.id)\"\n                  :disabled=\"equipment.status !== 'available'\"\n                >\n                  {{ $t('equipment.reserve') }}\n                </el-button>\n              </div>\n            </div>\n          </el-card>\n        </el-col>\n      </el-row>\n      \n      <!-- 分页 -->\n      <div class=\"pagination-container\">\n        <el-pagination\n          background\n          layout=\"prev, pager, next\"\n          :total=\"total\"\n          :page-size=\"pageSize\"\n          :current-page.sync=\"currentPage\"\n          @current-change=\"handlePageChange\"\n        ></el-pagination>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport { equipmentApi } from '@/api'\n\nexport default {\n  name: 'EquipmentList',\n  \n  data() {\n    return {\n      loading: false,\n      equipments: [],\n      total: 0,\n      currentPage: 1,\n      pageSize: 12,\n      categories: [],\n      filter: {\n        category: '',\n        status: '',\n        search: ''\n      }\n    }\n  },\n  \n  computed: {\n    ...mapGetters(['getEquipmentCategories'])\n  },\n  \n  created() {\n    this.fetchData()\n    this.fetchCategories()\n  },\n  \n  methods: {\n    ...mapActions(['fetchEquipmentCategories']),\n    \n    async fetchData() {\n      this.loading = true\n      try {\n        const params = {\n          page: this.currentPage,\n          limit: this.pageSize,\n          category: this.filter.category || undefined,\n          status: this.filter.status || undefined,\n          search: this.filter.search || undefined\n        }\n        \n        const response = await equipmentApi.getEquipments(params)\n        this.equipments = response.data.items\n        this.total = response.data.total\n      } catch (error) {\n        console.error('Failed to fetch equipments:', error)\n        this.$message.error(this.$t('common.error'))\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    async fetchCategories() {\n      try {\n        const response = await equipmentApi.getCategories()\n        this.categories = response.data.categories.map(item => item.category)\n      } catch (error) {\n        console.error('Failed to fetch categories:', error)\n      }\n    },\n    \n    handleFilterChange() {\n      this.currentPage = 1\n      this.fetchData()\n    },\n    \n    handlePageChange(page) {\n      this.currentPage = page\n      this.fetchData()\n    },\n    \n    viewEquipmentDetail(id) {\n      this.$router.push(`/equipment/${id}`)\n    },\n    \n    reserveEquipment(id) {\n      this.$router.push(`/equipment/${id}/reserve`)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.equipment-list {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.page-title {\n  margin-bottom: 20px;\n  font-size: 24px;\n  color: #303133;\n}\n\n.filter-card {\n  margin-bottom: 20px;\n}\n\n.equipment-item {\n  margin-bottom: 20px;\n}\n\n.equipment-image-container {\n  height: 200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  background-color: #f5f7fa;\n}\n\n.equipment-image {\n  max-height: 100%;\n  max-width: 100%;\n  object-fit: contain;\n}\n\n.equipment-info {\n  padding: 14px;\n}\n\n.equipment-name {\n  margin: 0 0 10px;\n  font-size: 18px;\n  font-weight: bold;\n  color: #303133;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.equipment-category {\n  margin: 0 0 10px;\n  font-size: 14px;\n  color: #909399;\n}\n\n.equipment-meta {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.equipment-location {\n  font-size: 13px;\n  color: #606266;\n}\n\n.equipment-actions {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 10px;\n  border-top: 1px solid #ebeef5;\n  padding-top: 10px;\n}\n\n.loading-container {\n  padding: 40px 0;\n}\n\n.empty-data {\n  padding: 40px 0;\n  text-align: center;\n}\n\n.pagination-container {\n  text-align: center;\n  margin-top: 30px;\n  margin-bottom: 20px;\n}\n\n@media (max-width: 768px) {\n  .filter-card .el-col {\n    margin-bottom: 10px;\n  }\n}\n</style>\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\admin\\AdminLogin.vue",["145"],"<template>\n  <div class=\"admin-login\">\n    <div class=\"login-container\">\n      <div class=\"login-header\">\n        <img src=\"@/assets/logo.png\" alt=\"Logo\" class=\"login-logo\" />\n        <h1>{{ $t('admin.login') }}</h1>\n      </div>\n      \n      <el-card shadow=\"never\" class=\"login-card\">\n        <el-form\n          ref=\"loginForm\"\n          :model=\"loginForm\"\n          :rules=\"loginRules\"\n          label-position=\"top\"\n          @submit.native.prevent=\"handleLogin\"\n        >\n          <el-form-item :label=\"$t('admin.username')\" prop=\"username\">\n            <el-input\n              v-model=\"loginForm.username\"\n              prefix-icon=\"el-icon-user\"\n              :placeholder=\"$t('admin.username')\"\n            ></el-input>\n          </el-form-item>\n          \n          <el-form-item :label=\"$t('admin.password')\" prop=\"password\">\n            <el-input\n              v-model=\"loginForm.password\"\n              prefix-icon=\"el-icon-lock\"\n              type=\"password\"\n              :placeholder=\"$t('admin.password')\"\n              show-password\n            ></el-input>\n          </el-form-item>\n          \n          <el-form-item>\n            <el-button\n              type=\"primary\"\n              native-type=\"submit\"\n              :loading=\"loading\"\n              style=\"width: 100%\"\n            >\n              {{ $t('admin.loginButton') }}\n            </el-button>\n          </el-form-item>\n        </el-form>\n      </el-card>\n      \n      <div class=\"login-footer\">\n        <el-button type=\"text\" @click=\"$router.push('/')\">\n          {{ $t('common.back') }} {{ $t('nav.home') }}\n        </el-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\n\nexport default {\n  name: 'AdminLogin',\n  \n  data() {\n    return {\n      loading: false,\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginRules: {\n        username: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'blur' },\n          { min: 3, max: 20, message: this.$t('common.lengthLimit', { min: 3, max: 20 }), trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'blur' },\n          { min: 6, max: 20, message: this.$t('common.lengthLimit', { min: 6, max: 20 }), trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  \n  methods: {\n    ...mapActions(['login']),\n    \n    handleLogin() {\n      this.$refs.loginForm.validate(async (valid) => {\n        if (!valid) {\n          return false\n        }\n        \n        this.loading = true\n        \n        try {\n          const success = await this.login({\n            username: this.loginForm.username,\n            password: this.loginForm.password\n          })\n          \n          if (success) {\n            this.$message.success(this.$t('admin.loginSuccess'))\n            \n            // 获取重定向URL\n            const redirect = this.$route.query.redirect || '/admin/dashboard'\n            this.$router.push(redirect)\n          } else {\n            this.$message.error(this.$t('admin.loginFailed'))\n          }\n        } catch (error) {\n          console.error('Login error:', error)\n          this.$message.error(this.$t('admin.loginFailed'))\n        } finally {\n          this.loading = false\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.admin-login {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 80vh;\n  background-color: #f5f7fa;\n}\n\n.login-container {\n  width: 100%;\n  max-width: 400px;\n  padding: 20px;\n}\n\n.login-header {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.login-logo {\n  height: 60px;\n  margin-bottom: 20px;\n}\n\n.login-header h1 {\n  margin: 0;\n  font-size: 24px;\n  color: #303133;\n}\n\n.login-card {\n  margin-bottom: 20px;\n}\n\n.login-footer {\n  text-align: center;\n}\n</style>\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\admin\\AdminReservation.vue",["146"],"<template>\n  <div class=\"admin-reservation\">\n    <h1>预定管理</h1>\n    <p>此功能正在开发中...</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"AdminReservation\"\n}\n</script>\n\n<style scoped>\n.admin-reservation {\n  padding: 20px;\n}\n</style>\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\admin\\AdminDashboard.vue",["147"],"<template>\n  <div class=\"admin-dashboard\">\n    <admin-layout>\n      <template #header>\n        <h1 class=\"page-title\">{{ $t('admin.dashboard') }}</h1>\n      </template>\n      \n      <!-- 统计卡片 -->\n      <el-row :gutter=\"20\" class=\"stats-row\">\n        <el-col :xs=\"24\" :sm=\"12\" :md=\"6\">\n          <el-card shadow=\"hover\" class=\"stats-card primary\">\n            <div class=\"stats-content\">\n              <div class=\"stats-value\">{{ stats.totalEquipment }}</div>\n              <div class=\"stats-label\">{{ $t('admin.totalEquipment') }}</div>\n            </div>\n            <i class=\"el-icon-s-grid stats-icon\"></i>\n          </el-card>\n        </el-col>\n        \n        <el-col :xs=\"24\" :sm=\"12\" :md=\"6\">\n          <el-card shadow=\"hover\" class=\"stats-card success\">\n            <div class=\"stats-content\">\n              <div class=\"stats-value\">{{ stats.availableEquipment }}</div>\n              <div class=\"stats-label\">{{ $t('admin.availableEquipment') }}</div>\n            </div>\n            <i class=\"el-icon-s-cooperation stats-icon\"></i>\n          </el-card>\n        </el-col>\n        \n        <el-col :xs=\"24\" :sm=\"12\" :md=\"6\">\n          <el-card shadow=\"hover\" class=\"stats-card warning\">\n            <div class=\"stats-content\">\n              <div class=\"stats-value\">{{ stats.totalReservation }}</div>\n              <div class=\"stats-label\">{{ $t('admin.totalReservation') }}</div>\n            </div>\n            <i class=\"el-icon-s-order stats-icon\"></i>\n          </el-card>\n        </el-col>\n        \n        <el-col :xs=\"24\" :sm=\"12\" :md=\"6\">\n          <el-card shadow=\"hover\" class=\"stats-card danger\">\n            <div class=\"stats-content\">\n              <div class=\"stats-value\">{{ stats.activeReservation }}</div>\n              <div class=\"stats-label\">{{ $t('admin.activeReservation') }}</div>\n            </div>\n            <i class=\"el-icon-s-claim stats-icon\"></i>\n          </el-card>\n        </el-col>\n      </el-row>\n      \n      <!-- 最近预定 -->\n      <el-card shadow=\"hover\" class=\"recent-reservations\">\n        <div slot=\"header\" class=\"card-header\">\n          <span>{{ $t('admin.recentReservations') }}</span>\n          <el-button\n            type=\"text\"\n            @click=\"$router.push('/admin/reservation')\"\n          >\n            {{ $t('common.more') }} <i class=\"el-icon-arrow-right\"></i>\n          </el-button>\n        </div>\n        \n        <div v-if=\"loading\" class=\"loading-container\">\n          <el-skeleton :rows=\"5\" animated />\n        </div>\n        \n        <div v-else-if=\"recentReservations.length === 0\" class=\"empty-data\">\n          <el-empty :description=\"$t('common.noData')\"></el-empty>\n        </div>\n        \n        <el-table\n          v-else\n          :data=\"recentReservations\"\n          style=\"width: 100%\"\n          :default-sort=\"{ prop: 'created_at', order: 'descending' }\"\n        >\n          <el-table-column\n            prop=\"reservation_code\"\n            :label=\"$t('reservation.code')\"\n            width=\"120\"\n          ></el-table-column>\n          \n          <el-table-column\n            prop=\"equipment_name\"\n            :label=\"$t('reservation.equipmentName')\"\n            width=\"150\"\n          ></el-table-column>\n          \n          <el-table-column\n            prop=\"user_name\"\n            :label=\"$t('reservation.userName')\"\n            width=\"120\"\n          ></el-table-column>\n          \n          <el-table-column\n            prop=\"start_datetime\"\n            :label=\"$t('reservation.startTime')\"\n            width=\"180\"\n            :formatter=\"formatDateTime\"\n          ></el-table-column>\n          \n          <el-table-column\n            prop=\"end_datetime\"\n            :label=\"$t('reservation.endTime')\"\n            width=\"180\"\n            :formatter=\"formatDateTime\"\n          ></el-table-column>\n          \n          <el-table-column\n            prop=\"status\"\n            :label=\"$t('reservation.status')\"\n            width=\"100\"\n          >\n            <template slot-scope=\"scope\">\n              <el-tag\n                :type=\"scope.row.status === 'confirmed' ? 'success' : 'info'\"\n                size=\"small\"\n              >\n                {{ scope.row.status === 'confirmed' ? $t('reservation.confirmed') : $t('reservation.cancelled') }}\n              </el-tag>\n            </template>\n          </el-table-column>\n          \n          <el-table-column\n            :label=\"$t('common.operation')\"\n            width=\"120\"\n          >\n            <template slot-scope=\"scope\">\n              <el-button\n                type=\"text\"\n                size=\"small\"\n                @click=\"viewReservation(scope.row)\"\n              >\n                {{ $t('admin.viewReservation') }}\n              </el-button>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-card>\n    </admin-layout>\n  </div>\n</template>\n\n<script>\nimport AdminLayout from '@/components/admin/AdminLayout.vue'\nimport { reservationApi, equipmentApi } from '@/api'\n\nexport default {\n  name: 'AdminDashboard',\n  \n  components: {\n    AdminLayout\n  },\n  \n  data() {\n    return {\n      loading: false,\n      stats: {\n        totalEquipment: 0,\n        availableEquipment: 0,\n        totalReservation: 0,\n        activeReservation: 0\n      },\n      recentReservations: []\n    }\n  },\n  \n  created() {\n    this.fetchData()\n  },\n  \n  methods: {\n    async fetchData() {\n      this.loading = true\n      \n      try {\n        // 获取设备统计\n        const equipmentResponse = await equipmentApi.getEquipments({\n          limit: 1,\n          page: 1\n        })\n        this.stats.totalEquipment = equipmentResponse.data.total\n        \n        // 获取可用设备统计\n        const availableEquipmentResponse = await equipmentApi.getEquipments({\n          limit: 1,\n          page: 1,\n          status: 'available'\n        })\n        this.stats.availableEquipment = availableEquipmentResponse.data.total\n        \n        // 获取预定统计\n        const reservationResponse = await reservationApi.getReservations({\n          limit: 1,\n          page: 1\n        })\n        this.stats.totalReservation = reservationResponse.data.total\n        \n        // 获取活跃预定统计\n        const activeReservationResponse = await reservationApi.getReservations({\n          limit: 1,\n          page: 1,\n          status: 'confirmed'\n        })\n        this.stats.activeReservation = activeReservationResponse.data.total\n        \n        // 获取最近预定\n        const recentReservationsResponse = await reservationApi.getReservations({\n          limit: 10,\n          page: 1\n        })\n        this.recentReservations = recentReservationsResponse.data.items\n      } catch (error) {\n        console.error('Failed to fetch dashboard data:', error)\n        this.$message.error(this.$t('common.error'))\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    formatDateTime(row, column, cellValue) {\n      if (!cellValue) return ''\n      \n      const date = new Date(cellValue)\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`\n    },\n    \n    viewReservation(reservation) {\n      // 打开预定详情对话框或页面\n      this.$router.push(`/admin/reservation/${reservation.reservation_code}`)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.admin-dashboard {\n  width: 100%;\n}\n\n.page-title {\n  margin: 0 0 20px;\n  font-size: 24px;\n  color: #303133;\n}\n\n.stats-row {\n  margin-bottom: 20px;\n}\n\n.stats-card {\n  height: 100px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  position: relative;\n  overflow: hidden;\n  margin-bottom: 20px;\n}\n\n.stats-card.primary {\n  border-left: 4px solid #409EFF;\n}\n\n.stats-card.success {\n  border-left: 4px solid #67C23A;\n}\n\n.stats-card.warning {\n  border-left: 4px solid #E6A23C;\n}\n\n.stats-card.danger {\n  border-left: 4px solid #F56C6C;\n}\n\n.stats-content {\n  z-index: 1;\n}\n\n.stats-value {\n  font-size: 28px;\n  font-weight: bold;\n  color: #303133;\n  margin-bottom: 5px;\n}\n\n.stats-label {\n  font-size: 14px;\n  color: #909399;\n}\n\n.stats-icon {\n  position: absolute;\n  right: 20px;\n  font-size: 60px;\n  opacity: 0.1;\n  color: #000;\n}\n\n.recent-reservations {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.loading-container {\n  padding: 40px 0;\n}\n\n.empty-data {\n  padding: 40px 0;\n  text-align: center;\n}\n\n@media (max-width: 768px) {\n  .stats-card {\n    height: 80px;\n  }\n  \n  .stats-value {\n    font-size: 24px;\n  }\n  \n  .stats-icon {\n    font-size: 40px;\n  }\n}\n</style>\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\admin\\AdminSettings.vue",["148"],"<template>\n  <div class=\"admin-settings\">\n    <h1>系统设置</h1>\n    <p>此功能正在开发中...</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"AdminSettings\"\n}\n</script>\n\n<style scoped>\n.admin-settings {\n  padding: 20px;\n}\n</style>\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\equipment\\EquipmentDetail.vue",["149"],"<template>\n  <div class=\"equipment-detail\">\n    <div v-if=\"loading\" class=\"loading-container\">\n      <el-skeleton :rows=\"10\" animated />\n    </div>\n\n    <div v-else-if=\"!equipment\" class=\"error-container\">\n      <el-result\n        icon=\"error\"\n        :title=\"$t('error.errorMessage')\"\n        :sub-title=\"$t('equipment.notFound')\"\n      >\n        <template #extra>\n          <el-button type=\"primary\" @click=\"$router.push('/equipment')\">\n            {{ $t('equipment.list') }}\n          </el-button>\n        </template>\n      </el-result>\n    </div>\n\n    <div v-else>\n      <!-- 返回按钮 -->\n      <div class=\"back-link\">\n        <el-button icon=\"el-icon-arrow-left\" @click=\"$router.push('/equipment')\">\n          {{ $t('common.back') }}\n        </el-button>\n      </div>\n\n      <!-- 设备信息 -->\n      <el-row :gutter=\"20\">\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"10\" :lg=\"8\">\n          <el-card shadow=\"never\" class=\"image-card\">\n            <div class=\"equipment-image-container\">\n              <img\n                :src=\"equipment.image_path || '/static/images/default_equipment.png'\"\n                :alt=\"equipment.name\"\n                class=\"equipment-image\"\n              />\n            </div>\n          </el-card>\n        </el-col>\n\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"14\" :lg=\"16\">\n          <el-card shadow=\"never\" class=\"info-card\">\n            <div class=\"equipment-header\">\n              <h1 class=\"equipment-name\">{{ equipment.name }}</h1>\n              <el-tag\n                :type=\"equipment.status === 'available' ? 'success' : 'warning'\"\n                size=\"medium\"\n              >\n                {{ equipment.status === 'available' ? $t('equipment.available') : $t('equipment.maintenance') }}\n              </el-tag>\n            </div>\n\n            <el-divider></el-divider>\n\n            <el-descriptions :column=\"1\" border>\n              <el-descriptions-item :label=\"$t('equipment.category')\">\n                {{ equipment.category }}\n              </el-descriptions-item>\n\n              <el-descriptions-item :label=\"$t('equipment.model')\" v-if=\"equipment.model\">\n                {{ equipment.model }}\n              </el-descriptions-item>\n\n              <el-descriptions-item :label=\"$t('equipment.location')\" v-if=\"equipment.location\">\n                {{ equipment.location }}\n              </el-descriptions-item>\n\n              <el-descriptions-item :label=\"$t('equipment.description')\" v-if=\"equipment.description\">\n                {{ equipment.description }}\n              </el-descriptions-item>\n\n              <el-descriptions-item :label=\"$t('equipment.userGuide')\" v-if=\"equipment.user_guide\">\n                <div class=\"user-guide-content rich-text-content\" v-html=\"equipment.user_guide\"></div>\n              </el-descriptions-item>\n\n              <el-descriptions-item :label=\"$t('equipment.videoTutorial')\" v-if=\"equipment.video_tutorial\">\n                <div class=\"video-container\">\n                  <iframe\n                    :src=\"equipment.video_tutorial\"\n                    frameborder=\"0\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowfullscreen\n                  ></iframe>\n                </div>\n              </el-descriptions-item>\n            </el-descriptions>\n\n            <div class=\"action-buttons\">\n              <el-button\n                type=\"primary\"\n                size=\"large\"\n                @click=\"reserveEquipment\"\n                :disabled=\"equipment.status !== 'available'\"\n              >\n                {{ $t('equipment.reserve') }}\n              </el-button>\n            </div>\n          </el-card>\n        </el-col>\n      </el-row>\n\n      <!-- 预定情况 -->\n      <el-card shadow=\"never\" class=\"reservations-card\">\n        <div slot=\"header\" class=\"reservations-header\">\n          <span>{{ $t('equipment.currentReservations') }}</span>\n          <el-date-picker\n            v-model=\"dateRange\"\n            type=\"daterange\"\n            range-separator=\"→\"\n            :start-placeholder=\"$t('reservation.startTime')\"\n            :end-placeholder=\"$t('reservation.endTime')\"\n            :picker-options=\"pickerOptions\"\n            @change=\"fetchReservations\"\n            size=\"small\"\n          ></el-date-picker>\n        </div>\n\n        <div v-if=\"loadingReservations\" class=\"loading-container\">\n          <el-skeleton :rows=\"3\" animated />\n        </div>\n\n        <div v-else-if=\"reservations.length === 0\" class=\"empty-reservations\">\n          <el-empty :description=\"$t('equipment.noReservations')\"></el-empty>\n        </div>\n\n        <div v-else class=\"reservations-list\">\n          <el-timeline>\n            <el-timeline-item\n              v-for=\"reservation in reservations\"\n              :key=\"reservation.id\"\n              :timestamp=\"formatDateTime(reservation.start_datetime) + ' → ' + formatDateTime(reservation.end_datetime)\"\n              :type=\"reservation.status === 'confirmed' ? 'primary' : 'info'\"\n            >\n              <el-card class=\"reservation-card\">\n                <div class=\"reservation-info\">\n                  <div class=\"reservation-user\">\n                    <span class=\"user-name\">{{ reservation.user_name }}</span>\n                    <span class=\"user-department\">{{ reservation.user_department }}</span>\n                  </div>\n\n                  <div class=\"reservation-purpose\" v-if=\"reservation.purpose\">\n                    <strong>{{ $t('reservation.purpose') }}:</strong> {{ reservation.purpose }}\n                  </div>\n\n                  <div class=\"reservation-status\">\n                    <el-tag\n                      size=\"small\"\n                      :type=\"reservation.status === 'confirmed' ? 'success' : 'info'\"\n                    >\n                      {{ reservation.status === 'confirmed' ? $t('reservation.confirmed') : $t('reservation.cancelled') }}\n                    </el-tag>\n                  </div>\n                </div>\n              </el-card>\n            </el-timeline-item>\n          </el-timeline>\n        </div>\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { equipmentApi, reservationApi } from '@/api'\n\nexport default {\n  name: 'EquipmentDetail',\n\n  data() {\n    return {\n      loading: false,\n      loadingReservations: false,\n      equipment: null,\n      reservations: [],\n      dateRange: [\n        new Date(),\n        new Date(new Date().setDate(new Date().getDate() + 7))\n      ],\n      pickerOptions: {\n        shortcuts: [\n          {\n            text: this.$t('common.today'),\n            onClick(picker) {\n              const end = new Date()\n              const start = new Date()\n              picker.$emit('pick', [start, end])\n            }\n          },\n          {\n            text: this.$t('common.week'),\n            onClick(picker) {\n              const end = new Date()\n              const start = new Date()\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n              picker.$emit('pick', [start, end])\n            }\n          },\n          {\n            text: this.$t('common.month'),\n            onClick(picker) {\n              const end = new Date()\n              const start = new Date()\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\n              picker.$emit('pick', [start, end])\n            }\n          }\n        ]\n      }\n    }\n  },\n\n  computed: {\n  },\n\n  created() {\n    this.fetchEquipment()\n  },\n\n  methods: {\n    async fetchEquipment() {\n      this.loading = true\n      try {\n        const equipmentId = this.$route.params.id\n        const response = await equipmentApi.getEquipment(equipmentId)\n        this.equipment = response.data\n\n        // 获取预定情况\n        this.fetchReservations()\n      } catch (error) {\n        console.error('Failed to fetch equipment:', error)\n        this.$message.error(this.$t('common.error'))\n        this.equipment = null\n      } finally {\n        this.loading = false\n      }\n    },\n\n    async fetchReservations() {\n      if (!this.equipment) return\n\n      this.loadingReservations = true\n      try {\n        const equipmentId = this.equipment.id\n        const startDate = this.formatDate(this.dateRange[0])\n        const endDate = this.formatDate(this.dateRange[1])\n\n        const params = {\n          equipment_id: equipmentId,\n          from_date: startDate,\n          to_date: endDate,\n          status: 'confirmed'\n        }\n\n        const response = await reservationApi.getReservations(params)\n        this.reservations = response.data.items\n      } catch (error) {\n        console.error('Failed to fetch reservations:', error)\n        this.$message.error(this.$t('common.error'))\n        this.reservations = []\n      } finally {\n        this.loadingReservations = false\n      }\n    },\n\n    reserveEquipment() {\n      this.$router.push(`/equipment/${this.equipment.id}/reserve`)\n    },\n\n    formatDateTime(dateTime) {\n      if (!dateTime) return ''\n\n      const date = new Date(dateTime)\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`\n    },\n\n    formatDate(date) {\n      if (!date) return ''\n\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`\n    }\n  }\n}\n</script>\n\n<style scoped>\n.equipment-detail {\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.back-link {\n  margin-bottom: 20px;\n}\n\n.image-card {\n  margin-bottom: 20px;\n}\n\n.equipment-image-container {\n  height: 300px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  background-color: #f5f7fa;\n}\n\n.equipment-image {\n  max-height: 100%;\n  max-width: 100%;\n  object-fit: contain;\n}\n\n.info-card {\n  margin-bottom: 20px;\n}\n\n.equipment-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.equipment-name {\n  margin: 0;\n  font-size: 24px;\n  color: #303133;\n}\n\n.action-buttons {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.reservations-card {\n  margin-bottom: 20px;\n}\n\n.reservations-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.empty-reservations {\n  padding: 20px 0;\n  text-align: center;\n}\n\n.reservation-card {\n  margin-bottom: 10px;\n}\n\n.reservation-info {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.reservation-user {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.user-name {\n  font-weight: bold;\n  color: #303133;\n}\n\n.user-department {\n  color: #909399;\n  font-size: 13px;\n}\n\n.reservation-purpose {\n  color: #606266;\n  font-size: 14px;\n}\n\n.user-guide-content {\n  line-height: 1.6;\n}\n\n.rich-text-content {\n  max-width: 100%;\n  overflow-x: auto;\n}\n\n.rich-text-content img {\n  max-width: 100%;\n  height: auto;\n}\n\n.rich-text-content table {\n  border-collapse: collapse;\n  width: 100%;\n  margin-bottom: 1rem;\n}\n\n.rich-text-content table td,\n.rich-text-content table th {\n  border: 1px solid #ddd;\n  padding: 8px;\n}\n\n.rich-text-content ul,\n.rich-text-content ol {\n  padding-left: 2em;\n}\n\n.video-container {\n  position: relative;\n  padding-bottom: 56.25%; /* 16:9 */\n  height: 0;\n  overflow: hidden;\n  max-width: 100%;\n}\n\n.video-container iframe {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.loading-container {\n  padding: 40px 0;\n}\n\n.error-container {\n  padding: 40px 0;\n  text-align: center;\n}\n\n@media (max-width: 768px) {\n  .reservations-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n  }\n\n  .equipment-header {\n    flex-direction: column;\n    align-items: flex-start;\n    gap: 10px;\n  }\n}\n</style>\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\views\\admin\\AdminEquipment.vue",["150"],"<template>\n  <div class=\"admin-equipment\">\n    <div class=\"page-header\">\n      <h2>{{ $t('admin.equipment') }}</h2>\n      <div class=\"page-actions\">\n        <el-button\n          type=\"primary\"\n          icon=\"el-icon-plus\"\n          @click=\"handleAdd\"\n        >\n          {{ $t('admin.addEquipment') }}\n        </el-button>\n\n        <el-dropdown @command=\"handleImportExport\" split-button type=\"primary\">\n          {{ $t('admin.importExport') }}\n          <el-dropdown-menu slot=\"dropdown\">\n            <el-dropdown-item command=\"import\">\n              <i class=\"el-icon-upload2\"></i> {{ $t('admin.importEquipment') }}\n            </el-dropdown-item>\n            <el-dropdown-item command=\"export\">\n              <i class=\"el-icon-download\"></i> {{ $t('admin.exportEquipment') }}\n            </el-dropdown-item>\n            <el-dropdown-item command=\"template\">\n              <i class=\"el-icon-document\"></i> {{ $t('admin.downloadTemplate') }}\n            </el-dropdown-item>\n          </el-dropdown-menu>\n        </el-dropdown>\n      </div>\n    </div>\n\n    <!-- 搜索和筛选 -->\n    <el-card class=\"filter-card\">\n      <el-form :inline=\"true\" :model=\"filter\" class=\"filter-form\">\n        <el-form-item :label=\"$t('equipment.category')\">\n          <el-select\n            v-model=\"filter.category\"\n            :placeholder=\"$t('equipment.allCategories')\"\n            clearable\n            @change=\"handleFilterChange\"\n          >\n            <el-option\n              v-for=\"category in categories\"\n              :key=\"category\"\n              :label=\"category\"\n              :value=\"category\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item :label=\"$t('equipment.status')\">\n          <el-select\n            v-model=\"filter.status\"\n            :placeholder=\"$t('equipment.allStatus')\"\n            clearable\n            @change=\"handleFilterChange\"\n          >\n            <el-option\n              :label=\"$t('equipment.available')\"\n              value=\"available\"\n            ></el-option>\n            <el-option\n              :label=\"$t('equipment.maintenance')\"\n              value=\"maintenance\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item>\n          <el-input\n            v-model=\"filter.search\"\n            :placeholder=\"$t('equipment.searchPlaceholder')\"\n            clearable\n            @keyup.enter.native=\"handleFilterChange\"\n          >\n            <el-button\n              slot=\"append\"\n              icon=\"el-icon-search\"\n              @click=\"handleFilterChange\"\n            ></el-button>\n          </el-input>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <!-- 设备列表 -->\n    <el-table\n      v-loading=\"loading\"\n      :data=\"equipments\"\n      border\n      style=\"width: 100%; margin-top: 20px;\"\n    >\n      <el-table-column\n        prop=\"id\"\n        label=\"ID\"\n        width=\"80\"\n      ></el-table-column>\n\n      <el-table-column\n        prop=\"name\"\n        :label=\"$t('equipment.name')\"\n        min-width=\"150\"\n      ></el-table-column>\n\n      <el-table-column\n        prop=\"category\"\n        :label=\"$t('equipment.category')\"\n        width=\"120\"\n      ></el-table-column>\n\n      <el-table-column\n        prop=\"location\"\n        :label=\"$t('equipment.location')\"\n        width=\"120\"\n      ></el-table-column>\n\n      <el-table-column\n        prop=\"status\"\n        :label=\"$t('equipment.status')\"\n        width=\"100\"\n      >\n        <template slot-scope=\"scope\">\n          <el-tag\n            :type=\"scope.row.status === 'available' ? 'success' : 'warning'\"\n            size=\"small\"\n          >\n            {{ scope.row.status === 'available' ? $t('equipment.available') : $t('equipment.maintenance') }}\n          </el-tag>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        :label=\"$t('equipment.image')\"\n        width=\"100\"\n        align=\"center\"\n      >\n        <template slot-scope=\"scope\">\n          <el-image\n            v-if=\"scope.row.image_url\"\n            :src=\"scope.row.image_url\"\n            :preview-src-list=\"[scope.row.image_url]\"\n            style=\"width: 50px; height: 50px;\"\n            fit=\"cover\"\n          ></el-image>\n          <el-button\n            v-else\n            type=\"text\"\n            icon=\"el-icon-picture\"\n            @click=\"handleUploadImage(scope.row)\"\n          >\n            {{ $t('admin.uploadImage') }}\n          </el-button>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        :label=\"$t('common.operation')\"\n        width=\"200\"\n        fixed=\"right\"\n      >\n        <template slot-scope=\"scope\">\n          <el-button\n            type=\"text\"\n            size=\"small\"\n            @click=\"handleEdit(scope.row)\"\n          >\n            {{ $t('common.edit') }}\n          </el-button>\n\n          <el-button\n            v-if=\"scope.row.image_url\"\n            type=\"text\"\n            size=\"small\"\n            @click=\"handleUploadImage(scope.row)\"\n          >\n            {{ $t('admin.changeImage') }}\n          </el-button>\n\n          <el-button\n            type=\"text\"\n            size=\"small\"\n            class=\"danger-button\"\n            @click=\"handleDelete(scope.row)\"\n          >\n            {{ $t('common.delete') }}\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 分页 -->\n    <div class=\"pagination-container\">\n      <el-pagination\n        background\n        layout=\"total, prev, pager, next\"\n        :total=\"total\"\n        :page-size=\"pageSize\"\n        :current-page.sync=\"currentPage\"\n        @current-change=\"handlePageChange\"\n      ></el-pagination>\n    </div>\n\n    <!-- 添加/编辑设备对话框 -->\n    <el-dialog\n      :title=\"dialogType === 'add' ? $t('admin.addEquipment') : $t('admin.editEquipment')\"\n      :visible.sync=\"dialogVisible\"\n      width=\"50%\"\n      @close=\"resetForm\"\n    >\n      <el-form\n        ref=\"form\"\n        :model=\"form\"\n        :rules=\"rules\"\n        label-width=\"100px\"\n      >\n        <el-form-item :label=\"$t('equipment.name')\" prop=\"name\">\n          <el-input v-model=\"form.name\"></el-input>\n        </el-form-item>\n\n        <el-form-item :label=\"$t('equipment.category')\" prop=\"category\">\n          <el-select\n            v-model=\"form.category\"\n            filterable\n            allow-create\n            default-first-option\n            style=\"width: 100%\"\n          >\n            <el-option\n              v-for=\"category in categories\"\n              :key=\"category\"\n              :label=\"category\"\n              :value=\"category\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item :label=\"$t('equipment.model')\" prop=\"model\">\n          <el-input v-model=\"form.model\"></el-input>\n        </el-form-item>\n\n        <el-form-item :label=\"$t('equipment.location')\" prop=\"location\">\n          <el-input v-model=\"form.location\"></el-input>\n        </el-form-item>\n\n        <el-form-item :label=\"$t('equipment.status')\" prop=\"status\">\n          <el-radio-group v-model=\"form.status\">\n            <el-radio label=\"available\">{{ $t('equipment.available') }}</el-radio>\n            <el-radio label=\"maintenance\">{{ $t('equipment.maintenance') }}</el-radio>\n          </el-radio-group>\n        </el-form-item>\n\n        <el-form-item :label=\"$t('equipment.description')\" prop=\"description\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"form.description\"\n            :rows=\"4\"\n          ></el-input>\n        </el-form-item>\n\n        <el-form-item :label=\"$t('equipment.userGuide')\" prop=\"user_guide\">\n          <rich-text-editor\n            v-model=\"form.user_guide\"\n            :placeholder=\"$t('equipment.userGuidePlaceholder')\"\n          ></rich-text-editor>\n        </el-form-item>\n\n        <el-form-item :label=\"$t('equipment.videoTutorial')\" prop=\"video_tutorial\">\n          <el-input\n            v-model=\"form.video_tutorial\"\n            :placeholder=\"$t('equipment.videoTutorialPlaceholder')\"\n          >\n            <template slot=\"prepend\">\n              <el-select\n                v-model=\"videoType\"\n                style=\"width: 120px;\"\n                @change=\"handleVideoTypeChange\"\n              >\n                <el-option label=\"YouTube\" value=\"youtube\"></el-option>\n                <el-option label=\"Bilibili\" value=\"bilibili\"></el-option>\n                <el-option label=\"其他\" value=\"other\"></el-option>\n              </el-select>\n            </template>\n          </el-input>\n          <div class=\"video-tip\">{{ $t('admin.videoTutorialTip') }}</div>\n        </el-form-item>\n\n        <el-form-item :label=\"$t('equipment.image')\">\n          <el-upload\n            class=\"equipment-image-uploader\"\n            :action=\"uploadUrl\"\n            :headers=\"uploadHeaders\"\n            :show-file-list=\"false\"\n            :on-success=\"handleUploadSuccess\"\n            :on-error=\"handleUploadError\"\n            :before-upload=\"beforeUpload\"\n          >\n            <img v-if=\"form.image_url\" :src=\"form.image_url\" class=\"equipment-image\">\n            <i v-else class=\"el-icon-plus equipment-image-uploader-icon\"></i>\n          </el-upload>\n          <div class=\"image-tip\">{{ $t('admin.imageTip') }}</div>\n        </el-form-item>\n      </el-form>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">{{ $t('common.cancel') }}</el-button>\n        <el-button type=\"primary\" @click=\"submitForm\" :loading=\"submitting\">{{ $t('common.save') }}</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 上传图片对话框 -->\n    <el-dialog\n      :title=\"$t('admin.uploadEquipmentImage')\"\n      :visible.sync=\"uploadDialogVisible\"\n      width=\"30%\"\n    >\n      <el-upload\n        class=\"equipment-image-uploader\"\n        :action=\"uploadUrl\"\n        :headers=\"uploadHeaders\"\n        :data=\"{ equipment_id: currentEquipment.id }\"\n        :show-file-list=\"false\"\n        :on-success=\"handleImageUploadSuccess\"\n        :on-error=\"handleUploadError\"\n        :before-upload=\"beforeUpload\"\n      >\n        <img v-if=\"imageUrl\" :src=\"imageUrl\" class=\"equipment-image\">\n        <i v-else class=\"el-icon-plus equipment-image-uploader-icon\"></i>\n      </el-upload>\n      <div class=\"image-tip\">{{ $t('admin.imageTip') }}</div>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"uploadDialogVisible = false\">{{ $t('common.cancel') }}</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport { equipmentApi } from '@/api'\nimport RichTextEditor from '@/components/common/RichTextEditor.vue'\n\nexport default {\n  name: 'AdminEquipment',\n\n  components: {\n    RichTextEditor\n  },\n\n  data() {\n    return {\n      loading: false,\n      submitting: false,\n      equipments: [],\n      total: 0,\n      currentPage: 1,\n      pageSize: 10,\n      categories: [],\n      filter: {\n        category: '',\n        status: '',\n        search: ''\n      },\n\n      dialogVisible: false,\n      dialogType: 'add', // 'add' or 'edit'\n      form: {\n        id: null,\n        name: '',\n        category: '',\n        model: '',\n        location: '',\n        status: 'available',\n        description: '',\n        user_guide: '',\n        image_url: ''\n      },\n      rules: {\n        name: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'blur' }\n        ],\n        category: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'change' }\n        ],\n        status: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'change' }\n        ]\n      },\n\n      uploadDialogVisible: false,\n      currentEquipment: {},\n      imageUrl: '',\n\n      // 上传相关\n      uploadUrl: '/api/equipment/upload-image',\n\n      // 视频相关\n      videoType: 'youtube',\n\n      // 富文本编辑器选项\n      editorOptions: {\n        modules: {\n          toolbar: [\n            ['bold', 'italic', 'underline', 'strike'],\n            ['blockquote', 'code-block'],\n            [{ 'header': 1 }, { 'header': 2 }],\n            [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n            [{ 'script': 'sub' }, { 'script': 'super' }],\n            [{ 'indent': '-1' }, { 'indent': '+1' }],\n            [{ 'direction': 'rtl' }],\n            [{ 'size': ['small', false, 'large', 'huge'] }],\n            [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n            [{ 'color': [] }, { 'background': [] }],\n            [{ 'font': [] }],\n            [{ 'align': [] }],\n            ['clean'],\n            ['link', 'image', 'video']\n          ]\n        },\n        placeholder: '',\n        theme: 'snow'\n      },\n    }\n  },\n\n  computed: {\n    ...mapGetters(['getToken']),\n\n    uploadHeaders() {\n      return {\n        Authorization: `Bearer ${this.getToken}`\n      }\n    }\n  },\n\n  created() {\n    this.fetchData()\n    this.fetchCategories()\n  },\n\n  methods: {\n    // 获取设备列表\n    async fetchData() {\n      try {\n        this.loading = true\n\n        const params = {\n          page: this.currentPage,\n          limit: this.pageSize,\n          category: this.filter.category || undefined,\n          status: this.filter.status || undefined,\n          search: this.filter.search || undefined\n        }\n\n        const response = await equipmentApi.getEquipments(params)\n        this.equipments = response.data.items\n        this.total = response.data.total\n      } catch (error) {\n        console.error('获取设备列表失败:', error)\n        this.$message.error(this.$t('error.serverError'))\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // 获取设备类别\n    async fetchCategories() {\n      try {\n        const response = await equipmentApi.getCategories()\n        this.categories = response.data.categories.map(item => item.category)\n      } catch (error) {\n        console.error('获取设备类别失败:', error)\n      }\n    },\n\n    // 处理筛选条件变化\n    handleFilterChange() {\n      this.currentPage = 1\n      this.fetchData()\n    },\n\n    // 处理页码变化\n    handlePageChange(page) {\n      this.currentPage = page\n      this.fetchData()\n    },\n\n    // 添加设备\n    handleAdd() {\n      this.dialogType = 'add'\n      this.form = {\n        id: null,\n        name: '',\n        category: '',\n        model: '',\n        location: '',\n        status: 'available',\n        description: '',\n        user_guide: '',\n        video_tutorial: '',\n        image_url: ''\n      }\n      this.dialogVisible = true\n    },\n\n    // 编辑设备\n    handleEdit(row) {\n      this.dialogType = 'edit'\n      this.form = { ...row }\n      this.dialogVisible = true\n    },\n\n    // 删除设备\n    handleDelete(row) {\n      this.$confirm(\n        this.$t('admin.confirmDeleteEquipment'),\n        this.$t('common.warning'),\n        {\n          confirmButtonText: this.$t('common.confirm'),\n          cancelButtonText: this.$t('common.cancel'),\n          type: 'warning'\n        }\n      ).then(async () => {\n        try {\n          this.loading = true\n\n          await equipmentApi.deleteEquipment(row.id)\n\n          this.$message.success(this.$t('admin.equipmentDeleted'))\n          this.fetchData()\n        } catch (error) {\n          console.error('删除设备失败:', error)\n          this.$message.error(this.$t('error.serverError'))\n        } finally {\n          this.loading = false\n        }\n      }).catch(() => {\n        // 取消删除，不做任何处理\n      })\n    },\n\n    // 上传设备图片\n    handleUploadImage(row) {\n      this.currentEquipment = row\n      this.imageUrl = row.image_url || ''\n      this.uploadDialogVisible = true\n    },\n\n    // 提交表单\n    submitForm() {\n      this.$refs.form.validate(async valid => {\n        if (!valid) return\n\n        try {\n          this.submitting = true\n\n          if (this.dialogType === 'add') {\n            // 创建设备\n            const response = await equipmentApi.createEquipment(this.form)\n            this.$message.success(this.$t('admin.equipmentAdded'))\n          } else {\n            // 更新设备\n            const response = await equipmentApi.updateEquipment(this.form.id, this.form)\n            this.$message.success(this.$t('admin.equipmentUpdated'))\n          }\n\n          this.dialogVisible = false\n          this.fetchData()\n        } catch (error) {\n          console.error('保存设备失败:', error)\n          this.$message.error(this.$t('error.serverError'))\n        } finally {\n          this.submitting = false\n        }\n      })\n    },\n\n    // 重置表单\n    resetForm() {\n      if (this.$refs.form) {\n        this.$refs.form.resetFields()\n      }\n    },\n\n    // 上传前验证\n    beforeUpload(file) {\n      const isImage = file.type.startsWith('image/')\n      const isLt2M = file.size / 1024 / 1024 < 2\n\n      if (!isImage) {\n        this.$message.error(this.$t('admin.imageTypeError'))\n        return false\n      }\n\n      if (!isLt2M) {\n        this.$message.error(this.$t('admin.imageSizeError'))\n        return false\n      }\n\n      return true\n    },\n\n    // 上传成功（添加/编辑表单中）\n    handleUploadSuccess(response) {\n      this.form.image_url = response.data.image_url\n      this.$message.success(this.$t('admin.imageUploadSuccess'))\n    },\n\n    // 上传成功（单独上传图片对话框）\n    handleImageUploadSuccess(response) {\n      this.imageUrl = response.data.image_url\n      this.currentEquipment.image_url = response.data.image_url\n\n      // 更新设备列表中的图片URL\n      const index = this.equipments.findIndex(item => item.id === this.currentEquipment.id)\n      if (index !== -1) {\n        this.$set(this.equipments, index, { ...this.currentEquipment })\n      }\n\n      this.$message.success(this.$t('admin.imageUploadSuccess'))\n\n      // 关闭对话框\n      setTimeout(() => {\n        this.uploadDialogVisible = false\n      }, 1500)\n    },\n\n    // 上传失败\n    handleUploadError(error) {\n      console.error('上传图片失败:', error)\n      this.$message.error(this.$t('admin.imageUploadError'))\n    },\n\n    // 处理导入/导出\n    handleImportExport(command) {\n      switch (command) {\n        case 'import':\n          this.handleImport()\n          break\n        case 'export':\n          this.handleExport()\n          break\n        case 'template':\n          this.downloadTemplate()\n          break\n      }\n    },\n\n    // 导入设备\n    handleImport() {\n      // 创建一个隐藏的文件输入框\n      const input = document.createElement('input')\n      input.type = 'file'\n      input.accept = '.xlsx,.xls'\n      input.style.display = 'none'\n\n      // 监听文件选择事件\n      input.addEventListener('change', async (e) => {\n        const file = e.target.files[0]\n        if (!file) return\n\n        // 创建 FormData\n        const formData = new FormData()\n        formData.append('file', file)\n\n        try {\n          this.loading = true\n\n          // 发送请求\n          const response = await this.$axios.post('/api/equipment/import', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'Authorization': `Bearer ${this.getToken}`\n            }\n          })\n\n          this.$message.success(response.data.message || this.$t('admin.importSuccess'))\n\n          // 重新加载数据\n          this.fetchData()\n        } catch (error) {\n          console.error('导入设备失败:', error)\n          this.$message.error(error.response?.data?.detail || this.$t('admin.importError'))\n        } finally {\n          this.loading = false\n\n          // 移除输入框\n          document.body.removeChild(input)\n        }\n      })\n\n      // 添加到文档并触发点击\n      document.body.appendChild(input)\n      input.click()\n    },\n\n    // 导出设备\n    handleExport() {\n      try {\n        // 构建查询参数\n        const params = new URLSearchParams()\n        if (this.filter.category) params.append('category', this.filter.category)\n        if (this.filter.status) params.append('status', this.filter.status)\n\n        // 生成导出 URL\n        const exportUrl = `/api/equipment/export?${params.toString()}`\n\n        // 使用浏览器下载\n        window.open(exportUrl, '_blank')\n      } catch (error) {\n        console.error('导出设备失败:', error)\n        this.$message.error(this.$t('admin.exportError'))\n      }\n    },\n\n    // 下载模板\n    downloadTemplate() {\n      try {\n        // 使用浏览器下载\n        window.open('/api/equipment/template', '_blank')\n      } catch (error) {\n        console.error('下载模板失败:', error)\n        this.$message.error(this.$t('admin.templateError'))\n      }\n    },\n\n    // 处理视频类型变化\n    handleVideoTypeChange() {\n      // 如果已经有视频URL，则根据新的视频类型进行转换\n      if (this.form.video_tutorial) {\n        // 提取视频ID\n        let videoId = ''\n\n        // 尝试从当前的URL中提取视频ID\n        if (this.form.video_tutorial.includes('youtube.com') || this.form.video_tutorial.includes('youtu.be')) {\n          // 从 YouTube URL 提取视频ID\n          const match = this.form.video_tutorial.match(/(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/ ]{11})/)\n          if (match && match[1]) {\n            videoId = match[1]\n          }\n        } else if (this.form.video_tutorial.includes('bilibili.com')) {\n          // 从 Bilibili URL 提取视频ID\n          const match = this.form.video_tutorial.match(/bilibili\\.com\\/video\\/([^\\/?]+)/)\n          if (match && match[1]) {\n            videoId = match[1].replace('BV', '')\n          }\n        }\n\n        // 如果成功提取到视频ID，则根据新的视频类型生成URL\n        if (videoId) {\n          switch (this.videoType) {\n            case 'youtube':\n              this.form.video_tutorial = `https://www.youtube.com/embed/${videoId}`\n              break\n            case 'bilibili':\n              this.form.video_tutorial = `https://player.bilibili.com/player.html?bvid=BV${videoId}`\n              break\n            default:\n              // 其他类型不做处理\n              break\n          }\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.admin-equipment {\n  padding: 20px;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.page-actions {\n  display: flex;\n  gap: 10px;\n}\n\n.page-header h2 {\n  margin: 0;\n  font-size: 20px;\n}\n\n.filter-card {\n  margin-bottom: 20px;\n}\n\n.filter-form .el-form-item {\n  margin-bottom: 0;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  text-align: right;\n}\n\n.quill-editor {\n  height: 300px;\n  margin-bottom: 10px;\n}\n\n.editor-tip {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 5px;\n}\n\n.danger-button {\n  color: #F56C6C;\n}\n\n.equipment-image-uploader {\n  text-align: center;\n}\n\n.equipment-image-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n  width: 178px;\n  height: 178px;\n  display: inline-block;\n}\n\n.equipment-image-uploader .el-upload:hover {\n  border-color: #409EFF;\n}\n\n.equipment-image-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 178px;\n  height: 178px;\n  line-height: 178px;\n  text-align: center;\n}\n\n.equipment-image {\n  width: 178px;\n  height: 178px;\n  display: block;\n  object-fit: cover;\n}\n\n.image-tip,\n.video-tip {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 5px;\n}\n\n@media (max-width: 768px) {\n  .admin-equipment {\n    padding: 10px;\n  }\n\n  .filter-form {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .filter-form .el-form-item {\n    margin-right: 0;\n    margin-bottom: 10px;\n  }\n}\n</style>\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\components\\layout\\AppHeader.vue",["151"],"<template>\n  <div>\n    <!-- 桌面端导航 -->\n    <div class=\"app-header desktop-nav\">\n      <el-menu\n        :default-active=\"activeIndex\"\n        class=\"el-menu-demo\"\n        mode=\"horizontal\"\n        router\n        background-color=\"#409EFF\"\n        text-color=\"#fff\"\n        active-text-color=\"#ffd04b\"\n      >\n        <div class=\"logo-container\">\n          <router-link to=\"/\" class=\"logo-link\">\n            <img src=\"@/assets/images/logo.svg\" alt=\"Logo\" class=\"logo-image\" />\n            <span class=\"logo-text\">{{ $t('common.appName') }}</span>\n          </router-link>\n        </div>\n\n        <el-menu-item index=\"/\">{{ $t('nav.home') }}</el-menu-item>\n        <el-menu-item index=\"/equipment\">{{ $t('nav.equipment') }}</el-menu-item>\n        <el-menu-item index=\"/reservation/query\">{{ $t('nav.query') }}</el-menu-item>\n\n        <div class=\"right-menu\">\n          <el-dropdown trigger=\"click\" @command=\"handleLanguageChange\">\n            <span class=\"el-dropdown-link\">\n              {{ currentLanguage === 'zh-CN' ? '中文' : 'English' }}\n              <i class=\"el-icon-arrow-down el-icon--right\"></i>\n            </span>\n            <el-dropdown-menu slot=\"dropdown\">\n              <el-dropdown-item command=\"zh-CN\">中文</el-dropdown-item>\n              <el-dropdown-item command=\"en\">English</el-dropdown-item>\n            </el-dropdown-menu>\n          </el-dropdown>\n\n        <el-button\n          v-if=\"isLoggedIn\"\n          type=\"text\"\n          class=\"admin-button\"\n          @click=\"goToAdmin\"\n        >\n          {{ $t('nav.admin') }}\n        </el-button>\n        <el-button\n          v-else\n          type=\"text\"\n          class=\"login-button\"\n          @click=\"goToLogin\"\n        >\n          {{ $t('nav.login') }}\n        </el-button>\n      </div>\n    </el-menu>\n    </div>\n\n    <!-- 移动端导航 -->\n    <mobile-nav class=\"mobile-nav\" />\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport MobileNav from './MobileNav.vue'\n\nexport default {\n  name: 'AppHeader',\n\n  components: {\n    MobileNav\n  },\n\n  computed: {\n    ...mapGetters(['isLoggedIn', 'getLanguage']),\n\n    activeIndex() {\n      return this.$route.path\n    },\n\n    currentLanguage() {\n      return this.getLanguage\n    }\n  },\n\n  methods: {\n    ...mapActions(['setLanguage']),\n\n    goToAdmin() {\n      this.$router.push('/admin/dashboard')\n    },\n\n    goToLogin() {\n      this.$router.push('/admin/login')\n    },\n\n    handleLanguageChange(lang) {\n      this.setLanguage(lang)\n      this.$i18n.locale = lang\n    }\n  }\n}\n</script>\n\n<style scoped>\n.app-header {\n  width: 100%;\n}\n\n.el-menu {\n  display: flex;\n  align-items: center;\n  padding: 0 20px;\n}\n\n.logo-container {\n  margin-right: 20px;\n}\n\n.logo-link {\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  color: #fff;\n}\n\n.logo-image {\n  height: 32px;\n  margin-right: 10px;\n}\n\n.logo-text {\n  font-size: 18px;\n  font-weight: bold;\n}\n\n.right-menu {\n  margin-left: auto;\n  display: flex;\n  align-items: center;\n}\n\n.el-dropdown-link {\n  color: #fff;\n  cursor: pointer;\n  margin-right: 20px;\n}\n\n.admin-button,\n.login-button {\n  color: #fff;\n  margin-left: 10px;\n}\n\n@media (max-width: 768px) {\n  .desktop-nav {\n    display: none;\n  }\n}\n</style>\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\components\\layout\\AppFooter.vue",["152"],"<template>\n  <div class=\"app-footer\">\n    <div class=\"footer-content\">\n      <div class=\"footer-left\">\n        <p>&copy; {{ currentYear }} {{ $t('common.appName') }}</p>\n      </div>\n      <div class=\"footer-right\">\n        <router-link to=\"/admin/login\" class=\"admin-link\">\n          {{ $t('nav.login') }}\n        </router-link>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'AppFooter',\n  \n  computed: {\n    currentYear() {\n      return new Date().getFullYear()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.app-footer {\n  width: 100%;\n  padding: 20px 0;\n  background-color: #f5f7fa;\n  border-top: 1px solid #e4e7ed;\n}\n\n.footer-content {\n  max-width: 1200px;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 20px;\n}\n\n.footer-left p {\n  margin: 0;\n  color: #606266;\n}\n\n.admin-link {\n  color: #909399;\n  text-decoration: none;\n  transition: color 0.3s;\n}\n\n.admin-link:hover {\n  color: #409EFF;\n}\n\n@media (max-width: 768px) {\n  .footer-content {\n    flex-direction: column;\n    text-align: center;\n  }\n  \n  .footer-left {\n    margin-bottom: 10px;\n  }\n}\n</style>\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\components\\admin\\AdminLayout.vue",["153"],"<template>\n  <div class=\"admin-layout\">\n    <el-container>\n      <el-aside width=\"220px\" class=\"admin-sidebar\">\n        <div class=\"sidebar-header\">\n          <img src=\"@/assets/logo.png\" alt=\"Logo\" class=\"sidebar-logo\" />\n          <span class=\"sidebar-title\">{{ $t('admin.adminPanel') }}</span>\n        </div>\n        \n        <el-menu\n          :default-active=\"activeMenu\"\n          class=\"sidebar-menu\"\n          background-color=\"#304156\"\n          text-color=\"#bfcbd9\"\n          active-text-color=\"#409EFF\"\n          router\n        >\n          <el-menu-item index=\"/admin/dashboard\">\n            <i class=\"el-icon-s-home\"></i>\n            <span>{{ $t('admin.dashboard') }}</span>\n          </el-menu-item>\n          \n          <el-menu-item index=\"/admin/equipment\">\n            <i class=\"el-icon-s-grid\"></i>\n            <span>{{ $t('admin.equipment') }}</span>\n          </el-menu-item>\n          \n          <el-menu-item index=\"/admin/reservation\">\n            <i class=\"el-icon-s-order\"></i>\n            <span>{{ $t('admin.reservation') }}</span>\n          </el-menu-item>\n          \n          <el-menu-item index=\"/admin/settings\">\n            <i class=\"el-icon-setting\"></i>\n            <span>{{ $t('admin.settings') }}</span>\n          </el-menu-item>\n        </el-menu>\n        \n        <div class=\"sidebar-footer\">\n          <el-dropdown trigger=\"click\" @command=\"handleCommand\">\n            <span class=\"user-dropdown\">\n              <i class=\"el-icon-user\"></i>\n              <span>{{ currentUser.name || currentUser.username }}</span>\n              <i class=\"el-icon-arrow-down el-icon--right\"></i>\n            </span>\n            <el-dropdown-menu slot=\"dropdown\">\n              <el-dropdown-item command=\"home\">\n                <i class=\"el-icon-s-home\"></i> {{ $t('nav.home') }}\n              </el-dropdown-item>\n              <el-dropdown-item command=\"logout\" divided>\n                <i class=\"el-icon-switch-button\"></i> {{ $t('nav.logout') }}\n              </el-dropdown-item>\n            </el-dropdown-menu>\n          </el-dropdown>\n        </div>\n      </el-aside>\n      \n      <el-container>\n        <el-header class=\"admin-header\">\n          <div class=\"header-left\">\n            <i\n              class=\"el-icon-s-fold toggle-sidebar\"\n              @click=\"toggleSidebar\"\n            ></i>\n            <slot name=\"header\"></slot>\n          </div>\n          \n          <div class=\"header-right\">\n            <el-dropdown trigger=\"click\" @command=\"handleLanguageChange\">\n              <span class=\"language-dropdown\">\n                {{ currentLanguage === 'zh-CN' ? '中文' : 'English' }}\n                <i class=\"el-icon-arrow-down el-icon--right\"></i>\n              </span>\n              <el-dropdown-menu slot=\"dropdown\">\n                <el-dropdown-item command=\"zh-CN\">中文</el-dropdown-item>\n                <el-dropdown-item command=\"en\">English</el-dropdown-item>\n              </el-dropdown-menu>\n            </el-dropdown>\n          </div>\n        </el-header>\n        \n        <el-main class=\"admin-main\">\n          <slot></slot>\n        </el-main>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\n\nexport default {\n  name: 'AdminLayout',\n  \n  data() {\n    return {\n      sidebarCollapsed: false\n    }\n  },\n  \n  computed: {\n    ...mapGetters(['currentUser', 'getLanguage']),\n    \n    activeMenu() {\n      return this.$route.path\n    },\n    \n    currentLanguage() {\n      return this.getLanguage\n    }\n  },\n  \n  methods: {\n    ...mapActions(['logout', 'setLanguage']),\n    \n    toggleSidebar() {\n      this.sidebarCollapsed = !this.sidebarCollapsed\n    },\n    \n    handleCommand(command) {\n      if (command === 'logout') {\n        this.handleLogout()\n      } else if (command === 'home') {\n        this.$router.push('/')\n      }\n    },\n    \n    handleLogout() {\n      this.logout()\n      this.$message.success(this.$t('admin.logoutSuccess'))\n      this.$router.push('/admin/login')\n    },\n    \n    handleLanguageChange(lang) {\n      this.setLanguage(lang)\n      this.$i18n.locale = lang\n    }\n  }\n}\n</script>\n\n<style scoped>\n.admin-layout {\n  height: 100vh;\n  overflow: hidden;\n}\n\n.admin-sidebar {\n  background-color: #304156;\n  color: #bfcbd9;\n  height: 100%;\n  overflow-y: auto;\n  transition: width 0.3s;\n}\n\n.sidebar-header {\n  height: 60px;\n  display: flex;\n  align-items: center;\n  padding: 0 15px;\n  border-bottom: 1px solid #1f2d3d;\n}\n\n.sidebar-logo {\n  height: 32px;\n  margin-right: 10px;\n}\n\n.sidebar-title {\n  font-size: 16px;\n  font-weight: bold;\n  color: #fff;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.sidebar-menu {\n  border-right: none;\n}\n\n.sidebar-footer {\n  padding: 15px;\n  border-top: 1px solid #1f2d3d;\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  box-sizing: border-box;\n}\n\n.user-dropdown {\n  display: flex;\n  align-items: center;\n  color: #bfcbd9;\n  cursor: pointer;\n}\n\n.user-dropdown i {\n  margin-right: 5px;\n}\n\n.admin-header {\n  background-color: #fff;\n  border-bottom: 1px solid #e6e6e6;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 20px;\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n}\n\n.toggle-sidebar {\n  font-size: 20px;\n  margin-right: 20px;\n  cursor: pointer;\n  color: #606266;\n}\n\n.header-right {\n  display: flex;\n  align-items: center;\n}\n\n.language-dropdown {\n  color: #606266;\n  cursor: pointer;\n}\n\n.admin-main {\n  background-color: #f0f2f5;\n  padding: 20px;\n  overflow-y: auto;\n}\n\n@media (max-width: 768px) {\n  .admin-sidebar {\n    width: 64px !important;\n  }\n  \n  .sidebar-title {\n    display: none;\n  }\n}\n</style>\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\components\\common\\RichTextEditor.vue",["154"],"<template>\n  <div class=\"rich-text-editor\">\n    <quill-editor\n      v-model=\"content\"\n      :options=\"editorOptions\"\n      :placeholder=\"placeholder\"\n      @change=\"onChange\"\n    ></quill-editor>\n    <div v-if=\"showTip\" class=\"editor-tip\">{{ $t('admin.richTextEditorTip') }}</div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport axios from 'axios'\n\nexport default {\n  name: 'RichTextEditor',\n  \n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    showTip: {\n      type: Boolean,\n      default: true\n    }\n  },\n  \n  data() {\n    return {\n      content: this.value,\n      editorOptions: {\n        modules: {\n          toolbar: {\n            container: [\n              ['bold', 'italic', 'underline', 'strike'],\n              ['blockquote', 'code-block'],\n              [{ 'header': 1 }, { 'header': 2 }],\n              [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n              [{ 'script': 'sub' }, { 'script': 'super' }],\n              [{ 'indent': '-1' }, { 'indent': '+1' }],\n              [{ 'direction': 'rtl' }],\n              [{ 'size': ['small', false, 'large', 'huge'] }],\n              [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n              [{ 'color': [] }, { 'background': [] }],\n              [{ 'font': [] }],\n              [{ 'align': [] }],\n              ['clean'],\n              ['link', 'image', 'video']\n            ],\n            handlers: {\n              'image': this.imageHandler\n            }\n          }\n        },\n        placeholder: this.placeholder,\n        theme: 'snow'\n      }\n    }\n  },\n  \n  computed: {\n    ...mapGetters(['getToken'])\n  },\n  \n  watch: {\n    value(newVal) {\n      if (newVal !== this.content) {\n        this.content = newVal\n      }\n    }\n  },\n  \n  methods: {\n    onChange() {\n      this.$emit('input', this.content)\n      this.$emit('change', this.content)\n    },\n    \n    imageHandler() {\n      const input = document.createElement('input')\n      input.setAttribute('type', 'file')\n      input.setAttribute('accept', 'image/*')\n      input.click()\n      \n      input.onchange = async () => {\n        const file = input.files[0]\n        if (!file) return\n        \n        // 检查文件类型\n        if (!file.type.startsWith('image/')) {\n          this.$message.error(this.$t('admin.imageTypeError'))\n          return\n        }\n        \n        // 检查文件大小（限制为5MB）\n        if (file.size > 5 * 1024 * 1024) {\n          this.$message.error(this.$t('admin.imageSizeError'))\n          return\n        }\n        \n        try {\n          // 创建FormData\n          const formData = new FormData()\n          formData.append('file', file)\n          \n          // 显示上传中提示\n          const loading = this.$loading({\n            lock: true,\n            text: this.$t('common.uploading'),\n            spinner: 'el-icon-loading',\n            background: 'rgba(0, 0, 0, 0.7)'\n          })\n          \n          // 发送上传请求\n          const response = await axios.post('/api/upload/editor-image', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'Authorization': `Bearer ${this.getToken}`\n            }\n          })\n          \n          // 关闭上传中提示\n          loading.close()\n          \n          // 获取图片URL\n          const url = response.data.url\n          \n          // 获取编辑器实例\n          const quill = this.$refs.quillEditor.quill\n          \n          // 获取当前光标位置\n          const range = quill.getSelection()\n          \n          // 在光标位置插入图片\n          quill.insertEmbed(range.index, 'image', url)\n          \n          // 将光标移动到图片后面\n          quill.setSelection(range.index + 1)\n          \n          // 显示上传成功提示\n          this.$message.success(this.$t('admin.imageUploadSuccess'))\n        } catch (error) {\n          console.error('上传图片失败:', error)\n          this.$message.error(this.$t('admin.imageUploadError'))\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.rich-text-editor {\n  width: 100%;\n}\n\n.quill-editor {\n  height: 300px;\n  margin-bottom: 10px;\n}\n\n.editor-tip {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 5px;\n}\n</style>\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\components\\layout\\MobileNav.vue",["155"],"<template>\n  <div class=\"mobile-nav\">\n    <div class=\"mobile-nav-overlay\" v-if=\"isOpen\" @click=\"closeMenu\"></div>\n    \n    <div class=\"mobile-nav-toggle\" @click=\"toggleMenu\">\n      <i :class=\"isOpen ? 'el-icon-close' : 'el-icon-menu'\"></i>\n    </div>\n    \n    <div class=\"mobile-nav-menu\" :class=\"{ 'mobile-nav-menu-open': isOpen }\">\n      <div class=\"mobile-nav-header\">\n        <img src=\"@/assets/images/logo.svg\" alt=\"Logo\" class=\"mobile-nav-logo\">\n        <h3 class=\"mobile-nav-title\">{{ $t('common.appName') }}</h3>\n      </div>\n      \n      <el-menu\n        :default-active=\"activeRoute\"\n        class=\"mobile-nav-list\"\n        background-color=\"#304156\"\n        text-color=\"#bfcbd9\"\n        active-text-color=\"#409EFF\"\n        @select=\"handleSelect\"\n      >\n        <el-menu-item index=\"/\">\n          <i class=\"el-icon-s-home\"></i>\n          <span>{{ $t('nav.home') }}</span>\n        </el-menu-item>\n        \n        <el-menu-item index=\"/equipment\">\n          <i class=\"el-icon-s-grid\"></i>\n          <span>{{ $t('nav.equipment') }}</span>\n        </el-menu-item>\n        \n        <el-menu-item index=\"/reservation/query\">\n          <i class=\"el-icon-s-order\"></i>\n          <span>{{ $t('nav.query') }}</span>\n        </el-menu-item>\n        \n        <el-menu-item index=\"/admin/login\">\n          <i class=\"el-icon-s-custom\"></i>\n          <span>{{ $t('nav.admin') }}</span>\n        </el-menu-item>\n      </el-menu>\n      \n      <div class=\"mobile-nav-footer\">\n        <language-switcher />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport LanguageSwitcher from '@/components/common/LanguageSwitcher.vue'\n\nexport default {\n  name: 'MobileNav',\n  \n  components: {\n    LanguageSwitcher\n  },\n  \n  data() {\n    return {\n      isOpen: false\n    }\n  },\n  \n  computed: {\n    activeRoute() {\n      return this.$route.path\n    }\n  },\n  \n  methods: {\n    toggleMenu() {\n      this.isOpen = !this.isOpen\n      \n      // 禁用/启用body滚动\n      if (this.isOpen) {\n        document.body.style.overflow = 'hidden'\n      } else {\n        document.body.style.overflow = ''\n      }\n    },\n    \n    closeMenu() {\n      this.isOpen = false\n      document.body.style.overflow = ''\n    },\n    \n    handleSelect(key) {\n      this.$router.push(key)\n      this.closeMenu()\n    }\n  },\n  \n  // 路由变化时关闭菜单\n  watch: {\n    '$route'() {\n      this.closeMenu()\n    }\n  },\n  \n  // 组件销毁时恢复body滚动\n  beforeDestroy() {\n    document.body.style.overflow = ''\n  }\n}\n</script>\n\n<style scoped>\n.mobile-nav {\n  display: none;\n}\n\n.mobile-nav-toggle {\n  position: fixed;\n  top: 15px;\n  right: 15px;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: #409EFF;\n  color: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  z-index: 1001;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.mobile-nav-toggle i {\n  font-size: 24px;\n}\n\n.mobile-nav-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 999;\n}\n\n.mobile-nav-menu {\n  position: fixed;\n  top: 0;\n  right: -280px;\n  width: 280px;\n  height: 100%;\n  background-color: #304156;\n  z-index: 1000;\n  transition: right 0.3s ease;\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n}\n\n.mobile-nav-menu-open {\n  right: 0;\n}\n\n.mobile-nav-header {\n  height: 60px;\n  display: flex;\n  align-items: center;\n  padding: 0 20px;\n  background-color: #263445;\n}\n\n.mobile-nav-logo {\n  width: 32px;\n  height: 32px;\n  margin-right: 10px;\n}\n\n.mobile-nav-title {\n  margin: 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: #fff;\n}\n\n.mobile-nav-list {\n  flex: 1;\n  border-right: none;\n}\n\n.mobile-nav-footer {\n  padding: 15px 20px;\n  background-color: #263445;\n  display: flex;\n  justify-content: center;\n}\n\n@media (max-width: 768px) {\n  .mobile-nav {\n    display: block;\n  }\n}\n</style>\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\api\\index.js",["156"],"import axios from 'axios'\n\n// Unsplash API\nexport const unsplashApi = {\n  // 搜索图片\n  searchPhotos(query, page = 1, perPage = 10) {\n    return axios.get('/api/unsplash/search', {\n      params: {\n        query,\n        page,\n        per_page: perPage\n      }\n    })\n  },\n\n  // 获取随机图片\n  getRandomPhoto(query) {\n    return axios.get('/api/unsplash/random', {\n      params: { query }\n    })\n  }\n}\n\n// 设备API\nexport const equipmentApi = {\n  // 获取设备列表\n  getEquipments(params) {\n    return axios.get('/api/equipment', { params })\n  },\n\n  // 获取设备详情\n  getEquipment(id) {\n    return axios.get(`/api/equipment/${id}`)\n  },\n\n  // 获取设备类别\n  getCategories() {\n    return axios.get('/api/equipment/categories')\n  },\n\n  // 获取设备可用性\n  getAvailability(id, startDate, endDate) {\n    return axios.get(`/api/equipment/${id}/availability`, {\n      params: { start_date: startDate, end_date: endDate }\n    })\n  },\n\n  // 创建设备（管理员）\n  createEquipment(data) {\n    return axios.post('/api/equipment', data)\n  },\n\n  // 更新设备（管理员）\n  updateEquipment(id, data) {\n    return axios.put(`/api/equipment/${id}`, data)\n  },\n\n  // 删除设备（管理员）\n  deleteEquipment(id) {\n    return axios.delete(`/api/equipment/${id}`)\n  }\n}\n\n// 预定API\nexport const reservationApi = {\n  // 创建预定\n  createReservation(data) {\n    return axios.post('/api/reservation', data)\n  },\n\n  // 获取预定列表（管理员）\n  getReservations(params) {\n    return axios.get('/api/reservation', { params })\n  },\n\n  // 获取预定详情\n  getReservation(code) {\n    return axios.get(`/api/reservation/${code}`)\n  },\n\n  // 更新预定\n  updateReservation(code, data) {\n    return axios.put(`/api/reservation/${code}`, data)\n  },\n\n  // 取消预定\n  cancelReservation(code, data) {\n    return axios.post(`/api/reservation/cancel/${code}`, data)\n  },\n\n  // 获取预定二维码\n  getReservationQrcode(code) {\n    return axios.get(`/api/reservation/qrcode/${code}`)\n  }\n}\n\n// 管理员API\nexport const adminApi = {\n  // 管理员登录\n  login(username, password) {\n    const formData = new FormData()\n    formData.append('username', username)\n    formData.append('password', password)\n    return axios.post('/api/admin/login', formData)\n  },\n\n  // 获取管理员列表（超级管理员）\n  getAdmins(params) {\n    return axios.get('/api/admin', { params })\n  },\n\n  // 创建管理员（超级管理员）\n  createAdmin(data) {\n    return axios.post('/api/admin', data)\n  },\n\n  // 更新管理员\n  updateAdmin(id, data) {\n    return axios.put(`/api/admin/${id}`, data)\n  },\n\n  // 删除管理员（超级管理员）\n  deleteAdmin(id) {\n    return axios.delete(`/api/admin/${id}`)\n  },\n\n  // 获取系统设置\n  getSettings() {\n    return axios.get('/api/admin/settings')\n  },\n\n  // 更新系统设置\n  updateSettings(data) {\n    return axios.put('/api/admin/settings', data)\n  }\n}\n\nexport default {\n  equipment: equipmentApi,\n  reservation: reservationApi,\n  admin: adminApi,\n  unsplash: unsplashApi\n}\n","D:\\Python Projects\\equipment-reservation-system\\frontend\\src\\components\\common\\LanguageSwitcher.vue",["157"],"<template>\n  <el-dropdown trigger=\"click\" @command=\"handleLanguageChange\">\n    <span class=\"el-dropdown-link\">\n      {{ currentLanguage === 'zh-CN' ? '中文' : 'English' }}\n      <i class=\"el-icon-arrow-down el-icon--right\"></i>\n    </span>\n    <el-dropdown-menu slot=\"dropdown\">\n      <el-dropdown-item command=\"zh-CN\">中文</el-dropdown-item>\n      <el-dropdown-item command=\"en\">English</el-dropdown-item>\n    </el-dropdown-menu>\n  </el-dropdown>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\n\nexport default {\n  name: 'LanguageSwitcher',\n  \n  computed: {\n    ...mapGetters(['getLanguage']),\n    \n    currentLanguage() {\n      return this.getLanguage\n    }\n  },\n  \n  methods: {\n    ...mapActions(['setLanguage']),\n    \n    handleLanguageChange(lang) {\n      this.setLanguage(lang)\n      this.$i18n.locale = lang\n    }\n  }\n}\n</script>\n\n<style scoped>\n.el-dropdown-link {\n  color: #fff;\n  cursor: pointer;\n}\n</style>\n",{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},{"ruleId":null,"fatal":true,"severity":2,"message":"158"},"Parsing error: Cannot find module 'babel-eslint'\nRequire stack:\n- D:\\Python Projects\\equipment-reservation-system\\frontend\\node_modules\\vue-eslint-parser\\index.js\n- D:\\Python Projects\\equipment-reservation-system\\frontend\\node_modules\\eslint-plugin-vue\\lib\\utils\\index.js\n- D:\\Python Projects\\equipment-reservation-system\\frontend\\node_modules\\eslint-plugin-vue\\lib\\rules\\array-bracket-newline.js\n- D:\\Python Projects\\equipment-reservation-system\\frontend\\node_modules\\eslint-plugin-vue\\lib\\index.js\n- D:\\Python Projects\\equipment-reservation-system\\frontend\\node_modules\\@eslint\\eslintrc\\lib\\config-array-factory.js\n- D:\\Python Projects\\equipment-reservation-system\\frontend\\node_modules\\@eslint\\eslintrc\\lib\\index.js\n- D:\\Python Projects\\equipment-reservation-system\\frontend\\node_modules\\eslint\\lib\\cli-engine\\cli-engine.js\n- D:\\Python Projects\\equipment-reservation-system\\frontend\\node_modules\\eslint\\lib\\cli-engine\\index.js\n- D:\\Python Projects\\equipment-reservation-system\\frontend\\node_modules\\eslint\\lib\\api.js\n- D:\\Python Projects\\equipment-reservation-system\\frontend\\node_modules\\eslint-webpack-plugin\\dist\\getESLint.js\n- D:\\Python Projects\\equipment-reservation-system\\frontend\\node_modules\\eslint-webpack-plugin\\dist\\linter.js\n- D:\\Python Projects\\equipment-reservation-system\\frontend\\node_modules\\eslint-webpack-plugin\\dist\\index.js\n- D:\\Python Projects\\equipment-reservation-system\\frontend\\node_modules\\@vue\\cli-plugin-eslint\\index.js\n- D:\\Python Projects\\equipment-reservation-system\\frontend\\node_modules\\@vue\\cli-service\\lib\\Service.js\n- D:\\Python Projects\\equipment-reservation-system\\frontend\\node_modules\\@vue\\cli-service\\bin\\vue-cli-service.js"]