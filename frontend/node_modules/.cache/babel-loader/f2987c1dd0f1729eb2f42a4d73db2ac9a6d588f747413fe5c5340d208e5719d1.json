{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nimport { equipmentApi } from '@/api';\nimport axios from 'axios';\nexport default {\n  name: 'EquipmentList',\n  data() {\n    return {\n      loading: false,\n      equipments: [],\n      total: 0,\n      currentPage: 1,\n      pageSize: 20,\n      categories: [],\n      filter: {\n        category: '',\n        status: '',\n        search: ''\n      }\n    };\n  },\n  computed: {\n    ...mapGetters(['getEquipmentCategories']),\n    // 获取完整的图片URL\n    baseUrl() {\n      return axios.defaults.baseURL || 'http://localhost:8000';\n    }\n  },\n  created() {\n    this.fetchData();\n    this.fetchCategories();\n  },\n  methods: {\n    ...mapActions(['fetchEquipmentCategories']),\n    async fetchData() {\n      this.loading = true;\n      try {\n        const params = {\n          page: this.currentPage,\n          limit: this.pageSize,\n          category: this.filter.category || undefined,\n          status: this.filter.status || undefined,\n          search: this.filter.search || undefined\n        };\n        const response = await equipmentApi.getEquipments(params);\n        this.equipments = response.data.items;\n        this.total = response.data.total;\n      } catch (error) {\n        console.error('Failed to fetch equipments:', error);\n        this.$message.error(this.$t('common.error'));\n      } finally {\n        this.loading = false;\n      }\n    },\n    async fetchCategories() {\n      try {\n        const response = await equipmentApi.getCategories();\n        // 直接使用返回的类别列表，不需要再映射\n        this.categories = response.data.categories || [];\n      } catch (error) {\n        console.error('Failed to fetch categories:', error);\n        // 确保即使API调用失败，categories也是一个数组\n        this.categories = [];\n      }\n    },\n    handleFilterChange() {\n      this.currentPage = 1;\n      this.fetchData();\n    },\n    handlePageChange(page) {\n      this.currentPage = page;\n      this.fetchData();\n    },\n    viewEquipmentDetail(id) {\n      this.$router.push(`/equipment/${id}`);\n    },\n    reserveEquipment(id) {\n      this.$router.push(`/equipment/${id}/reserve`);\n    },\n    // 获取完整的图片URL\n    getFullImageUrl(url) {\n      if (!url) return '';\n\n      // 如果已经是完整URL，直接返回\n      if (url.startsWith('http://') || url.startsWith('https://')) {\n        return url;\n      }\n\n      // 如果是相对路径，添加基础URL\n      if (url.startsWith('/')) {\n        return this.baseUrl + url;\n      }\n\n      // 其他情况，添加基础URL和斜杠\n      return this.baseUrl + '/' + url;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}