{"ast":null,"code":"import axios from 'axios';\n\n/**\n * 预定API\n */\nexport default {\n  // 创建预定\n  createReservation(data) {\n    return axios.post('/api/reservation', data);\n  },\n  // 获取预定列表（管理员）\n  getReservations(params) {\n    return axios.get('/api/reservation', {\n      params\n    });\n  },\n  // 获取预定详情\n  getReservation(code) {\n    // 添加时间戳参数，防止缓存\n    const timestamp = new Date().getTime();\n    return axios.get(`/api/reservation/${code}`, {\n      params: {\n        _t: timestamp\n      }\n    });\n  },\n  // 通过预定码获取预定详情\n  getReservationByCode(code, params = {}) {\n    // 添加时间戳参数，防止缓存\n    const timestamp = new Date().getTime();\n\n    // 处理预约序号参数，确保它是字符串格式\n    if (params.reservation_number && typeof params.reservation_number === 'object') {\n      console.warn('预约序号参数是对象类型，将被转换为字符串:', params.reservation_number);\n      if (params.reservation_number.reservation_number) {\n        params.reservation_number = params.reservation_number.reservation_number;\n      } else {\n        console.error('无法从对象中提取预约序号:', params.reservation_number);\n      }\n    }\n    params = {\n      ...params,\n      _t: timestamp\n    };\n\n    // 构建API基础URL\n    const url = `/api/reservation/code/${code}`;\n\n    // 记录API请求信息\n    console.log(`API请求: ${url}`, '参数:', params);\n    console.log('获取预约详情URL:', url);\n\n    // 发送请求并记录响应\n    return axios.get(url, {\n      params\n    }).then(response => {\n      console.log(`API响应: ${url}`, response.data);\n\n      // 调试状态信息\n      if (response.data && response.data.success && response.data.data) {\n        console.log(`预约状态: ${response.data.data.status}`);\n      }\n      return response;\n    }).catch(error => {\n      console.error(`API错误: ${url}`, error);\n      throw error;\n    });\n  },\n  // 更新预定\n  updateReservation(code, data) {\n    return axios.put(`/api/reservation/code/${code}`, data);\n  },\n  // 取消预定\n  cancelReservation(code, data = {}) {\n    // 添加时间戳参数，防止缓存\n    const timestamp = new Date().getTime();\n    if (!data._t) {\n      data._t = timestamp;\n    }\n\n    // 确保reservation_number参数被正确传递\n    if (data.reservation_number) {\n      console.log('取消预约 - 预约序号:', data.reservation_number);\n    } else {\n      console.warn('取消预约 - 未提供预约序号，将取消所有具有相同预约码的预约');\n    }\n    console.log('取消预约请求参数:', data);\n    console.log('取消预约请求URL:', `/api/reservation/cancel/code/${code}`);\n\n    // 使用JSON格式发送请求\n    return axios.post(`/api/reservation/cancel/code/${code}`, data);\n  },\n  // 获取设备在指定日期的可用性\n  getEquipmentAvailability(equipmentId, params) {\n    return axios.get(`/api/equipment/${equipmentId}/availability`, {\n      params\n    });\n  }\n};","map":{"version":3,"names":["axios","createReservation","data","post","getReservations","params","get","getReservation","code","timestamp","Date","getTime","_t","getReservationByCode","reservation_number","console","warn","error","url","log","then","response","success","status","catch","updateReservation","put","cancelReservation","getEquipmentAvailability","equipmentId"],"sources":["D:/Equipment-Reservation-System-main/frontend/src/api/reservation.js"],"sourcesContent":["import axios from 'axios'\n\n/**\n * 预定API\n */\nexport default {\n  // 创建预定\n  createReservation(data) {\n    return axios.post('/api/reservation', data)\n  },\n\n  // 获取预定列表（管理员）\n  getReservations(params) {\n    return axios.get('/api/reservation', { params })\n  },\n\n  // 获取预定详情\n  getReservation(code) {\n    // 添加时间戳参数，防止缓存\n    const timestamp = new Date().getTime()\n    return axios.get(`/api/reservation/${code}`, { params: { _t: timestamp } })\n  },\n\n  // 通过预定码获取预定详情\n  getReservationByCode(code, params = {}) {\n    // 添加时间戳参数，防止缓存\n    const timestamp = new Date().getTime()\n\n    // 处理预约序号参数，确保它是字符串格式\n    if (params.reservation_number && typeof params.reservation_number === 'object') {\n      console.warn('预约序号参数是对象类型，将被转换为字符串:', params.reservation_number);\n      if (params.reservation_number.reservation_number) {\n        params.reservation_number = params.reservation_number.reservation_number;\n      } else {\n        console.error('无法从对象中提取预约序号:', params.reservation_number);\n      }\n    }\n\n    params = { ...params, _t: timestamp }\n\n    // 构建API基础URL\n    const url = `/api/reservation/code/${code}`\n\n    // 记录API请求信息\n    console.log(`API请求: ${url}`, '参数:', params);\n    console.log('获取预约详情URL:', url);\n\n    // 发送请求并记录响应\n    return axios.get(url, { params })\n      .then(response => {\n        console.log(`API响应: ${url}`, response.data);\n\n        // 调试状态信息\n        if (response.data && response.data.success && response.data.data) {\n          console.log(`预约状态: ${response.data.data.status}`);\n        }\n\n        return response;\n      })\n      .catch(error => {\n        console.error(`API错误: ${url}`, error);\n        throw error;\n      });\n  },\n\n  // 更新预定\n  updateReservation(code, data) {\n    return axios.put(`/api/reservation/code/${code}`, data)\n  },\n\n  // 取消预定\n  cancelReservation(code, data = {}) {\n    // 添加时间戳参数，防止缓存\n    const timestamp = new Date().getTime()\n    if (!data._t) {\n      data._t = timestamp\n    }\n\n    // 确保reservation_number参数被正确传递\n    if (data.reservation_number) {\n      console.log('取消预约 - 预约序号:', data.reservation_number)\n    } else {\n      console.warn('取消预约 - 未提供预约序号，将取消所有具有相同预约码的预约')\n    }\n\n    console.log('取消预约请求参数:', data)\n    console.log('取消预约请求URL:', `/api/reservation/cancel/code/${code}`)\n\n    // 使用JSON格式发送请求\n    return axios.post(`/api/reservation/cancel/code/${code}`, data)\n  },\n\n\n  // 获取设备在指定日期的可用性\n  getEquipmentAvailability(equipmentId, params) {\n    return axios.get(`/api/equipment/${equipmentId}/availability`, { params })\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}