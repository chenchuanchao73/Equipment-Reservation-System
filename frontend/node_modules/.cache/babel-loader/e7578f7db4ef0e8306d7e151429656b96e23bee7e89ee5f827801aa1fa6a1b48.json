{"ast":null,"code":"import { equipmentApi, reservationApi } from '@/api';\nimport axios from 'axios';\nimport { isReservationExpired } from '@/utils/date';\nexport default {\n  name: 'EquipmentDetail',\n  data() {\n    return {\n      loading: false,\n      loadingReservations: false,\n      equipment: null,\n      reservations: [],\n      dateRange: [new Date(), new Date(new Date().setDate(new Date().getDate() + 7))],\n      pickerOptions: {\n        shortcuts: [{\n          text: this.$t('common.today'),\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: this.$t('common.week'),\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: this.$t('common.month'),\n          onClick(picker) {\n            const end = new Date();\n            const start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      }\n    };\n  },\n  computed: {\n    // 获取完整的图片URL\n    baseUrl() {\n      return axios.defaults.baseURL || 'http://localhost:8000';\n    }\n  },\n  created() {\n    this.fetchEquipment();\n  },\n  methods: {\n    async fetchEquipment() {\n      this.loading = true;\n      try {\n        const equipmentId = this.$route.params.id;\n        const response = await equipmentApi.getEquipment(equipmentId);\n        this.equipment = response.data;\n\n        // 获取预定情况\n        this.fetchReservations();\n      } catch (error) {\n        console.error('Failed to fetch equipment:', error);\n        this.$message.error(this.$t('common.error'));\n        this.equipment = null;\n      } finally {\n        this.loading = false;\n      }\n    },\n    async fetchReservations() {\n      if (!this.equipment) return;\n      this.loadingReservations = true;\n      try {\n        const equipmentId = this.equipment.id;\n        const startDate = this.formatDate(this.dateRange[0]);\n\n        // 将结束日期调整为当天的最后一秒\n        const endDateObj = new Date(this.dateRange[1]);\n        endDateObj.setHours(23, 59, 59, 999);\n        const endDate = endDateObj.toISOString();\n        const params = {\n          equipment_id: equipmentId,\n          from_date: startDate,\n          to_date: endDate\n          // 不指定status，获取所有状态的预定\n        };\n        const response = await reservationApi.getReservations(params);\n        this.reservations = response.data.items;\n      } catch (error) {\n        console.error('Failed to fetch reservations:', error);\n        this.$message.error(this.$t('common.error'));\n        this.reservations = [];\n      } finally {\n        this.loadingReservations = false;\n      }\n    },\n    reserveEquipment() {\n      this.$router.push(`/equipment/${this.equipment.id}/reserve`);\n    },\n    recurringReserveEquipment() {\n      this.$router.push(`/equipment/${this.equipment.id}/recurring-reserve`);\n    },\n    formatDateTime(dateTime) {\n      if (!dateTime) return '';\n      const date = new Date(dateTime);\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;\n    },\n    formatDate(date) {\n      if (!date) return '';\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    },\n    // 获取完整的图片URL\n    getFullImageUrl(url) {\n      if (!url) return '';\n\n      // 如果已经是完整URL，直接返回\n      if (url.startsWith('http://') || url.startsWith('https://')) {\n        return url;\n      }\n\n      // 如果是相对路径，添加基础URL\n      if (url.startsWith('/')) {\n        return this.baseUrl + url;\n      }\n\n      // 其他情况，添加基础URL和斜杠\n      return this.baseUrl + '/' + url;\n    },\n    // 获取时间线项的类型\n    getTimelineItemType(reservation) {\n      if (reservation.status === 'cancelled') {\n        return 'info';\n      }\n      if (isReservationExpired(reservation.end_datetime)) {\n        return 'warning';\n      }\n      return 'primary';\n    },\n    // 获取状态标签的类型\n    getStatusTagType(reservation) {\n      if (reservation.status === 'cancelled') {\n        return 'info';\n      }\n      if (isReservationExpired(reservation.end_datetime)) {\n        return 'warning';\n      }\n      return 'success';\n    },\n    // 获取状态文本\n    getStatusText(reservation) {\n      if (reservation.status === 'cancelled') {\n        return this.$t('reservation.cancelled');\n      }\n      if (isReservationExpired(reservation.end_datetime)) {\n        return this.$t('reservation.expired');\n      }\n      return this.$t('reservation.confirmed');\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}