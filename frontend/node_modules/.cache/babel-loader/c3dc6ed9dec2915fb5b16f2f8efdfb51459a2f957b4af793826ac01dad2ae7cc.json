{"ast":null,"code":"import { mapGetters } from 'vuex';\nimport { equipmentApi, categoryApi } from '@/api';\nimport RichTextEditor from '@/components/common/RichTextEditor.vue';\nimport axios from 'axios';\nexport default {\n  name: 'AdminEquipment',\n  components: {\n    RichTextEditor\n  },\n  data() {\n    return {\n      loading: false,\n      submitting: false,\n      equipments: [],\n      total: 0,\n      currentPage: 1,\n      pageSize: 10,\n      categories: [],\n      filter: {\n        category: '',\n        status: '',\n        search: ''\n      },\n      dialogVisible: false,\n      dialogType: 'add',\n      // 'add' or 'edit'\n      form: {\n        id: null,\n        name: '',\n        category: '',\n        model: '',\n        location: '',\n        status: 'available',\n        description: '',\n        user_guide: '',\n        image_path: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: this.$t('reservation.requiredField'),\n          trigger: 'blur'\n        }],\n        category: [{\n          required: true,\n          message: this.$t('reservation.requiredField'),\n          trigger: 'change'\n        }],\n        status: [{\n          required: true,\n          message: this.$t('reservation.requiredField'),\n          trigger: 'change'\n        }]\n      },\n      uploadDialogVisible: false,\n      currentEquipment: {},\n      imageUrl: '',\n      // 上传相关\n      uploadUrl: axios.defaults.baseURL + '/api/equipment/upload-image',\n      // 视频相关\n      videoType: 'youtube',\n      // 富文本编辑器选项\n      editorOptions: {\n        modules: {\n          toolbar: [['bold', 'italic', 'underline', 'strike'], ['blockquote', 'code-block'], [{\n            'header': 1\n          }, {\n            'header': 2\n          }], [{\n            'list': 'ordered'\n          }, {\n            'list': 'bullet'\n          }], [{\n            'script': 'sub'\n          }, {\n            'script': 'super'\n          }], [{\n            'indent': '-1'\n          }, {\n            'indent': '+1'\n          }], [{\n            'direction': 'rtl'\n          }], [{\n            'size': ['small', false, 'large', 'huge']\n          }], [{\n            'header': [1, 2, 3, 4, 5, 6, false]\n          }], [{\n            'color': []\n          }, {\n            'background': []\n          }], [{\n            'font': []\n          }], [{\n            'align': []\n          }], ['clean'], ['link', 'image', 'video']]\n        },\n        placeholder: '',\n        theme: 'snow'\n      }\n    };\n  },\n  computed: {\n    // 获取token\n    getToken() {\n      return localStorage.getItem('token') || '';\n    },\n    uploadHeaders() {\n      return {\n        Authorization: `Bearer ${localStorage.getItem('token') || ''}`\n      };\n    },\n    // 获取完整的图片URL\n    baseUrl() {\n      return axios.defaults.baseURL || 'http://localhost:8000';\n    }\n  },\n  created() {\n    this.fetchData();\n    this.fetchCategories();\n  },\n  methods: {\n    // 获取设备列表\n    async fetchData() {\n      try {\n        this.loading = true;\n        const params = {\n          page: this.currentPage,\n          limit: this.pageSize,\n          category: this.filter.category || undefined,\n          status: this.filter.status || undefined,\n          search: this.filter.search || undefined\n        };\n        const response = await equipmentApi.getEquipments(params);\n        this.equipments = response.data.items;\n        this.total = response.data.total;\n      } catch (error) {\n        console.error('获取设备列表失败:', error);\n        this.$message.error(this.$t('error.serverError'));\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 获取设备类别\n    async fetchCategories() {\n      try {\n        const response = await categoryApi.getAllCategories();\n        this.categories = response.data.map(item => item.name);\n      } catch (error) {\n        console.error('获取设备类别失败:', error);\n      }\n    },\n    // 处理筛选条件变化\n    handleFilterChange() {\n      this.currentPage = 1;\n      this.fetchData();\n    },\n    // 处理页码变化\n    handlePageChange(page) {\n      this.currentPage = page;\n      this.fetchData();\n    },\n    // 添加设备\n    handleAdd() {\n      this.dialogType = 'add';\n      this.form = {\n        id: null,\n        name: '',\n        category: '',\n        model: '',\n        location: '',\n        status: 'available',\n        description: '',\n        user_guide: '',\n        video_tutorial: '',\n        image_path: ''\n      };\n      this.dialogVisible = true;\n    },\n    // 编辑设备\n    handleEdit(row) {\n      this.dialogType = 'edit';\n      this.form = {\n        ...row\n      };\n      this.dialogVisible = true;\n    },\n    // 删除设备\n    handleDelete(row) {\n      this.$confirm(this.$t('admin.confirmDeleteEquipment'), this.$t('common.warning'), {\n        confirmButtonText: this.$t('common.confirm'),\n        cancelButtonText: this.$t('common.cancel'),\n        type: 'warning'\n      }).then(async () => {\n        try {\n          this.loading = true;\n          await equipmentApi.deleteEquipment(row.id);\n          this.$message.success(this.$t('admin.equipmentDeleted'));\n          this.fetchData();\n        } catch (error) {\n          console.error('删除设备失败:', error);\n          this.$message.error(this.$t('error.serverError'));\n        } finally {\n          this.loading = false;\n        }\n      }).catch(() => {\n        // 取消删除，不做任何处理\n      });\n    },\n    // 上传设备图片\n    handleUploadImage(row) {\n      this.currentEquipment = row;\n      this.imageUrl = row.image_path || '';\n      this.uploadDialogVisible = true;\n    },\n    // 提交表单\n    submitForm() {\n      this.$refs.form.validate(async valid => {\n        if (!valid) return;\n        try {\n          this.submitting = true;\n          if (this.dialogType === 'add') {\n            // 创建设备\n            const response = await equipmentApi.createEquipment(this.form);\n            this.$message.success(this.$t('admin.equipmentAdded'));\n          } else {\n            // 更新设备\n            const response = await equipmentApi.updateEquipment(this.form.id, this.form);\n            this.$message.success(this.$t('admin.equipmentUpdated'));\n          }\n          this.dialogVisible = false;\n          this.fetchData();\n        } catch (error) {\n          console.error('保存设备失败:', error);\n          this.$message.error(this.$t('error.serverError'));\n        } finally {\n          this.submitting = false;\n        }\n      });\n    },\n    // 重置表单\n    resetForm() {\n      if (this.$refs.form) {\n        this.$refs.form.resetFields();\n      }\n    },\n    // 上传前验证\n    beforeUpload(file) {\n      const isImage = file.type.startsWith('image/');\n      const isLt8M = file.size / 1024 / 1024 < 8;\n      if (!isImage) {\n        this.$message.error(this.$t('admin.imageTypeError'));\n        return false;\n      }\n      if (!isLt8M) {\n        this.$message.error(this.$t('admin.imageSizeError').replace('2MB', '8MB'));\n        return false;\n      }\n      return true;\n    },\n    // 上传成功（添加/编辑表单中）\n    handleUploadSuccess(response) {\n      this.form.image_path = response.data.image_url;\n      this.$message.success(this.$t('admin.imageUploadSuccess'));\n    },\n    // 上传成功（单独上传图片对话框）\n    handleImageUploadSuccess(response) {\n      this.imageUrl = response.data.image_url;\n      this.currentEquipment.image_path = response.data.image_url;\n\n      // 更新设备列表中的图片URL\n      const index = this.equipments.findIndex(item => item.id === this.currentEquipment.id);\n      if (index !== -1) {\n        this.$set(this.equipments, index, {\n          ...this.currentEquipment\n        });\n      }\n      this.$message.success(this.$t('admin.imageUploadSuccess'));\n\n      // 关闭对话框\n      setTimeout(() => {\n        this.uploadDialogVisible = false;\n      }, 1500);\n    },\n    // 上传失败\n    handleUploadError(error, file) {\n      console.error('上传图片失败:', error);\n      console.log('文件信息:', file ? {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        lastModified: file.lastModified\n      } : 'No file info');\n\n      // 尝试获取更详细的错误信息\n      let errorMessage = this.$t('admin.imageUploadError');\n      if (error.response && error.response.data) {\n        console.error('错误响应数据:', error.response.data);\n        if (error.response.data.detail) {\n          errorMessage += ': ' + error.response.data.detail;\n        }\n      }\n      this.$message.error(errorMessage);\n    },\n    // 处理导入/导出\n    handleImportExport(command) {\n      switch (command) {\n        case 'import':\n          this.handleImport();\n          break;\n        case 'export':\n          this.handleExport();\n          break;\n        case 'template':\n          this.downloadTemplate();\n          break;\n      }\n    },\n    // 导入设备\n    handleImport() {\n      // 创建一个隐藏的文件输入框\n      const input = document.createElement('input');\n      input.type = 'file';\n      input.accept = '.xlsx,.xls';\n      input.style.display = 'none';\n\n      // 监听文件选择事件\n      input.addEventListener('change', async e => {\n        const file = e.target.files[0];\n        if (!file) return;\n\n        // 创建 FormData\n        const formData = new FormData();\n        formData.append('file', file);\n        try {\n          this.loading = true;\n          this.$message.info('正在导入数据，请稍候...');\n\n          // 检查文件类型\n          const fileExtension = file.name.split('.').pop().toLowerCase();\n          if (fileExtension !== 'xlsx' && fileExtension !== 'xls') {\n            this.$message.error('请上传Excel文件（.xlsx或.xls）');\n            this.loading = false;\n            return;\n          }\n\n          // 发送请求\n          const response = await axios.post(axios.defaults.baseURL + '/api/equipment/import', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'Authorization': `Bearer ${localStorage.getItem('token') || ''}`\n            }\n          });\n          this.$message.success(response.data.message || '导入成功');\n\n          // 重新加载数据\n          this.fetchData();\n        } catch (error) {\n          console.error('导入设备失败:', error);\n          let errorMsg = '导入失败';\n\n          // 详细的错误信息处理\n          if (error.response && error.response.data) {\n            console.log('错误响应数据:', error.response.data);\n            if (error.response.data.detail) {\n              if (Array.isArray(error.response.data.detail)) {\n                errorMsg = error.response.data.detail[0].msg || errorMsg;\n              } else {\n                errorMsg = error.response.data.detail || errorMsg;\n              }\n            }\n          } else if (error.message) {\n            errorMsg = `${errorMsg}: ${error.message}`;\n          }\n          this.$message.error(errorMsg);\n        } finally {\n          this.loading = false;\n\n          // 移除输入框\n          document.body.removeChild(input);\n        }\n      });\n\n      // 添加到文档并触发点击\n      document.body.appendChild(input);\n      input.click();\n    },\n    // 导出设备\n    handleExport() {\n      try {\n        // 构建查询参数\n        const params = new URLSearchParams();\n        if (this.filter.category) params.append('category', this.filter.category);\n        if (this.filter.status) params.append('status', this.filter.status);\n\n        // 生成导出 URL\n        const exportUrl = `${axios.defaults.baseURL}/api/equipment/export?${params.toString()}`;\n\n        // 使用axios下载文件\n        axios({\n          url: exportUrl,\n          method: 'GET',\n          responseType: 'blob',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token') || ''}`\n          }\n        }).then(response => {\n          // 创建Blob对象\n          const blob = new Blob([response.data], {\n            type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n          });\n\n          // 创建下载链接\n          const link = document.createElement('a');\n          link.href = URL.createObjectURL(blob);\n\n          // 设置文件名\n          const timestamp = new Date().toISOString().replace(/[\\-:]/g, '').split('.')[0];\n          link.download = `equipment_export_${timestamp}.xlsx`;\n\n          // 触发下载\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n          this.$message.success('导出成功');\n        }).catch(error => {\n          console.error('导出设备失败:', error);\n          let errorMsg = '导出失败';\n\n          // 详细的错误信息处理\n          if (error.response && error.response.data) {\n            console.log('错误响应数据:', error.response.data);\n            if (error.response.data.detail) {\n              if (Array.isArray(error.response.data.detail)) {\n                errorMsg = error.response.data.detail[0].msg || errorMsg;\n              } else {\n                errorMsg = error.response.data.detail || errorMsg;\n              }\n            }\n          } else if (error.message) {\n            errorMsg = `${errorMsg}: ${error.message}`;\n          }\n          this.$message.error(errorMsg);\n        });\n      } catch (error) {\n        console.error('导出设备失败:', error);\n        this.$message.error('导出失败');\n      }\n    },\n    // 下载模板\n    downloadTemplate() {\n      try {\n        // 生成模板 URL\n        const templateUrl = `${axios.defaults.baseURL}/api/equipment/template`;\n\n        // 使用axios下载文件\n        axios({\n          url: templateUrl,\n          method: 'GET',\n          responseType: 'blob',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token') || ''}`\n          }\n        }).then(response => {\n          // 创建Blob对象\n          const blob = new Blob([response.data], {\n            type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n          });\n\n          // 创建下载链接\n          const link = document.createElement('a');\n          link.href = URL.createObjectURL(blob);\n\n          // 设置文件名\n          link.download = 'equipment_import_template.xlsx';\n\n          // 触发下载\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n          this.$message.success('模板下载成功');\n        }).catch(error => {\n          console.error('下载模板失败:', error);\n          this.$message.error('下载模板失败');\n        });\n      } catch (error) {\n        console.error('下载模板失败:', error);\n        this.$message.error('下载模板失败');\n      }\n    },\n    // 处理视频类型变化\n    handleVideoTypeChange() {\n      // 如果已经有视频URL，则根据新的视频类型进行转换\n      if (this.form.video_tutorial) {\n        // 提取视频ID\n        let videoId = '';\n\n        // 尝试从当前的URL中提取视频ID\n        if (this.form.video_tutorial.includes('youtube.com') || this.form.video_tutorial.includes('youtu.be')) {\n          // 从 YouTube URL 提取视频ID\n          const match = this.form.video_tutorial.match(/(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/ ]{11})/);\n          if (match && match[1]) {\n            videoId = match[1];\n          }\n        } else if (this.form.video_tutorial.includes('bilibili.com')) {\n          // 从 Bilibili URL 提取视频ID\n          const match = this.form.video_tutorial.match(/bilibili\\.com\\/video\\/([^\\/?]+)/);\n          if (match && match[1]) {\n            videoId = match[1].replace('BV', '');\n          }\n        }\n\n        // 如果成功提取到视频ID，则根据新的视频类型生成URL\n        if (videoId) {\n          switch (this.videoType) {\n            case 'youtube':\n              this.form.video_tutorial = `https://www.youtube.com/embed/${videoId}`;\n              break;\n            case 'bilibili':\n              this.form.video_tutorial = `https://player.bilibili.com/player.html?bvid=BV${videoId}`;\n              break;\n            default:\n              // 其他类型不做处理\n              break;\n          }\n        }\n      }\n    },\n    // 获取完整的图片URL\n    getFullImageUrl(url) {\n      if (!url) return '';\n\n      // 如果已经是完整URL，直接返回\n      if (url.startsWith('http://') || url.startsWith('https://')) {\n        return url;\n      }\n\n      // 如果是相对路径，添加基础URL\n      if (url.startsWith('/')) {\n        return this.baseUrl + url;\n      }\n\n      // 其他情况，添加基础URL和斜杠\n      return this.baseUrl + '/' + url;\n    },\n    // 触发手动上传\n    triggerManualUpload() {\n      this.$refs.manualFileInput.click();\n    },\n    // 处理手动文件选择\n    async handleManualFileChange(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n\n      // 验证文件\n      const isImage = file.type.startsWith('image/');\n      const isLt8M = file.size / 1024 / 1024 < 8;\n      if (!isImage) {\n        this.$message.error(this.$t('admin.imageTypeError'));\n        return;\n      }\n      if (!isLt8M) {\n        this.$message.error(this.$t('admin.imageSizeError').replace('2MB', '8MB'));\n        return;\n      }\n\n      // 创建 FormData\n      const formData = new FormData();\n      formData.append('file', file);\n      try {\n        this.loading = true;\n\n        // 直接使用 axios 发送请求\n        const response = await axios.post(this.uploadUrl, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${localStorage.getItem('token') || ''}`\n          }\n        });\n\n        // 处理成功响应\n        this.form.image_path = response.data.data.image_url;\n        this.$message.success(this.$t('admin.imageUploadSuccess'));\n      } catch (error) {\n        console.error('手动上传图片失败:', error);\n        console.log('文件信息:', {\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          lastModified: file.lastModified\n        });\n\n        // 尝试获取更详细的错误信息\n        let errorMessage = this.$t('admin.imageUploadError');\n        if (error.response && error.response.data) {\n          console.error('错误响应数据:', error.response.data);\n          if (error.response.data.detail) {\n            errorMessage += ': ' + error.response.data.detail;\n          }\n        }\n        this.$message.error(errorMessage);\n      } finally {\n        this.loading = false;\n        // 清空文件输入框，允许再次选择同一文件\n        this.$refs.manualFileInput.value = '';\n      }\n    },\n    // 触发对话框手动上传\n    triggerDialogManualUpload() {\n      this.$refs.dialogManualFileInput.click();\n    },\n    // 处理对话框手动文件选择\n    async handleDialogManualFileChange(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n\n      // 验证文件\n      const isImage = file.type.startsWith('image/');\n      const isLt8M = file.size / 1024 / 1024 < 8;\n      if (!isImage) {\n        this.$message.error(this.$t('admin.imageTypeError'));\n        return;\n      }\n      if (!isLt8M) {\n        this.$message.error(this.$t('admin.imageSizeError').replace('2MB', '8MB'));\n        return;\n      }\n\n      // 创建 FormData\n      const formData = new FormData();\n      formData.append('file', file);\n      if (this.currentEquipment.id) {\n        formData.append('equipment_id', this.currentEquipment.id);\n      }\n      try {\n        this.loading = true;\n\n        // 直接使用 axios 发送请求\n        const response = await axios.post(this.uploadUrl, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${localStorage.getItem('token') || ''}`\n          }\n        });\n\n        // 处理成功响应\n        this.imageUrl = response.data.data.image_url;\n        this.currentEquipment.image_path = response.data.data.image_url;\n\n        // 更新设备列表中的图片URL\n        const index = this.equipments.findIndex(item => item.id === this.currentEquipment.id);\n        if (index !== -1) {\n          this.$set(this.equipments, index, {\n            ...this.currentEquipment\n          });\n        }\n        this.$message.success(this.$t('admin.imageUploadSuccess'));\n\n        // 关闭对话框\n        setTimeout(() => {\n          this.uploadDialogVisible = false;\n        }, 1500);\n      } catch (error) {\n        console.error('手动上传图片失败:', error);\n        console.log('文件信息:', {\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          lastModified: file.lastModified\n        });\n\n        // 尝试获取更详细的错误信息\n        let errorMessage = this.$t('admin.imageUploadError');\n        if (error.response && error.response.data) {\n          console.error('错误响应数据:', error.response.data);\n          if (error.response.data.detail) {\n            errorMessage += ': ' + error.response.data.detail;\n          }\n        }\n        this.$message.error(errorMessage);\n      } finally {\n        this.loading = false;\n        // 清空文件输入框，允许再次选择同一文件\n        this.$refs.dialogManualFileInput.value = '';\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","equipmentApi","categoryApi","RichTextEditor","axios","name","components","data","loading","submitting","equipments","total","currentPage","pageSize","categories","filter","category","status","search","dialogVisible","dialogType","form","id","model","location","description","user_guide","image_path","rules","required","message","$t","trigger","uploadDialogVisible","currentEquipment","imageUrl","uploadUrl","defaults","baseURL","videoType","editorOptions","modules","toolbar","placeholder","theme","computed","getToken","localStorage","getItem","uploadHeaders","Authorization","baseUrl","created","fetchData","fetchCategories","methods","params","page","limit","undefined","response","getEquipments","items","error","console","$message","getAllCategories","map","item","handleFilterChange","handlePageChange","handleAdd","video_tutorial","handleEdit","row","handleDelete","$confirm","confirmButtonText","cancelButtonText","type","then","deleteEquipment","success","catch","handleUploadImage","submitForm","$refs","validate","valid","createEquipment","updateEquipment","resetForm","resetFields","beforeUpload","file","isImage","startsWith","isLt8M","size","replace","handleUploadSuccess","image_url","handleImageUploadSuccess","index","findIndex","$set","setTimeout","handleUploadError","log","lastModified","errorMessage","detail","handleImportExport","command","handleImport","handleExport","downloadTemplate","input","document","createElement","accept","style","display","addEventListener","e","target","files","formData","FormData","append","info","fileExtension","split","pop","toLowerCase","post","headers","errorMsg","Array","isArray","msg","body","removeChild","appendChild","click","URLSearchParams","exportUrl","toString","url","method","responseType","blob","Blob","link","href","URL","createObjectURL","timestamp","Date","toISOString","download","templateUrl","handleVideoTypeChange","videoId","includes","match","getFullImageUrl","triggerManualUpload","manualFileInput","handleManualFileChange","event","value","triggerDialogManualUpload","dialogManualFileInput","handleDialogManualFileChange"],"sources":["src/views/admin/AdminEquipment.vue"],"sourcesContent":["<template>\n  <div class=\"admin-equipment\">\n    <div class=\"page-header\">\n      <h2>设备管理</h2>\n      <div class=\"page-actions\">\n        <el-button\n          type=\"primary\"\n          icon=\"el-icon-plus\"\n          @click=\"handleAdd\"\n        >\n          添加设备\n        </el-button>\n\n        <el-dropdown @command=\"handleImportExport\" trigger=\"click\">\n          <el-button type=\"primary\" class=\"import-export-button\">\n            导入/导出 <i class=\"el-icon-arrow-down el-icon--right\"></i>\n          </el-button>\n          <el-dropdown-menu slot=\"dropdown\">\n            <el-dropdown-item command=\"import\">\n              <i class=\"el-icon-upload2\"></i> 导入设备\n            </el-dropdown-item>\n            <el-dropdown-item command=\"export\">\n              <i class=\"el-icon-download\"></i> 导出设备\n            </el-dropdown-item>\n            <el-dropdown-item command=\"template\">\n              <i class=\"el-icon-document\"></i> 下载模板\n            </el-dropdown-item>\n          </el-dropdown-menu>\n        </el-dropdown>\n      </div>\n    </div>\n\n    <!-- 搜索和筛选 -->\n    <el-card class=\"filter-card\">\n      <el-form :inline=\"true\" :model=\"filter\" class=\"filter-form\">\n        <el-form-item :label=\"$t('equipment.category')\">\n          <el-select\n            v-model=\"filter.category\"\n            :placeholder=\"$t('equipment.allCategories')\"\n            clearable\n            @change=\"handleFilterChange\"\n          >\n            <el-option\n              v-for=\"category in categories\"\n              :key=\"category\"\n              :label=\"category\"\n              :value=\"category\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item :label=\"$t('equipment.status')\">\n          <el-select\n            v-model=\"filter.status\"\n            :placeholder=\"$t('equipment.allStatus')\"\n            clearable\n            @change=\"handleFilterChange\"\n          >\n            <el-option\n              :label=\"$t('equipment.available')\"\n              value=\"available\"\n            ></el-option>\n            <el-option\n              :label=\"$t('equipment.maintenance')\"\n              value=\"maintenance\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item>\n          <el-input\n            v-model=\"filter.search\"\n            :placeholder=\"$t('equipment.searchPlaceholder')\"\n            clearable\n            @keyup.enter.native=\"handleFilterChange\"\n          >\n            <el-button\n              slot=\"append\"\n              icon=\"el-icon-search\"\n              @click=\"handleFilterChange\"\n            ></el-button>\n          </el-input>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <!-- 设备列表 -->\n    <el-table\n      v-loading=\"loading\"\n      :data=\"equipments\"\n      border\n      style=\"width: 100%; margin-top: 20px;\"\n    >\n      <el-table-column\n        prop=\"id\"\n        label=\"ID\"\n        width=\"80\"\n      ></el-table-column>\n\n      <el-table-column\n        prop=\"name\"\n        label=\"设备名称\"\n        width=\"120\"\n      ></el-table-column>\n\n      <el-table-column\n        prop=\"category\"\n        label=\"设备类别\"\n        width=\"120\"\n      ></el-table-column>\n\n      <el-table-column\n        prop=\"location\"\n        label=\"设备位置\"\n        width=\"100\"\n      ></el-table-column>\n\n      <el-table-column\n        prop=\"description\"\n        label=\"设备描述\"\n        min-width=\"150\"\n      >\n        <template slot-scope=\"scope\">\n          {{ scope.row.description || '无' }}\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        prop=\"status\"\n        label=\"设备状态\"\n        width=\"100\"\n      >\n        <template slot-scope=\"scope\">\n          <el-tag\n            :type=\"scope.row.status === 'available' ? 'success' : 'warning'\"\n            size=\"small\"\n          >\n            {{ scope.row.status === 'available' ? '可用' : '维护中' }}\n          </el-tag>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        label=\"设备图片\"\n        width=\"100\"\n        align=\"center\"\n      >\n        <template slot-scope=\"scope\">\n          <div>\n            <el-image\n              :src=\"scope.row.image_path ? getFullImageUrl(scope.row.image_path) : require('@/assets/upload.png')\"\n              :preview-src-list=\"scope.row.image_path ? [getFullImageUrl(scope.row.image_path)] : []\"\n              style=\"width: 60px; height: 60px;\"\n              fit=\"contain\"\n              :class=\"scope.row.image_path ? 'preview-image' : 'default-image'\"\n            ></el-image>\n          </div>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        label=\"操作\"\n        width=\"200\"\n        fixed=\"right\"\n      >\n        <template slot-scope=\"scope\">\n          <el-button\n            type=\"text\"\n            size=\"small\"\n            @click=\"handleEdit(scope.row)\"\n          >\n            编辑\n          </el-button>\n\n          <el-button\n            v-if=\"scope.row.image_path\"\n            type=\"text\"\n            size=\"small\"\n            @click=\"handleUploadImage(scope.row)\"\n          >\n            更换图片\n          </el-button>\n\n          <el-button\n            type=\"text\"\n            size=\"small\"\n            class=\"danger-button\"\n            @click=\"handleDelete(scope.row)\"\n          >\n            删除\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 分页 -->\n    <div class=\"pagination-container\">\n      <el-pagination\n        background\n        layout=\"total, prev, pager, next\"\n        :total=\"total\"\n        :page-size=\"pageSize\"\n        :current-page.sync=\"currentPage\"\n        @current-change=\"handlePageChange\"\n      ></el-pagination>\n    </div>\n\n    <!-- 添加/编辑设备对话框 -->\n    <el-dialog\n      :title=\"dialogType === 'add' ? '添加设备' : '编辑设备'\"\n      :visible.sync=\"dialogVisible\"\n      width=\"50%\"\n      @close=\"resetForm\"\n    >\n      <el-form\n        ref=\"form\"\n        :model=\"form\"\n        :rules=\"rules\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"设备名称\" prop=\"name\">\n          <el-input v-model=\"form.name\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"设备类别\" prop=\"category\">\n          <el-select\n            v-model=\"form.category\"\n            filterable\n            allow-create\n            default-first-option\n            style=\"width: 100%\"\n          >\n            <el-option\n              v-for=\"category in categories\"\n              :key=\"category\"\n              :label=\"category\"\n              :value=\"category\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"设备型号\" prop=\"model\">\n          <el-input v-model=\"form.model\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"设备位置\" prop=\"location\">\n          <el-input v-model=\"form.location\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"设备状态\" prop=\"status\">\n          <el-radio-group v-model=\"form.status\">\n            <el-radio label=\"available\">可用</el-radio>\n            <el-radio label=\"maintenance\">维护中</el-radio>\n          </el-radio-group>\n        </el-form-item>\n\n        <el-form-item label=\"设备描述\" prop=\"description\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"form.description\"\n            :rows=\"4\"\n          ></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"使用指南\" prop=\"user_guide\">\n          <rich-text-editor\n            v-model=\"form.user_guide\"\n            placeholder=\"请输入设备的详细使用步骤、注意事项等信息...\"\n          ></rich-text-editor>\n        </el-form-item>\n\n        <el-form-item label=\"视频教程\" prop=\"video_tutorial\">\n          <el-input\n            v-model=\"form.video_tutorial\"\n            placeholder=\"请输入视频链接，支持YouTube、Bilibili等平台\"\n          >\n            <template slot=\"prepend\">\n              <el-select\n                v-model=\"videoType\"\n                style=\"width: 120px;\"\n                @change=\"handleVideoTypeChange\"\n              >\n                <el-option label=\"YouTube\" value=\"youtube\"></el-option>\n                <el-option label=\"Bilibili\" value=\"bilibili\"></el-option>\n                <el-option label=\"其他\" value=\"other\"></el-option>\n              </el-select>\n            </template>\n          </el-input>\n          <div class=\"video-tip\">输入视频链接后可以在设备详情页面查看视频教程</div>\n        </el-form-item>\n\n        <el-form-item label=\"设备图片\">\n          <el-upload\n            class=\"equipment-image-uploader\"\n            :action=\"uploadUrl\"\n            :headers=\"uploadHeaders\"\n            :show-file-list=\"false\"\n            :on-success=\"handleUploadSuccess\"\n            :on-error=\"handleUploadError\"\n            :before-upload=\"beforeUpload\"\n            :multiple=\"false\"\n            name=\"file\"\n            :with-credentials=\"true\"\n          >\n            <img v-if=\"form.image_path\" :src=\"getFullImageUrl(form.image_path)\" class=\"equipment-image\">\n            <img v-else :src=\"require('@/assets/upload.png')\" class=\"equipment-image default-equipment-image\">\n          </el-upload>\n          <div class=\"image-tip\">建议尺寸：800x600像素，最大8MB</div>\n          <div class=\"manual-upload\">\n            <el-button size=\"small\" type=\"primary\" @click=\"triggerManualUpload\">手动上传</el-button>\n            <input\n              ref=\"manualFileInput\"\n              type=\"file\"\n              accept=\"image/*\"\n              style=\"display: none;\"\n              @change=\"handleManualFileChange\"\n            >\n          </div>\n        </el-form-item>\n      </el-form>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitForm\" :loading=\"submitting\">保存</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 上传图片对话框 -->\n    <el-dialog\n      title=\"上传设备图片\"\n      :visible.sync=\"uploadDialogVisible\"\n      width=\"30%\"\n    >\n      <el-upload\n        class=\"equipment-image-uploader\"\n        :action=\"uploadUrl\"\n        :headers=\"uploadHeaders\"\n        :data=\"{ equipment_id: currentEquipment.id }\"\n        :show-file-list=\"false\"\n        :on-success=\"handleImageUploadSuccess\"\n        :on-error=\"handleUploadError\"\n        :before-upload=\"beforeUpload\"\n        :multiple=\"false\"\n        name=\"file\"\n        :with-credentials=\"true\"\n      >\n        <img v-if=\"imageUrl\" :src=\"getFullImageUrl(imageUrl)\" class=\"equipment-image\">\n        <img v-else :src=\"require('@/assets/upload.png')\" class=\"equipment-image default-equipment-image\">\n      </el-upload>\n      <div class=\"image-tip\">建议尺寸：800x600像素，最大8MB</div>\n      <div class=\"manual-upload\">\n        <el-button size=\"small\" type=\"primary\" @click=\"triggerDialogManualUpload\">手动上传</el-button>\n        <input\n          ref=\"dialogManualFileInput\"\n          type=\"file\"\n          accept=\"image/*\"\n          style=\"display: none;\"\n          @change=\"handleDialogManualFileChange\"\n        >\n      </div>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"uploadDialogVisible = false\">取消</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport { equipmentApi, categoryApi } from '@/api'\nimport RichTextEditor from '@/components/common/RichTextEditor.vue'\nimport axios from 'axios'\n\nexport default {\n  name: 'AdminEquipment',\n\n  components: {\n    RichTextEditor\n  },\n\n  data() {\n    return {\n      loading: false,\n      submitting: false,\n      equipments: [],\n      total: 0,\n      currentPage: 1,\n      pageSize: 10,\n      categories: [],\n      filter: {\n        category: '',\n        status: '',\n        search: ''\n      },\n\n      dialogVisible: false,\n      dialogType: 'add', // 'add' or 'edit'\n      form: {\n        id: null,\n        name: '',\n        category: '',\n        model: '',\n        location: '',\n        status: 'available',\n        description: '',\n        user_guide: '',\n        image_path: ''\n      },\n      rules: {\n        name: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'blur' }\n        ],\n        category: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'change' }\n        ],\n        status: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'change' }\n        ]\n      },\n\n      uploadDialogVisible: false,\n      currentEquipment: {},\n      imageUrl: '',\n\n      // 上传相关\n      uploadUrl: axios.defaults.baseURL + '/api/equipment/upload-image',\n\n      // 视频相关\n      videoType: 'youtube',\n\n      // 富文本编辑器选项\n      editorOptions: {\n        modules: {\n          toolbar: [\n            ['bold', 'italic', 'underline', 'strike'],\n            ['blockquote', 'code-block'],\n            [{ 'header': 1 }, { 'header': 2 }],\n            [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n            [{ 'script': 'sub' }, { 'script': 'super' }],\n            [{ 'indent': '-1' }, { 'indent': '+1' }],\n            [{ 'direction': 'rtl' }],\n            [{ 'size': ['small', false, 'large', 'huge'] }],\n            [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n            [{ 'color': [] }, { 'background': [] }],\n            [{ 'font': [] }],\n            [{ 'align': [] }],\n            ['clean'],\n            ['link', 'image', 'video']\n          ]\n        },\n        placeholder: '',\n        theme: 'snow'\n      },\n    }\n  },\n\n  computed: {\n    // 获取token\n    getToken() {\n      return localStorage.getItem('token') || ''\n    },\n\n    uploadHeaders() {\n      return {\n        Authorization: `Bearer ${localStorage.getItem('token') || ''}`\n      }\n    },\n\n    // 获取完整的图片URL\n    baseUrl() {\n      return axios.defaults.baseURL || 'http://localhost:8000';\n    }\n  },\n\n  created() {\n    this.fetchData()\n    this.fetchCategories()\n  },\n\n  methods: {\n    // 获取设备列表\n    async fetchData() {\n      try {\n        this.loading = true\n\n        const params = {\n          page: this.currentPage,\n          limit: this.pageSize,\n          category: this.filter.category || undefined,\n          status: this.filter.status || undefined,\n          search: this.filter.search || undefined\n        }\n\n        const response = await equipmentApi.getEquipments(params)\n        this.equipments = response.data.items\n        this.total = response.data.total\n      } catch (error) {\n        console.error('获取设备列表失败:', error)\n        this.$message.error(this.$t('error.serverError'))\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // 获取设备类别\n    async fetchCategories() {\n      try {\n        const response = await categoryApi.getAllCategories()\n        this.categories = response.data.map(item => item.name)\n      } catch (error) {\n        console.error('获取设备类别失败:', error)\n      }\n    },\n\n    // 处理筛选条件变化\n    handleFilterChange() {\n      this.currentPage = 1\n      this.fetchData()\n    },\n\n    // 处理页码变化\n    handlePageChange(page) {\n      this.currentPage = page\n      this.fetchData()\n    },\n\n    // 添加设备\n    handleAdd() {\n      this.dialogType = 'add'\n      this.form = {\n        id: null,\n        name: '',\n        category: '',\n        model: '',\n        location: '',\n        status: 'available',\n        description: '',\n        user_guide: '',\n        video_tutorial: '',\n        image_path: ''\n      }\n      this.dialogVisible = true\n    },\n\n    // 编辑设备\n    handleEdit(row) {\n      this.dialogType = 'edit'\n      this.form = { ...row }\n      this.dialogVisible = true\n    },\n\n    // 删除设备\n    handleDelete(row) {\n      this.$confirm(\n        this.$t('admin.confirmDeleteEquipment'),\n        this.$t('common.warning'),\n        {\n          confirmButtonText: this.$t('common.confirm'),\n          cancelButtonText: this.$t('common.cancel'),\n          type: 'warning'\n        }\n      ).then(async () => {\n        try {\n          this.loading = true\n\n          await equipmentApi.deleteEquipment(row.id)\n\n          this.$message.success(this.$t('admin.equipmentDeleted'))\n          this.fetchData()\n        } catch (error) {\n          console.error('删除设备失败:', error)\n          this.$message.error(this.$t('error.serverError'))\n        } finally {\n          this.loading = false\n        }\n      }).catch(() => {\n        // 取消删除，不做任何处理\n      })\n    },\n\n    // 上传设备图片\n    handleUploadImage(row) {\n      this.currentEquipment = row\n      this.imageUrl = row.image_path || ''\n      this.uploadDialogVisible = true\n    },\n\n    // 提交表单\n    submitForm() {\n      this.$refs.form.validate(async valid => {\n        if (!valid) return\n\n        try {\n          this.submitting = true\n\n          if (this.dialogType === 'add') {\n            // 创建设备\n            const response = await equipmentApi.createEquipment(this.form)\n            this.$message.success(this.$t('admin.equipmentAdded'))\n          } else {\n            // 更新设备\n            const response = await equipmentApi.updateEquipment(this.form.id, this.form)\n            this.$message.success(this.$t('admin.equipmentUpdated'))\n          }\n\n          this.dialogVisible = false\n          this.fetchData()\n        } catch (error) {\n          console.error('保存设备失败:', error)\n          this.$message.error(this.$t('error.serverError'))\n        } finally {\n          this.submitting = false\n        }\n      })\n    },\n\n    // 重置表单\n    resetForm() {\n      if (this.$refs.form) {\n        this.$refs.form.resetFields()\n      }\n    },\n\n    // 上传前验证\n    beforeUpload(file) {\n      const isImage = file.type.startsWith('image/')\n      const isLt8M = file.size / 1024 / 1024 < 8\n\n      if (!isImage) {\n        this.$message.error(this.$t('admin.imageTypeError'))\n        return false\n      }\n\n      if (!isLt8M) {\n        this.$message.error(this.$t('admin.imageSizeError').replace('2MB', '8MB'))\n        return false\n      }\n\n      return true\n    },\n\n    // 上传成功（添加/编辑表单中）\n    handleUploadSuccess(response) {\n      this.form.image_path = response.data.image_url\n      this.$message.success(this.$t('admin.imageUploadSuccess'))\n    },\n\n    // 上传成功（单独上传图片对话框）\n    handleImageUploadSuccess(response) {\n      this.imageUrl = response.data.image_url\n      this.currentEquipment.image_path = response.data.image_url\n\n      // 更新设备列表中的图片URL\n      const index = this.equipments.findIndex(item => item.id === this.currentEquipment.id)\n      if (index !== -1) {\n        this.$set(this.equipments, index, { ...this.currentEquipment })\n      }\n\n      this.$message.success(this.$t('admin.imageUploadSuccess'))\n\n      // 关闭对话框\n      setTimeout(() => {\n        this.uploadDialogVisible = false\n      }, 1500)\n    },\n\n    // 上传失败\n    handleUploadError(error, file) {\n      console.error('上传图片失败:', error)\n      console.log('文件信息:', file ? {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        lastModified: file.lastModified\n      } : 'No file info')\n\n      // 尝试获取更详细的错误信息\n      let errorMessage = this.$t('admin.imageUploadError')\n      if (error.response && error.response.data) {\n        console.error('错误响应数据:', error.response.data)\n        if (error.response.data.detail) {\n          errorMessage += ': ' + error.response.data.detail\n        }\n      }\n\n      this.$message.error(errorMessage)\n    },\n\n    // 处理导入/导出\n    handleImportExport(command) {\n      switch (command) {\n        case 'import':\n          this.handleImport()\n          break\n        case 'export':\n          this.handleExport()\n          break\n        case 'template':\n          this.downloadTemplate()\n          break\n      }\n    },\n\n    // 导入设备\n    handleImport() {\n      // 创建一个隐藏的文件输入框\n      const input = document.createElement('input')\n      input.type = 'file'\n      input.accept = '.xlsx,.xls'\n      input.style.display = 'none'\n\n      // 监听文件选择事件\n      input.addEventListener('change', async (e) => {\n        const file = e.target.files[0]\n        if (!file) return\n\n        // 创建 FormData\n        const formData = new FormData()\n        formData.append('file', file)\n\n        try {\n          this.loading = true\n          this.$message.info('正在导入数据，请稍候...')\n\n          // 检查文件类型\n          const fileExtension = file.name.split('.').pop().toLowerCase()\n          if (fileExtension !== 'xlsx' && fileExtension !== 'xls') {\n            this.$message.error('请上传Excel文件（.xlsx或.xls）')\n            this.loading = false\n            return\n          }\n\n          // 发送请求\n          const response = await axios.post(axios.defaults.baseURL + '/api/equipment/import', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'Authorization': `Bearer ${localStorage.getItem('token') || ''}`\n            }\n          })\n\n          this.$message.success(response.data.message || '导入成功')\n\n          // 重新加载数据\n          this.fetchData()\n        } catch (error) {\n          console.error('导入设备失败:', error)\n          let errorMsg = '导入失败'\n\n          // 详细的错误信息处理\n          if (error.response && error.response.data) {\n            console.log('错误响应数据:', error.response.data)\n            if (error.response.data.detail) {\n              if (Array.isArray(error.response.data.detail)) {\n                errorMsg = error.response.data.detail[0].msg || errorMsg\n              } else {\n                errorMsg = error.response.data.detail || errorMsg\n              }\n            }\n          } else if (error.message) {\n            errorMsg = `${errorMsg}: ${error.message}`\n          }\n\n          this.$message.error(errorMsg)\n        } finally {\n          this.loading = false\n\n          // 移除输入框\n          document.body.removeChild(input)\n        }\n      })\n\n      // 添加到文档并触发点击\n      document.body.appendChild(input)\n      input.click()\n    },\n\n    // 导出设备\n    handleExport() {\n      try {\n        // 构建查询参数\n        const params = new URLSearchParams()\n        if (this.filter.category) params.append('category', this.filter.category)\n        if (this.filter.status) params.append('status', this.filter.status)\n\n        // 生成导出 URL\n        const exportUrl = `${axios.defaults.baseURL}/api/equipment/export?${params.toString()}`\n\n        // 使用axios下载文件\n        axios({\n          url: exportUrl,\n          method: 'GET',\n          responseType: 'blob',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token') || ''}`\n          }\n        }).then(response => {\n          // 创建Blob对象\n          const blob = new Blob([response.data], {\n            type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n          })\n\n          // 创建下载链接\n          const link = document.createElement('a')\n          link.href = URL.createObjectURL(blob)\n\n          // 设置文件名\n          const timestamp = new Date().toISOString().replace(/[\\-:]/g, '').split('.')[0]\n          link.download = `equipment_export_${timestamp}.xlsx`\n\n          // 触发下载\n          document.body.appendChild(link)\n          link.click()\n          document.body.removeChild(link)\n\n          this.$message.success('导出成功')\n        }).catch(error => {\n          console.error('导出设备失败:', error)\n          let errorMsg = '导出失败'\n\n          // 详细的错误信息处理\n          if (error.response && error.response.data) {\n            console.log('错误响应数据:', error.response.data)\n            if (error.response.data.detail) {\n              if (Array.isArray(error.response.data.detail)) {\n                errorMsg = error.response.data.detail[0].msg || errorMsg\n              } else {\n                errorMsg = error.response.data.detail || errorMsg\n              }\n            }\n          } else if (error.message) {\n            errorMsg = `${errorMsg}: ${error.message}`\n          }\n\n          this.$message.error(errorMsg)\n        })\n      } catch (error) {\n        console.error('导出设备失败:', error)\n        this.$message.error('导出失败')\n      }\n    },\n\n    // 下载模板\n    downloadTemplate() {\n      try {\n        // 生成模板 URL\n        const templateUrl = `${axios.defaults.baseURL}/api/equipment/template`\n\n        // 使用axios下载文件\n        axios({\n          url: templateUrl,\n          method: 'GET',\n          responseType: 'blob',\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token') || ''}`\n          }\n        }).then(response => {\n          // 创建Blob对象\n          const blob = new Blob([response.data], {\n            type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n          })\n\n          // 创建下载链接\n          const link = document.createElement('a')\n          link.href = URL.createObjectURL(blob)\n\n          // 设置文件名\n          link.download = 'equipment_import_template.xlsx'\n\n          // 触发下载\n          document.body.appendChild(link)\n          link.click()\n          document.body.removeChild(link)\n\n          this.$message.success('模板下载成功')\n        }).catch(error => {\n          console.error('下载模板失败:', error)\n          this.$message.error('下载模板失败')\n        })\n      } catch (error) {\n        console.error('下载模板失败:', error)\n        this.$message.error('下载模板失败')\n      }\n    },\n\n    // 处理视频类型变化\n    handleVideoTypeChange() {\n      // 如果已经有视频URL，则根据新的视频类型进行转换\n      if (this.form.video_tutorial) {\n        // 提取视频ID\n        let videoId = ''\n\n        // 尝试从当前的URL中提取视频ID\n        if (this.form.video_tutorial.includes('youtube.com') || this.form.video_tutorial.includes('youtu.be')) {\n          // 从 YouTube URL 提取视频ID\n          const match = this.form.video_tutorial.match(/(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/ ]{11})/)\n          if (match && match[1]) {\n            videoId = match[1]\n          }\n        } else if (this.form.video_tutorial.includes('bilibili.com')) {\n          // 从 Bilibili URL 提取视频ID\n          const match = this.form.video_tutorial.match(/bilibili\\.com\\/video\\/([^\\/?]+)/)\n          if (match && match[1]) {\n            videoId = match[1].replace('BV', '')\n          }\n        }\n\n        // 如果成功提取到视频ID，则根据新的视频类型生成URL\n        if (videoId) {\n          switch (this.videoType) {\n            case 'youtube':\n              this.form.video_tutorial = `https://www.youtube.com/embed/${videoId}`\n              break\n            case 'bilibili':\n              this.form.video_tutorial = `https://player.bilibili.com/player.html?bvid=BV${videoId}`\n              break\n            default:\n              // 其他类型不做处理\n              break\n          }\n        }\n      }\n    },\n\n    // 获取完整的图片URL\n    getFullImageUrl(url) {\n      if (!url) return '';\n\n      // 如果已经是完整URL，直接返回\n      if (url.startsWith('http://') || url.startsWith('https://')) {\n        return url;\n      }\n\n      // 如果是相对路径，添加基础URL\n      if (url.startsWith('/')) {\n        return this.baseUrl + url;\n      }\n\n      // 其他情况，添加基础URL和斜杠\n      return this.baseUrl + '/' + url;\n    },\n\n    // 触发手动上传\n    triggerManualUpload() {\n      this.$refs.manualFileInput.click()\n    },\n\n    // 处理手动文件选择\n    async handleManualFileChange(event) {\n      const file = event.target.files[0]\n      if (!file) return\n\n      // 验证文件\n      const isImage = file.type.startsWith('image/')\n      const isLt8M = file.size / 1024 / 1024 < 8\n\n      if (!isImage) {\n        this.$message.error(this.$t('admin.imageTypeError'))\n        return\n      }\n\n      if (!isLt8M) {\n        this.$message.error(this.$t('admin.imageSizeError').replace('2MB', '8MB'))\n        return\n      }\n\n      // 创建 FormData\n      const formData = new FormData()\n      formData.append('file', file)\n\n      try {\n        this.loading = true\n\n        // 直接使用 axios 发送请求\n        const response = await axios.post(this.uploadUrl, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${localStorage.getItem('token') || ''}`\n          }\n        })\n\n        // 处理成功响应\n        this.form.image_path = response.data.data.image_url\n        this.$message.success(this.$t('admin.imageUploadSuccess'))\n      } catch (error) {\n        console.error('手动上传图片失败:', error)\n        console.log('文件信息:', {\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          lastModified: file.lastModified\n        })\n\n        // 尝试获取更详细的错误信息\n        let errorMessage = this.$t('admin.imageUploadError')\n        if (error.response && error.response.data) {\n          console.error('错误响应数据:', error.response.data)\n          if (error.response.data.detail) {\n            errorMessage += ': ' + error.response.data.detail\n          }\n        }\n\n        this.$message.error(errorMessage)\n      } finally {\n        this.loading = false\n        // 清空文件输入框，允许再次选择同一文件\n        this.$refs.manualFileInput.value = ''\n      }\n    },\n\n    // 触发对话框手动上传\n    triggerDialogManualUpload() {\n      this.$refs.dialogManualFileInput.click()\n    },\n\n    // 处理对话框手动文件选择\n    async handleDialogManualFileChange(event) {\n      const file = event.target.files[0]\n      if (!file) return\n\n      // 验证文件\n      const isImage = file.type.startsWith('image/')\n      const isLt8M = file.size / 1024 / 1024 < 8\n\n      if (!isImage) {\n        this.$message.error(this.$t('admin.imageTypeError'))\n        return\n      }\n\n      if (!isLt8M) {\n        this.$message.error(this.$t('admin.imageSizeError').replace('2MB', '8MB'))\n        return\n      }\n\n      // 创建 FormData\n      const formData = new FormData()\n      formData.append('file', file)\n      if (this.currentEquipment.id) {\n        formData.append('equipment_id', this.currentEquipment.id)\n      }\n\n      try {\n        this.loading = true\n\n        // 直接使用 axios 发送请求\n        const response = await axios.post(this.uploadUrl, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${localStorage.getItem('token') || ''}`\n          }\n        })\n\n        // 处理成功响应\n        this.imageUrl = response.data.data.image_url\n        this.currentEquipment.image_path = response.data.data.image_url\n\n        // 更新设备列表中的图片URL\n        const index = this.equipments.findIndex(item => item.id === this.currentEquipment.id)\n        if (index !== -1) {\n          this.$set(this.equipments, index, { ...this.currentEquipment })\n        }\n\n        this.$message.success(this.$t('admin.imageUploadSuccess'))\n\n        // 关闭对话框\n        setTimeout(() => {\n          this.uploadDialogVisible = false\n        }, 1500)\n      } catch (error) {\n        console.error('手动上传图片失败:', error)\n        console.log('文件信息:', {\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          lastModified: file.lastModified\n        })\n\n        // 尝试获取更详细的错误信息\n        let errorMessage = this.$t('admin.imageUploadError')\n        if (error.response && error.response.data) {\n          console.error('错误响应数据:', error.response.data)\n          if (error.response.data.detail) {\n            errorMessage += ': ' + error.response.data.detail\n          }\n        }\n\n        this.$message.error(errorMessage)\n      } finally {\n        this.loading = false\n        // 清空文件输入框，允许再次选择同一文件\n        this.$refs.dialogManualFileInput.value = ''\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.admin-equipment {\n  padding: 20px;\n  width: 100%;\n  max-width: 100%;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.page-actions {\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.import-export-button {\n  white-space: nowrap;\n  min-width: 110px;\n}\n\n.page-header h2 {\n  margin: 0;\n  font-size: 20px;\n}\n\n.filter-card {\n  margin-bottom: 20px;\n}\n\n.filter-form .el-form-item {\n  margin-bottom: 0;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  text-align: right;\n}\n\n.quill-editor {\n  height: 300px;\n  margin-bottom: 10px;\n}\n\n.editor-tip {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 5px;\n}\n\n.danger-button {\n  color: #F56C6C;\n}\n\n.equipment-image-uploader {\n  text-align: center;\n}\n\n.equipment-image-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n  width: 300px;\n  height: 225px;\n  display: inline-block;\n}\n\n.equipment-image-uploader .el-upload:hover {\n  border-color: #409EFF;\n}\n\n.equipment-image-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 300px;\n  height: 225px;\n  line-height: 225px;\n  text-align: center;\n}\n\n.equipment-image {\n  width: 300px;\n  height: 225px;\n  display: block;\n  object-fit: contain;\n}\n\n.default-equipment-image {\n  opacity: 0.7;\n  background-color: #f5f7fa;\n  padding: 20px;\n  box-sizing: border-box;\n}\n\n.image-tip,\n.video-tip {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 5px;\n}\n\n.manual-upload {\n  margin-top: 10px;\n}\n\n.clickable-image {\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.clickable-image:hover {\n  transform: scale(1.05);\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.preview-image {\n  cursor: zoom-in;\n  transition: all 0.3s;\n}\n\n.preview-image:hover {\n  transform: scale(1.05);\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.default-image {\n  cursor: default;\n  opacity: 0.7;\n  transition: all 0.3s;\n}\n\n.default-image:hover {\n  opacity: 1;\n}\n\n@media (max-width: 768px) {\n  .admin-equipment {\n    padding: 10px;\n  }\n\n  .filter-form {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .filter-form .el-form-item {\n    margin-right: 0;\n    margin-bottom: 10px;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}