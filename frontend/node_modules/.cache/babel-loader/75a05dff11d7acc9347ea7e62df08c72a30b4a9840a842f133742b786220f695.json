{"ast":null,"code":"import axios from 'axios';\n\n/**\n * 预定API\n */\nexport default {\n  // 创建预定\n  createReservation(data) {\n    return axios.post('/api/reservation', data);\n  },\n  // 获取预定列表（管理员）\n  getReservations(params) {\n    return axios.get('/api/reservation', {\n      params\n    });\n  },\n  // 获取预定详情\n  getReservation(code) {\n    // 添加时间戳参数，防止缓存\n    const timestamp = new Date().getTime();\n    return axios.get(`/api/reservation/${code}`, {\n      params: {\n        _t: timestamp\n      }\n    });\n  },\n  // 通过预定码获取预定详情\n  getReservationByCode(code, params = {}) {\n    // 添加时间戳参数，防止缓存\n    const timestamp = new Date().getTime();\n\n    // 处理预约序号参数，确保它是字符串格式\n    if (params.reservation_number) {\n      if (typeof params.reservation_number === 'object') {\n        console.log('预约序号参数是对象类型，尝试提取预约序号:', params.reservation_number);\n        if (params.reservation_number.reservation_number) {\n          params.reservation_number = params.reservation_number.reservation_number;\n          console.log(`从对象中提取预约序号: ${params.reservation_number}`);\n        } else {\n          console.warn('无法从对象中提取预约序号，尝试使用整个对象');\n          try {\n            // 尝试将对象转换为字符串\n            params.reservation_number = JSON.stringify(params.reservation_number);\n          } catch (e) {\n            console.error('序列化对象失败:', e);\n            delete params.reservation_number;\n          }\n        }\n      } else {\n        console.log(`预约序号参数是${typeof params.reservation_number}类型: ${params.reservation_number}`);\n      }\n    } else if (typeof params === 'string' || params.startsWith && params.startsWith('RN-')) {\n      // 如果params本身是字符串或者以RN-开头，则将其作为预约序号\n      console.log(`将参数作为预约序号处理: ${params}`);\n      params = {\n        reservation_number: params\n      };\n    } else if (typeof params === 'object' && params.reservation_number === undefined) {\n      // 检查params是否可能是预约序号对象\n      const keys = Object.keys(params);\n      if (keys.length === 1 && keys[0] === 'reservation_number') {\n        console.log(`从对象中提取预约序号: ${params.reservation_number}`);\n      }\n    }\n    params = {\n      ...params,\n      _t: timestamp\n    };\n\n    // 构建API基础URL\n    const url = `/api/reservation/code/${code}`;\n\n    // 记录API请求信息\n    console.log(`API请求: ${url}`, '参数:', params);\n    console.log('获取预约详情URL:', url);\n\n    // 发送请求并记录响应\n    return axios.get(url, {\n      params\n    }).then(response => {\n      console.log(`API响应: ${url}`, response.data);\n\n      // 调试状态信息\n      if (response.data && response.data.success && response.data.data) {\n        console.log(`预约状态: ${response.data.data.status}`);\n      }\n      return response;\n    }).catch(error => {\n      console.error(`API错误: ${url}`, error);\n      throw error;\n    });\n  },\n  // 更新预定\n  updateReservation(code, data) {\n    return axios.put(`/api/reservation/code/${code}`, data);\n  },\n  // 取消预定\n  cancelReservation(code, data = {}) {\n    // 添加时间戳参数，防止缓存\n    const timestamp = new Date().getTime();\n    if (!data._t) {\n      data._t = timestamp;\n    }\n\n    // 确保reservation_number参数被正确传递\n    if (data.reservation_number) {\n      console.log('取消预约 - 预约序号:', data.reservation_number);\n    } else {\n      console.warn('取消预约 - 未提供预约序号，将取消所有具有相同预约码的预约');\n    }\n    console.log('取消预约请求参数:', data);\n    console.log('取消预约请求URL:', `/api/reservation/cancel/code/${code}`);\n\n    // 使用JSON格式发送请求\n    return axios.post(`/api/reservation/cancel/code/${code}`, data);\n  },\n  // 获取设备在指定日期的可用性\n  getEquipmentAvailability(equipmentId, params) {\n    return axios.get(`/api/equipment/${equipmentId}/availability`, {\n      params\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}