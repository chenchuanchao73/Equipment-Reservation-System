{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nimport { updatePageTitle } from '@/router/permission';\nexport default {\n  name: 'LanguageSwitcher',\n  computed: {\n    ...mapGetters(['getLanguage']),\n    currentLanguage() {\n      return this.getLanguage;\n    }\n  },\n  methods: {\n    ...mapActions(['setLanguage', 'useBrowserLanguage']),\n    handleLanguageChange(lang) {\n      if (lang === 'browser') {\n        // 使用浏览器语言\n        this.useBrowserLanguage();\n        this.$i18n.locale = this.getLanguage;\n      } else {\n        // 使用指定语言\n        this.setLanguage(lang);\n        this.$i18n.locale = lang;\n      }\n\n      // 更新页面标题\n      setTimeout(() => {\n        updatePageTitle();\n      }, 0);\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","updatePageTitle","name","computed","currentLanguage","getLanguage","methods","handleLanguageChange","lang","useBrowserLanguage","$i18n","locale","setLanguage","setTimeout"],"sources":["src/components/common/LanguageSwitcher.vue"],"sourcesContent":["<template>\n  <el-dropdown trigger=\"click\" @command=\"handleLanguageChange\">\n    <span class=\"el-dropdown-link\">\n      {{ currentLanguage === 'zh-CN' ? '中文' : 'English' }}\n      <i class=\"el-icon-arrow-down el-icon--right\"></i>\n    </span>\n    <el-dropdown-menu slot=\"dropdown\">\n      <el-dropdown-item command=\"zh-CN\">中文</el-dropdown-item>\n      <el-dropdown-item command=\"en\">English</el-dropdown-item>\n      <el-dropdown-item divided command=\"browser\">{{ $t('common.useBrowserLanguage') }}</el-dropdown-item>\n    </el-dropdown-menu>\n  </el-dropdown>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from 'vuex'\nimport { updatePageTitle } from '@/router/permission'\n\nexport default {\n  name: 'LanguageSwitcher',\n\n  computed: {\n    ...mapGetters(['getLanguage']),\n\n    currentLanguage() {\n      return this.getLanguage\n    }\n  },\n\n  methods: {\n    ...mapActions(['setLanguage', 'useBrowserLanguage']),\n\n    handleLanguageChange(lang) {\n      if (lang === 'browser') {\n        // 使用浏览器语言\n        this.useBrowserLanguage()\n        this.$i18n.locale = this.getLanguage\n      } else {\n        // 使用指定语言\n        this.setLanguage(lang)\n        this.$i18n.locale = lang\n      }\n\n      // 更新页面标题\n      setTimeout(() => {\n        updatePageTitle()\n      }, 0)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.el-dropdown-link {\n  color: #fff;\n  cursor: pointer;\n}\n</style>\n"],"mappings":"AAeA,SAAAA,UAAA,EAAAC,UAAA;AACA,SAAAC,eAAA;AAEA;EACAC,IAAA;EAEAC,QAAA;IACA,GAAAJ,UAAA;IAEAK,gBAAA;MACA,YAAAC,WAAA;IACA;EACA;EAEAC,OAAA;IACA,GAAAN,UAAA;IAEAO,qBAAAC,IAAA;MACA,IAAAA,IAAA;QACA;QACA,KAAAC,kBAAA;QACA,KAAAC,KAAA,CAAAC,MAAA,QAAAN,WAAA;MACA;QACA;QACA,KAAAO,WAAA,CAAAJ,IAAA;QACA,KAAAE,KAAA,CAAAC,MAAA,GAAAH,IAAA;MACA;;MAEA;MACAK,UAAA;QACAZ,eAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}