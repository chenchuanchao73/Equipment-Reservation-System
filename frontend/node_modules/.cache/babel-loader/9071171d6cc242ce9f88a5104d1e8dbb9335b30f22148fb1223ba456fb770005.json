{"ast":null,"code":"import axios from 'axios';\n\n// Unsplash API\nexport const unsplashApi = {\n  // 搜索图片\n  searchPhotos(query, page = 1, perPage = 10) {\n    return axios.get('/api/unsplash/search', {\n      params: {\n        query,\n        page,\n        per_page: perPage\n      }\n    });\n  },\n  // 获取随机图片\n  getRandomPhoto(query) {\n    return axios.get('/api/unsplash/random', {\n      params: {\n        query\n      }\n    });\n  }\n};\n\n// 设备API\nexport const equipmentApi = {\n  // 获取设备列表\n  getEquipments(params) {\n    return axios.get('/api/equipment', {\n      params\n    });\n  },\n  // 获取设备详情\n  getEquipment(id) {\n    return axios.get(`/api/equipment/${id}`);\n  },\n  // 获取设备类别\n  getCategories() {\n    return axios.get('/api/equipment/categories');\n  },\n  // 获取设备可用性\n  getAvailability(id, startDate, endDate) {\n    return axios.get(`/api/equipment/${id}/availability`, {\n      params: {\n        start_date: startDate,\n        end_date: endDate\n      }\n    });\n  },\n  // 创建设备（管理员）\n  createEquipment(data) {\n    return axios.post('/api/equipment', data);\n  },\n  // 更新设备（管理员）\n  updateEquipment(id, data) {\n    return axios.put(`/api/equipment/${id}`, data);\n  },\n  // 删除设备（管理员）\n  deleteEquipment(id) {\n    return axios.delete(`/api/equipment/${id}`);\n  }\n};\n\n// 设备类别API\nexport const categoryApi = {\n  // 获取设备类别列表\n  getCategories(params) {\n    return axios.get('/api/equipment-categories', {\n      params\n    });\n  },\n  // 获取所有设备类别\n  getAllCategories() {\n    return axios.get('/api/equipment-categories/all');\n  },\n  // 获取设备类别详情\n  getCategory(id) {\n    return axios.get(`/api/equipment-categories/${id}`);\n  },\n  // 创建设备类别（管理员）\n  createCategory(data) {\n    return axios.post('/api/equipment-categories', data);\n  },\n  // 更新设备类别（管理员）\n  updateCategory(id, data) {\n    return axios.put(`/api/equipment-categories/${id}`, data);\n  },\n  // 删除设备类别（管理员）\n  deleteCategory(id) {\n    return axios.delete(`/api/equipment-categories/${id}`);\n  }\n};\n\n// 预定API\nexport const reservationApi = {\n  // 创建预定\n  createReservation(data) {\n    return axios.post('/api/reservation', data);\n  },\n  // 获取预定列表（管理员）\n  getReservations(params) {\n    return axios.get('/api/reservation', {\n      params\n    });\n  },\n  // 获取预定详情\n  getReservation(code) {\n    return axios.get(`/api/reservation/${code}`);\n  },\n  // 通过预约序号获取预约详情\n  getReservationByNumber(reservationNumber) {\n    // 添加时间戳参数，防止缓存\n    const timestamp = new Date().getTime();\n    const url = `/api/reservation/number/${reservationNumber}?_t=${timestamp}`;\n    console.log(`通过预约序号获取预约详情URL: ${url}`);\n    return axios.get(url);\n  },\n  // 通过预定码或预约序号获取预定详情\n  getReservationByCode(code, reservationNumber = null) {\n    // 添加时间戳参数，防止缓存\n    const timestamp = new Date().getTime();\n\n    // 构建基本URL\n    let url = code.includes('?') ? `${code}&_t=${timestamp}` : `/api/reservation/code/${code}?_t=${timestamp}`;\n\n    // 如果提供了预约序号，添加到URL参数中\n    if (reservationNumber) {\n      // 处理预约序号参数，确保它是字符串格式\n      let reservationNumberStr = '';\n      if (typeof reservationNumber === 'object') {\n        console.log('预约序号参数是对象类型，尝试提取预约序号:', reservationNumber);\n        if (reservationNumber.reservation_number) {\n          reservationNumberStr = String(reservationNumber.reservation_number);\n          console.log(`从对象中提取预约序号: ${reservationNumberStr}`);\n        } else {\n          console.warn('无法从对象中提取预约序号，尝试使用整个对象');\n          try {\n            // 尝试将对象转换为字符串\n            reservationNumberStr = JSON.stringify(reservationNumber);\n            console.log(`将对象序列化为JSON: ${reservationNumberStr}`);\n          } catch (e) {\n            console.error('序列化对象失败:', e);\n          }\n        }\n      } else {\n        reservationNumberStr = String(reservationNumber);\n        console.log(`预约序号参数是${typeof reservationNumber}类型: ${reservationNumber}`);\n      }\n      if (reservationNumberStr) {\n        url += `&reservation_number=${encodeURIComponent(reservationNumberStr)}`;\n        console.log(`添加预约序号参数: ${reservationNumberStr}`);\n      }\n    }\n    console.log(`获取预约详情URL: ${url}`);\n    return axios.get(url);\n  },\n  // 更新预定\n  updateReservation(code, data) {\n    return axios.put(`/api/reservation/code/${code}`, data);\n  },\n  // 取消预定\n  cancelReservation(code, data) {\n    return axios.post(`/api/reservation/cancel/code/${code}`, data);\n  },\n  // 获取预定二维码\n  getReservationQrcode(code) {\n    return axios.get(`/api/reservation/qrcode/${code}`);\n  }\n};\n\n// 循环预约API\nexport const recurringReservationApi = {\n  // 创建循环预约\n  createRecurringReservation(data) {\n    return axios.post('/api/recurring-reservation', data);\n  },\n  // 获取循环预约列表\n  getRecurringReservations(params) {\n    return axios.get('/api/recurring-reservation', {\n      params\n    });\n  },\n  // 获取循环预约详情\n  getRecurringReservation(id) {\n    return axios.get(`/api/recurring-reservation/${id}`);\n  },\n  // 通过预定码获取循环预约详情\n  getRecurringReservationByCode(code) {\n    return axios.get(`/api/recurring-reservation/code/${code}`);\n  },\n  // 更新循环预约\n  updateRecurringReservation(id, data, updateFutureOnly = 1) {\n    return axios.put(`/api/recurring-reservation/${id}`, data, {\n      params: {\n        update_future_only: updateFutureOnly\n      }\n    });\n  },\n  // 取消循环预约\n  cancelRecurringReservation(id, userEmail = null, lang = 'zh_CN') {\n    return axios.post(`/api/recurring-reservation/cancel/${id}`, null, {\n      params: {\n        user_email: userEmail,\n        lang: lang\n      }\n    });\n  },\n  // 获取循环预约的子预约\n  getChildReservations(id, includePast = 0) {\n    return axios.get(`/api/recurring-reservation/${id}/reservations`, {\n      params: {\n        include_past: includePast\n      }\n    });\n  }\n};\n\n// 管理员API\nexport const adminApi = {\n  // 管理员登录\n  login(username, password) {\n    const formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    return axios.post('/api/admin/login', formData);\n  },\n  // 获取管理员列表（超级管理员）\n  getAdmins(params) {\n    return axios.get('/api/admin', {\n      params\n    });\n  },\n  // 创建管理员（超级管理员）\n  createAdmin(data) {\n    return axios.post('/api/admin', data);\n  },\n  // 更新管理员\n  updateAdmin(id, data) {\n    return axios.put(`/api/admin/${id}`, data);\n  },\n  // 删除管理员（超级管理员）\n  deleteAdmin(id) {\n    return axios.delete(`/api/admin/${id}`);\n  },\n  // 获取系统设置\n  getSettings() {\n    return axios.get('/api/admin/settings');\n  },\n  // 更新系统设置\n  updateSettings(data) {\n    return axios.put('/api/admin/settings', data);\n  }\n};\nexport default {\n  equipment: equipmentApi,\n  category: categoryApi,\n  reservation: reservationApi,\n  recurringReservation: recurringReservationApi,\n  admin: adminApi,\n  unsplash: unsplashApi\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}