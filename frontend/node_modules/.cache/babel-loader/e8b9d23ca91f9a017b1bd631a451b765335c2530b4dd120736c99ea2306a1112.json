{"ast":null,"code":"import { fetchAnnouncements } from '@/api/announcement';\nexport default {\n  name: 'AnnouncementBar',\n  data() {\n    return {\n      announcements: [],\n      visible: true\n    };\n  },\n  created() {\n    this.loadAnnouncements();\n  },\n  methods: {\n    // 格式化日期为YYYY-MM-DD HH:mm格式\n    formatDate(dateStr) {\n      if (!dateStr) return '';\n      const date = new Date(dateStr);\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      const hours = String(date.getHours()).padStart(2, '0');\n      const minutes = String(date.getMinutes()).padStart(2, '0');\n      return `${year}-${month}-${day} ${hours}:${minutes}`;\n    },\n    async loadAnnouncements() {\n      try {\n        const res = await fetchAnnouncements();\n        this.announcements = Array.isArray(res) ? res : [];\n        console.log('加载到公告数据:', this.announcements);\n      } catch (e) {\n        console.error('加载公告失败:', e);\n      }\n    }\n  }\n};","map":{"version":3,"names":["fetchAnnouncements","name","data","announcements","visible","created","loadAnnouncements","methods","formatDate","dateStr","date","Date","year","getFullYear","month","String","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","res","Array","isArray","console","log","e","error"],"sources":["src/components/common/AnnouncementBar.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"announcements.length && visible\" class=\"announcement-bar\">\r\n    <div class=\"announcement-content\">\r\n      <span v-for=\"(item, idx) in announcements\" :key=\"item.id\" class=\"announcement-item\">\r\n        <strong>{{ item.title }}：</strong>{{ item.content }}\r\n        <small class=\"announcement-date\">[{{ formatDate(item.created_at) }}]</small>\r\n        <span v-if=\"idx < announcements.length - 1\" class=\"separator\">|</span>\r\n      </span>\r\n    </div>\r\n    <button class=\"close-btn\" @click=\"visible = false\">×</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { fetchAnnouncements } from '@/api/announcement'\r\n\r\nexport default {\r\n  name: 'AnnouncementBar',\r\n  data() {\r\n    return {\r\n      announcements: [],\r\n      visible: true\r\n    }\r\n  },\r\n  created() {\r\n    this.loadAnnouncements()\r\n  },\r\n  methods: {\r\n    // 格式化日期为YYYY-MM-DD HH:mm格式\r\n    formatDate(dateStr) {\r\n      if (!dateStr) return '';\r\n      const date = new Date(dateStr);\r\n      const year = date.getFullYear();\r\n      const month = String(date.getMonth() + 1).padStart(2, '0');\r\n      const day = String(date.getDate()).padStart(2, '0');\r\n      const hours = String(date.getHours()).padStart(2, '0');\r\n      const minutes = String(date.getMinutes()).padStart(2, '0');\r\n      return `${year}-${month}-${day} ${hours}:${minutes}`;\r\n    },\r\n    async loadAnnouncements() {\r\n      try {\r\n        const res = await fetchAnnouncements()\r\n        this.announcements = Array.isArray(res) ? res : []\r\n        console.log('加载到公告数据:', this.announcements)\r\n      } catch (e) {\r\n        console.error('加载公告失败:', e)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.announcement-bar {\r\n  background: #fffbe6;\r\n  color: #ad6800;\r\n  padding: 10px 16px;\r\n  border-bottom: 1px solid #ffe58f;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: 15px;\r\n  position: sticky;\r\n  top: 0;\r\n  width: 100%;\r\n  z-index: 1001;\r\n}\r\n.announcement-content {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n}\r\n.announcement-item {\r\n  margin-right: 8px;\r\n}\r\n.announcement-date {\r\n  font-size: 12px;\r\n  color: #999;\r\n  margin-left: 4px;\r\n}\r\n.separator {\r\n  margin: 0 8px;\r\n  color: #ffd666;\r\n}\r\n.close-btn {\r\n  background: none;\r\n  border: none;\r\n  font-size: 18px;\r\n  color: #ad6800;\r\n  cursor: pointer;\r\n  margin-left: 12px;\r\n}\r\n</style> "],"mappings":"AAcA,SAAAA,kBAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,aAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,iBAAA;EACA;EACAC,OAAA;IACA;IACAC,WAAAC,OAAA;MACA,KAAAA,OAAA;MACA,MAAAC,IAAA,OAAAC,IAAA,CAAAF,OAAA;MACA,MAAAG,IAAA,GAAAF,IAAA,CAAAG,WAAA;MACA,MAAAC,KAAA,GAAAC,MAAA,CAAAL,IAAA,CAAAM,QAAA,QAAAC,QAAA;MACA,MAAAC,GAAA,GAAAH,MAAA,CAAAL,IAAA,CAAAS,OAAA,IAAAF,QAAA;MACA,MAAAG,KAAA,GAAAL,MAAA,CAAAL,IAAA,CAAAW,QAAA,IAAAJ,QAAA;MACA,MAAAK,OAAA,GAAAP,MAAA,CAAAL,IAAA,CAAAa,UAAA,IAAAN,QAAA;MACA,UAAAL,IAAA,IAAAE,KAAA,IAAAI,GAAA,IAAAE,KAAA,IAAAE,OAAA;IACA;IACA,MAAAhB,kBAAA;MACA;QACA,MAAAkB,GAAA,SAAAxB,kBAAA;QACA,KAAAG,aAAA,GAAAsB,KAAA,CAAAC,OAAA,CAAAF,GAAA,IAAAA,GAAA;QACAG,OAAA,CAAAC,GAAA,kBAAAzB,aAAA;MACA,SAAA0B,CAAA;QACAF,OAAA,CAAAG,KAAA,YAAAD,CAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}