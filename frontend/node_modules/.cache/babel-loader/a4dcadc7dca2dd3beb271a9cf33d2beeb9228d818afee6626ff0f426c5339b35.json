{"ast":null,"code":"import { mapGetters } from 'vuex';\nimport { equipmentApi } from '@/api';\nimport RichTextEditor from '@/components/common/RichTextEditor.vue';\nimport axios from 'axios';\nexport default {\n  name: 'AdminEquipment',\n  components: {\n    RichTextEditor\n  },\n  data() {\n    return {\n      loading: false,\n      submitting: false,\n      equipments: [],\n      total: 0,\n      currentPage: 1,\n      pageSize: 10,\n      categories: [],\n      filter: {\n        category: '',\n        status: '',\n        search: ''\n      },\n      dialogVisible: false,\n      dialogType: 'add',\n      // 'add' or 'edit'\n      form: {\n        id: null,\n        name: '',\n        category: '',\n        model: '',\n        location: '',\n        status: 'available',\n        description: '',\n        user_guide: '',\n        image_url: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: this.$t('reservation.requiredField'),\n          trigger: 'blur'\n        }],\n        category: [{\n          required: true,\n          message: this.$t('reservation.requiredField'),\n          trigger: 'change'\n        }],\n        status: [{\n          required: true,\n          message: this.$t('reservation.requiredField'),\n          trigger: 'change'\n        }]\n      },\n      uploadDialogVisible: false,\n      currentEquipment: {},\n      imageUrl: '',\n      // 上传相关\n      uploadUrl: axios.defaults.baseURL + '/api/equipment/upload-image',\n      // 视频相关\n      videoType: 'youtube',\n      // 富文本编辑器选项\n      editorOptions: {\n        modules: {\n          toolbar: [['bold', 'italic', 'underline', 'strike'], ['blockquote', 'code-block'], [{\n            'header': 1\n          }, {\n            'header': 2\n          }], [{\n            'list': 'ordered'\n          }, {\n            'list': 'bullet'\n          }], [{\n            'script': 'sub'\n          }, {\n            'script': 'super'\n          }], [{\n            'indent': '-1'\n          }, {\n            'indent': '+1'\n          }], [{\n            'direction': 'rtl'\n          }], [{\n            'size': ['small', false, 'large', 'huge']\n          }], [{\n            'header': [1, 2, 3, 4, 5, 6, false]\n          }], [{\n            'color': []\n          }, {\n            'background': []\n          }], [{\n            'font': []\n          }], [{\n            'align': []\n          }], ['clean'], ['link', 'image', 'video']]\n        },\n        placeholder: '',\n        theme: 'snow'\n      }\n    };\n  },\n  computed: {\n    ...mapGetters(['getToken']),\n    uploadHeaders() {\n      return {\n        Authorization: `Bearer ${this.getToken}`\n      };\n    },\n    // 获取完整的图片URL\n    baseUrl() {\n      return axios.defaults.baseURL || 'http://localhost:8000';\n    }\n  },\n  created() {\n    this.fetchData();\n    this.fetchCategories();\n  },\n  methods: {\n    // 获取设备列表\n    async fetchData() {\n      try {\n        this.loading = true;\n        const params = {\n          page: this.currentPage,\n          limit: this.pageSize,\n          category: this.filter.category || undefined,\n          status: this.filter.status || undefined,\n          search: this.filter.search || undefined\n        };\n        const response = await equipmentApi.getEquipments(params);\n        this.equipments = response.data.items;\n        this.total = response.data.total;\n      } catch (error) {\n        console.error('获取设备列表失败:', error);\n        this.$message.error(this.$t('error.serverError'));\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 获取设备类别\n    async fetchCategories() {\n      try {\n        const response = await equipmentApi.getCategories();\n        this.categories = response.data.categories.map(item => item.category);\n      } catch (error) {\n        console.error('获取设备类别失败:', error);\n      }\n    },\n    // 处理筛选条件变化\n    handleFilterChange() {\n      this.currentPage = 1;\n      this.fetchData();\n    },\n    // 处理页码变化\n    handlePageChange(page) {\n      this.currentPage = page;\n      this.fetchData();\n    },\n    // 添加设备\n    handleAdd() {\n      this.dialogType = 'add';\n      this.form = {\n        id: null,\n        name: '',\n        category: '',\n        model: '',\n        location: '',\n        status: 'available',\n        description: '',\n        user_guide: '',\n        video_tutorial: '',\n        image_url: ''\n      };\n      this.dialogVisible = true;\n    },\n    // 编辑设备\n    handleEdit(row) {\n      this.dialogType = 'edit';\n      this.form = {\n        ...row\n      };\n      this.dialogVisible = true;\n    },\n    // 删除设备\n    handleDelete(row) {\n      this.$confirm(this.$t('admin.confirmDeleteEquipment'), this.$t('common.warning'), {\n        confirmButtonText: this.$t('common.confirm'),\n        cancelButtonText: this.$t('common.cancel'),\n        type: 'warning'\n      }).then(async () => {\n        try {\n          this.loading = true;\n          await equipmentApi.deleteEquipment(row.id);\n          this.$message.success(this.$t('admin.equipmentDeleted'));\n          this.fetchData();\n        } catch (error) {\n          console.error('删除设备失败:', error);\n          this.$message.error(this.$t('error.serverError'));\n        } finally {\n          this.loading = false;\n        }\n      }).catch(() => {\n        // 取消删除，不做任何处理\n      });\n    },\n    // 上传设备图片\n    handleUploadImage(row) {\n      this.currentEquipment = row;\n      this.imageUrl = row.image_url || '';\n      this.uploadDialogVisible = true;\n    },\n    // 提交表单\n    submitForm() {\n      this.$refs.form.validate(async valid => {\n        if (!valid) return;\n        try {\n          this.submitting = true;\n          if (this.dialogType === 'add') {\n            // 创建设备\n            const response = await equipmentApi.createEquipment(this.form);\n            this.$message.success(this.$t('admin.equipmentAdded'));\n          } else {\n            // 更新设备\n            const response = await equipmentApi.updateEquipment(this.form.id, this.form);\n            this.$message.success(this.$t('admin.equipmentUpdated'));\n          }\n          this.dialogVisible = false;\n          this.fetchData();\n        } catch (error) {\n          console.error('保存设备失败:', error);\n          this.$message.error(this.$t('error.serverError'));\n        } finally {\n          this.submitting = false;\n        }\n      });\n    },\n    // 重置表单\n    resetForm() {\n      if (this.$refs.form) {\n        this.$refs.form.resetFields();\n      }\n    },\n    // 上传前验证\n    beforeUpload(file) {\n      const isImage = file.type.startsWith('image/');\n      const isLt8M = file.size / 1024 / 1024 < 8;\n      if (!isImage) {\n        this.$message.error(this.$t('admin.imageTypeError'));\n        return false;\n      }\n      if (!isLt8M) {\n        this.$message.error(this.$t('admin.imageSizeError').replace('2MB', '8MB'));\n        return false;\n      }\n      return true;\n    },\n    // 上传成功（添加/编辑表单中）\n    handleUploadSuccess(response) {\n      this.form.image_url = response.data.image_url;\n      this.$message.success(this.$t('admin.imageUploadSuccess'));\n    },\n    // 上传成功（单独上传图片对话框）\n    handleImageUploadSuccess(response) {\n      this.imageUrl = response.data.image_url;\n      this.currentEquipment.image_url = response.data.image_url;\n\n      // 更新设备列表中的图片URL\n      const index = this.equipments.findIndex(item => item.id === this.currentEquipment.id);\n      if (index !== -1) {\n        this.$set(this.equipments, index, {\n          ...this.currentEquipment\n        });\n      }\n      this.$message.success(this.$t('admin.imageUploadSuccess'));\n\n      // 关闭对话框\n      setTimeout(() => {\n        this.uploadDialogVisible = false;\n      }, 1500);\n    },\n    // 上传失败\n    handleUploadError(error, file) {\n      console.error('上传图片失败:', error);\n      console.log('文件信息:', file ? {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        lastModified: file.lastModified\n      } : 'No file info');\n\n      // 尝试获取更详细的错误信息\n      let errorMessage = this.$t('admin.imageUploadError');\n      if (error.response && error.response.data) {\n        console.error('错误响应数据:', error.response.data);\n        if (error.response.data.detail) {\n          errorMessage += ': ' + error.response.data.detail;\n        }\n      }\n      this.$message.error(errorMessage);\n    },\n    // 处理导入/导出\n    handleImportExport(command) {\n      switch (command) {\n        case 'import':\n          this.handleImport();\n          break;\n        case 'export':\n          this.handleExport();\n          break;\n        case 'template':\n          this.downloadTemplate();\n          break;\n      }\n    },\n    // 导入设备\n    handleImport() {\n      // 创建一个隐藏的文件输入框\n      const input = document.createElement('input');\n      input.type = 'file';\n      input.accept = '.xlsx,.xls';\n      input.style.display = 'none';\n\n      // 监听文件选择事件\n      input.addEventListener('change', async e => {\n        const file = e.target.files[0];\n        if (!file) return;\n\n        // 创建 FormData\n        const formData = new FormData();\n        formData.append('file', file);\n        try {\n          this.loading = true;\n\n          // 发送请求\n          const response = await this.$axios.post('/api/equipment/import', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'Authorization': `Bearer ${this.getToken}`\n            }\n          });\n          this.$message.success(response.data.message || this.$t('admin.importSuccess'));\n\n          // 重新加载数据\n          this.fetchData();\n        } catch (error) {\n          console.error('导入设备失败:', error);\n          this.$message.error(error.response?.data?.detail || this.$t('admin.importError'));\n        } finally {\n          this.loading = false;\n\n          // 移除输入框\n          document.body.removeChild(input);\n        }\n      });\n\n      // 添加到文档并触发点击\n      document.body.appendChild(input);\n      input.click();\n    },\n    // 导出设备\n    handleExport() {\n      try {\n        // 构建查询参数\n        const params = new URLSearchParams();\n        if (this.filter.category) params.append('category', this.filter.category);\n        if (this.filter.status) params.append('status', this.filter.status);\n\n        // 生成导出 URL\n        const exportUrl = `/api/equipment/export?${params.toString()}`;\n\n        // 使用浏览器下载\n        window.open(exportUrl, '_blank');\n      } catch (error) {\n        console.error('导出设备失败:', error);\n        this.$message.error(this.$t('admin.exportError'));\n      }\n    },\n    // 下载模板\n    downloadTemplate() {\n      try {\n        // 使用浏览器下载\n        window.open('/api/equipment/template', '_blank');\n      } catch (error) {\n        console.error('下载模板失败:', error);\n        this.$message.error(this.$t('admin.templateError'));\n      }\n    },\n    // 处理视频类型变化\n    handleVideoTypeChange() {\n      // 如果已经有视频URL，则根据新的视频类型进行转换\n      if (this.form.video_tutorial) {\n        // 提取视频ID\n        let videoId = '';\n\n        // 尝试从当前的URL中提取视频ID\n        if (this.form.video_tutorial.includes('youtube.com') || this.form.video_tutorial.includes('youtu.be')) {\n          // 从 YouTube URL 提取视频ID\n          const match = this.form.video_tutorial.match(/(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/ ]{11})/);\n          if (match && match[1]) {\n            videoId = match[1];\n          }\n        } else if (this.form.video_tutorial.includes('bilibili.com')) {\n          // 从 Bilibili URL 提取视频ID\n          const match = this.form.video_tutorial.match(/bilibili\\.com\\/video\\/([^\\/?]+)/);\n          if (match && match[1]) {\n            videoId = match[1].replace('BV', '');\n          }\n        }\n\n        // 如果成功提取到视频ID，则根据新的视频类型生成URL\n        if (videoId) {\n          switch (this.videoType) {\n            case 'youtube':\n              this.form.video_tutorial = `https://www.youtube.com/embed/${videoId}`;\n              break;\n            case 'bilibili':\n              this.form.video_tutorial = `https://player.bilibili.com/player.html?bvid=BV${videoId}`;\n              break;\n            default:\n              // 其他类型不做处理\n              break;\n          }\n        }\n      }\n    },\n    // 获取完整的图片URL\n    getFullImageUrl(url) {\n      if (!url) return '';\n\n      // 如果已经是完整URL，直接返回\n      if (url.startsWith('http://') || url.startsWith('https://')) {\n        return url;\n      }\n\n      // 如果是相对路径，添加基础URL\n      if (url.startsWith('/')) {\n        return this.baseUrl + url;\n      }\n\n      // 其他情况，添加基础URL和斜杠\n      return this.baseUrl + '/' + url;\n    },\n    // 触发手动上传\n    triggerManualUpload() {\n      this.$refs.manualFileInput.click();\n    },\n    // 处理手动文件选择\n    async handleManualFileChange(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n\n      // 验证文件\n      const isImage = file.type.startsWith('image/');\n      const isLt8M = file.size / 1024 / 1024 < 8;\n      if (!isImage) {\n        this.$message.error(this.$t('admin.imageTypeError'));\n        return;\n      }\n      if (!isLt8M) {\n        this.$message.error(this.$t('admin.imageSizeError').replace('2MB', '8MB'));\n        return;\n      }\n\n      // 创建 FormData\n      const formData = new FormData();\n      formData.append('file', file);\n      try {\n        this.loading = true;\n\n        // 直接使用 axios 发送请求\n        const response = await axios.post(this.uploadUrl, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${this.getToken}`\n          }\n        });\n\n        // 处理成功响应\n        this.form.image_url = response.data.data.image_url;\n        this.$message.success(this.$t('admin.imageUploadSuccess'));\n      } catch (error) {\n        console.error('手动上传图片失败:', error);\n        console.log('文件信息:', {\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          lastModified: file.lastModified\n        });\n\n        // 尝试获取更详细的错误信息\n        let errorMessage = this.$t('admin.imageUploadError');\n        if (error.response && error.response.data) {\n          console.error('错误响应数据:', error.response.data);\n          if (error.response.data.detail) {\n            errorMessage += ': ' + error.response.data.detail;\n          }\n        }\n        this.$message.error(errorMessage);\n      } finally {\n        this.loading = false;\n        // 清空文件输入框，允许再次选择同一文件\n        this.$refs.manualFileInput.value = '';\n      }\n    },\n    // 触发对话框手动上传\n    triggerDialogManualUpload() {\n      this.$refs.dialogManualFileInput.click();\n    },\n    // 处理对话框手动文件选择\n    async handleDialogManualFileChange(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n\n      // 验证文件\n      const isImage = file.type.startsWith('image/');\n      const isLt8M = file.size / 1024 / 1024 < 8;\n      if (!isImage) {\n        this.$message.error(this.$t('admin.imageTypeError'));\n        return;\n      }\n      if (!isLt8M) {\n        this.$message.error(this.$t('admin.imageSizeError').replace('2MB', '8MB'));\n        return;\n      }\n\n      // 创建 FormData\n      const formData = new FormData();\n      formData.append('file', file);\n      if (this.currentEquipment.id) {\n        formData.append('equipment_id', this.currentEquipment.id);\n      }\n      try {\n        this.loading = true;\n\n        // 直接使用 axios 发送请求\n        const response = await axios.post(this.uploadUrl, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${this.getToken}`\n          }\n        });\n\n        // 处理成功响应\n        this.imageUrl = response.data.data.image_url;\n        this.currentEquipment.image_url = response.data.data.image_url;\n\n        // 更新设备列表中的图片URL\n        const index = this.equipments.findIndex(item => item.id === this.currentEquipment.id);\n        if (index !== -1) {\n          this.$set(this.equipments, index, {\n            ...this.currentEquipment\n          });\n        }\n        this.$message.success(this.$t('admin.imageUploadSuccess'));\n\n        // 关闭对话框\n        setTimeout(() => {\n          this.uploadDialogVisible = false;\n        }, 1500);\n      } catch (error) {\n        console.error('手动上传图片失败:', error);\n        console.log('文件信息:', {\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          lastModified: file.lastModified\n        });\n\n        // 尝试获取更详细的错误信息\n        let errorMessage = this.$t('admin.imageUploadError');\n        if (error.response && error.response.data) {\n          console.error('错误响应数据:', error.response.data);\n          if (error.response.data.detail) {\n            errorMessage += ': ' + error.response.data.detail;\n          }\n        }\n        this.$message.error(errorMessage);\n      } finally {\n        this.loading = false;\n        // 清空文件输入框，允许再次选择同一文件\n        this.$refs.dialogManualFileInput.value = '';\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","equipmentApi","RichTextEditor","axios","name","components","data","loading","submitting","equipments","total","currentPage","pageSize","categories","filter","category","status","search","dialogVisible","dialogType","form","id","model","location","description","user_guide","image_url","rules","required","message","$t","trigger","uploadDialogVisible","currentEquipment","imageUrl","uploadUrl","defaults","baseURL","videoType","editorOptions","modules","toolbar","placeholder","theme","computed","uploadHeaders","Authorization","getToken","baseUrl","created","fetchData","fetchCategories","methods","params","page","limit","undefined","response","getEquipments","items","error","console","$message","getCategories","map","item","handleFilterChange","handlePageChange","handleAdd","video_tutorial","handleEdit","row","handleDelete","$confirm","confirmButtonText","cancelButtonText","type","then","deleteEquipment","success","catch","handleUploadImage","submitForm","$refs","validate","valid","createEquipment","updateEquipment","resetForm","resetFields","beforeUpload","file","isImage","startsWith","isLt8M","size","replace","handleUploadSuccess","handleImageUploadSuccess","index","findIndex","$set","setTimeout","handleUploadError","log","lastModified","errorMessage","detail","handleImportExport","command","handleImport","handleExport","downloadTemplate","input","document","createElement","accept","style","display","addEventListener","e","target","files","formData","FormData","append","$axios","post","headers","body","removeChild","appendChild","click","URLSearchParams","exportUrl","toString","window","open","handleVideoTypeChange","videoId","includes","match","getFullImageUrl","url","triggerManualUpload","manualFileInput","handleManualFileChange","event","value","triggerDialogManualUpload","dialogManualFileInput","handleDialogManualFileChange"],"sources":["src/views/admin/AdminEquipment.vue"],"sourcesContent":["<template>\n  <div class=\"admin-equipment\">\n    <div class=\"page-header\">\n      <h2>{{ $t('admin.equipment') }}</h2>\n      <div class=\"page-actions\">\n        <el-button\n          type=\"primary\"\n          icon=\"el-icon-plus\"\n          @click=\"handleAdd\"\n        >\n          {{ $t('admin.addEquipment') }}\n        </el-button>\n\n        <el-dropdown @command=\"handleImportExport\" split-button type=\"primary\">\n          {{ $t('admin.importExport') }}\n          <el-dropdown-menu slot=\"dropdown\">\n            <el-dropdown-item command=\"import\">\n              <i class=\"el-icon-upload2\"></i> {{ $t('admin.importEquipment') }}\n            </el-dropdown-item>\n            <el-dropdown-item command=\"export\">\n              <i class=\"el-icon-download\"></i> {{ $t('admin.exportEquipment') }}\n            </el-dropdown-item>\n            <el-dropdown-item command=\"template\">\n              <i class=\"el-icon-document\"></i> {{ $t('admin.downloadTemplate') }}\n            </el-dropdown-item>\n          </el-dropdown-menu>\n        </el-dropdown>\n      </div>\n    </div>\n\n    <!-- 搜索和筛选 -->\n    <el-card class=\"filter-card\">\n      <el-form :inline=\"true\" :model=\"filter\" class=\"filter-form\">\n        <el-form-item :label=\"$t('equipment.category')\">\n          <el-select\n            v-model=\"filter.category\"\n            :placeholder=\"$t('equipment.allCategories')\"\n            clearable\n            @change=\"handleFilterChange\"\n          >\n            <el-option\n              v-for=\"category in categories\"\n              :key=\"category\"\n              :label=\"category\"\n              :value=\"category\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item :label=\"$t('equipment.status')\">\n          <el-select\n            v-model=\"filter.status\"\n            :placeholder=\"$t('equipment.allStatus')\"\n            clearable\n            @change=\"handleFilterChange\"\n          >\n            <el-option\n              :label=\"$t('equipment.available')\"\n              value=\"available\"\n            ></el-option>\n            <el-option\n              :label=\"$t('equipment.maintenance')\"\n              value=\"maintenance\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item>\n          <el-input\n            v-model=\"filter.search\"\n            :placeholder=\"$t('equipment.searchPlaceholder')\"\n            clearable\n            @keyup.enter.native=\"handleFilterChange\"\n          >\n            <el-button\n              slot=\"append\"\n              icon=\"el-icon-search\"\n              @click=\"handleFilterChange\"\n            ></el-button>\n          </el-input>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <!-- 设备列表 -->\n    <el-table\n      v-loading=\"loading\"\n      :data=\"equipments\"\n      border\n      style=\"width: 100%; margin-top: 20px;\"\n    >\n      <el-table-column\n        prop=\"id\"\n        label=\"ID\"\n        width=\"80\"\n      ></el-table-column>\n\n      <el-table-column\n        prop=\"name\"\n        :label=\"$t('equipment.name')\"\n        min-width=\"150\"\n      ></el-table-column>\n\n      <el-table-column\n        prop=\"category\"\n        :label=\"$t('equipment.category')\"\n        width=\"120\"\n      ></el-table-column>\n\n      <el-table-column\n        prop=\"location\"\n        :label=\"$t('equipment.location')\"\n        width=\"120\"\n      ></el-table-column>\n\n      <el-table-column\n        prop=\"status\"\n        :label=\"$t('equipment.status')\"\n        width=\"100\"\n      >\n        <template slot-scope=\"scope\">\n          <el-tag\n            :type=\"scope.row.status === 'available' ? 'success' : 'warning'\"\n            size=\"small\"\n          >\n            {{ scope.row.status === 'available' ? $t('equipment.available') : $t('equipment.maintenance') }}\n          </el-tag>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        :label=\"$t('equipment.image')\"\n        width=\"100\"\n        align=\"center\"\n      >\n        <template slot-scope=\"scope\">\n          <div>\n            <el-image\n              v-if=\"scope.row.image_url\"\n              :src=\"getFullImageUrl(scope.row.image_url)\"\n              :preview-src-list=\"[getFullImageUrl(scope.row.image_url)]\"\n              style=\"width: 60px; height: 60px;\"\n              fit=\"contain\"\n              @click=\"handleUploadImage(scope.row)\"\n              class=\"clickable-image\"\n            ></el-image>\n            <el-button\n              v-else\n              type=\"text\"\n              icon=\"el-icon-picture\"\n              @click=\"handleUploadImage(scope.row)\"\n            >\n              上传图片\n            </el-button>\n          </div>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        :label=\"$t('common.operation')\"\n        width=\"200\"\n        fixed=\"right\"\n      >\n        <template slot-scope=\"scope\">\n          <el-button\n            type=\"text\"\n            size=\"small\"\n            @click=\"handleEdit(scope.row)\"\n          >\n            {{ $t('common.edit') }}\n          </el-button>\n\n          <el-button\n            v-if=\"scope.row.image_url\"\n            type=\"text\"\n            size=\"small\"\n            @click=\"handleUploadImage(scope.row)\"\n          >\n            更换图片\n          </el-button>\n\n          <el-button\n            type=\"text\"\n            size=\"small\"\n            class=\"danger-button\"\n            @click=\"handleDelete(scope.row)\"\n          >\n            {{ $t('common.delete') }}\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 分页 -->\n    <div class=\"pagination-container\">\n      <el-pagination\n        background\n        layout=\"total, prev, pager, next\"\n        :total=\"total\"\n        :page-size=\"pageSize\"\n        :current-page.sync=\"currentPage\"\n        @current-change=\"handlePageChange\"\n      ></el-pagination>\n    </div>\n\n    <!-- 添加/编辑设备对话框 -->\n    <el-dialog\n      :title=\"dialogType === 'add' ? $t('admin.addEquipment') : $t('admin.editEquipment')\"\n      :visible.sync=\"dialogVisible\"\n      width=\"50%\"\n      @close=\"resetForm\"\n    >\n      <el-form\n        ref=\"form\"\n        :model=\"form\"\n        :rules=\"rules\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"设备名称\" prop=\"name\">\n          <el-input v-model=\"form.name\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"设备类别\" prop=\"category\">\n          <el-select\n            v-model=\"form.category\"\n            filterable\n            allow-create\n            default-first-option\n            style=\"width: 100%\"\n          >\n            <el-option\n              v-for=\"category in categories\"\n              :key=\"category\"\n              :label=\"category\"\n              :value=\"category\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"设备型号\" prop=\"model\">\n          <el-input v-model=\"form.model\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"设备位置\" prop=\"location\">\n          <el-input v-model=\"form.location\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"设备状态\" prop=\"status\">\n          <el-radio-group v-model=\"form.status\">\n            <el-radio label=\"available\">可用</el-radio>\n            <el-radio label=\"maintenance\">维护中</el-radio>\n          </el-radio-group>\n        </el-form-item>\n\n        <el-form-item label=\"设备描述\" prop=\"description\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"form.description\"\n            :rows=\"4\"\n          ></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"使用指南\" prop=\"user_guide\">\n          <rich-text-editor\n            v-model=\"form.user_guide\"\n            placeholder=\"请输入设备的详细使用步骤、注意事项等信息...\"\n          ></rich-text-editor>\n        </el-form-item>\n\n        <el-form-item label=\"视频教程\" prop=\"video_tutorial\">\n          <el-input\n            v-model=\"form.video_tutorial\"\n            placeholder=\"请输入视频链接，支持YouTube、Bilibili等平台\"\n          >\n            <template slot=\"prepend\">\n              <el-select\n                v-model=\"videoType\"\n                style=\"width: 120px;\"\n                @change=\"handleVideoTypeChange\"\n              >\n                <el-option label=\"YouTube\" value=\"youtube\"></el-option>\n                <el-option label=\"Bilibili\" value=\"bilibili\"></el-option>\n                <el-option label=\"其他\" value=\"other\"></el-option>\n              </el-select>\n            </template>\n          </el-input>\n          <div class=\"video-tip\">输入视频链接后可以在设备详情页面查看视频教程</div>\n        </el-form-item>\n\n        <el-form-item label=\"设备图片\">\n          <el-upload\n            class=\"equipment-image-uploader\"\n            :action=\"uploadUrl\"\n            :headers=\"uploadHeaders\"\n            :show-file-list=\"false\"\n            :on-success=\"handleUploadSuccess\"\n            :on-error=\"handleUploadError\"\n            :before-upload=\"beforeUpload\"\n            :multiple=\"false\"\n            name=\"file\"\n            :with-credentials=\"true\"\n          >\n            <img v-if=\"form.image_url\" :src=\"getFullImageUrl(form.image_url)\" class=\"equipment-image\">\n            <i v-else class=\"el-icon-plus equipment-image-uploader-icon\"></i>\n          </el-upload>\n          <div class=\"image-tip\">{{ $t('admin.imageTip') }}</div>\n          <div class=\"manual-upload\">\n            <el-button size=\"small\" type=\"primary\" @click=\"triggerManualUpload\">手动上传</el-button>\n            <input\n              ref=\"manualFileInput\"\n              type=\"file\"\n              accept=\"image/*\"\n              style=\"display: none;\"\n              @change=\"handleManualFileChange\"\n            >\n          </div>\n        </el-form-item>\n      </el-form>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">{{ $t('common.cancel') }}</el-button>\n        <el-button type=\"primary\" @click=\"submitForm\" :loading=\"submitting\">{{ $t('common.save') }}</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 上传图片对话框 -->\n    <el-dialog\n      title=\"上传设备图片\"\n      :visible.sync=\"uploadDialogVisible\"\n      width=\"30%\"\n    >\n      <el-upload\n        class=\"equipment-image-uploader\"\n        :action=\"uploadUrl\"\n        :headers=\"uploadHeaders\"\n        :data=\"{ equipment_id: currentEquipment.id }\"\n        :show-file-list=\"false\"\n        :on-success=\"handleImageUploadSuccess\"\n        :on-error=\"handleUploadError\"\n        :before-upload=\"beforeUpload\"\n        :multiple=\"false\"\n        name=\"file\"\n        :with-credentials=\"true\"\n      >\n        <img v-if=\"imageUrl\" :src=\"getFullImageUrl(imageUrl)\" class=\"equipment-image\">\n        <i v-else class=\"el-icon-plus equipment-image-uploader-icon\"></i>\n      </el-upload>\n      <div class=\"image-tip\">{{ $t('admin.imageTip') }}</div>\n      <div class=\"manual-upload\">\n        <el-button size=\"small\" type=\"primary\" @click=\"triggerDialogManualUpload\">手动上传</el-button>\n        <input\n          ref=\"dialogManualFileInput\"\n          type=\"file\"\n          accept=\"image/*\"\n          style=\"display: none;\"\n          @change=\"handleDialogManualFileChange\"\n        >\n      </div>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"uploadDialogVisible = false\">{{ $t('common.cancel') }}</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport { equipmentApi } from '@/api'\nimport RichTextEditor from '@/components/common/RichTextEditor.vue'\nimport axios from 'axios'\n\nexport default {\n  name: 'AdminEquipment',\n\n  components: {\n    RichTextEditor\n  },\n\n  data() {\n    return {\n      loading: false,\n      submitting: false,\n      equipments: [],\n      total: 0,\n      currentPage: 1,\n      pageSize: 10,\n      categories: [],\n      filter: {\n        category: '',\n        status: '',\n        search: ''\n      },\n\n      dialogVisible: false,\n      dialogType: 'add', // 'add' or 'edit'\n      form: {\n        id: null,\n        name: '',\n        category: '',\n        model: '',\n        location: '',\n        status: 'available',\n        description: '',\n        user_guide: '',\n        image_url: ''\n      },\n      rules: {\n        name: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'blur' }\n        ],\n        category: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'change' }\n        ],\n        status: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'change' }\n        ]\n      },\n\n      uploadDialogVisible: false,\n      currentEquipment: {},\n      imageUrl: '',\n\n      // 上传相关\n      uploadUrl: axios.defaults.baseURL + '/api/equipment/upload-image',\n\n      // 视频相关\n      videoType: 'youtube',\n\n      // 富文本编辑器选项\n      editorOptions: {\n        modules: {\n          toolbar: [\n            ['bold', 'italic', 'underline', 'strike'],\n            ['blockquote', 'code-block'],\n            [{ 'header': 1 }, { 'header': 2 }],\n            [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n            [{ 'script': 'sub' }, { 'script': 'super' }],\n            [{ 'indent': '-1' }, { 'indent': '+1' }],\n            [{ 'direction': 'rtl' }],\n            [{ 'size': ['small', false, 'large', 'huge'] }],\n            [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n            [{ 'color': [] }, { 'background': [] }],\n            [{ 'font': [] }],\n            [{ 'align': [] }],\n            ['clean'],\n            ['link', 'image', 'video']\n          ]\n        },\n        placeholder: '',\n        theme: 'snow'\n      },\n    }\n  },\n\n  computed: {\n    ...mapGetters(['getToken']),\n\n    uploadHeaders() {\n      return {\n        Authorization: `Bearer ${this.getToken}`\n      }\n    },\n\n    // 获取完整的图片URL\n    baseUrl() {\n      return axios.defaults.baseURL || 'http://localhost:8000';\n    }\n  },\n\n  created() {\n    this.fetchData()\n    this.fetchCategories()\n  },\n\n  methods: {\n    // 获取设备列表\n    async fetchData() {\n      try {\n        this.loading = true\n\n        const params = {\n          page: this.currentPage,\n          limit: this.pageSize,\n          category: this.filter.category || undefined,\n          status: this.filter.status || undefined,\n          search: this.filter.search || undefined\n        }\n\n        const response = await equipmentApi.getEquipments(params)\n        this.equipments = response.data.items\n        this.total = response.data.total\n      } catch (error) {\n        console.error('获取设备列表失败:', error)\n        this.$message.error(this.$t('error.serverError'))\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // 获取设备类别\n    async fetchCategories() {\n      try {\n        const response = await equipmentApi.getCategories()\n        this.categories = response.data.categories.map(item => item.category)\n      } catch (error) {\n        console.error('获取设备类别失败:', error)\n      }\n    },\n\n    // 处理筛选条件变化\n    handleFilterChange() {\n      this.currentPage = 1\n      this.fetchData()\n    },\n\n    // 处理页码变化\n    handlePageChange(page) {\n      this.currentPage = page\n      this.fetchData()\n    },\n\n    // 添加设备\n    handleAdd() {\n      this.dialogType = 'add'\n      this.form = {\n        id: null,\n        name: '',\n        category: '',\n        model: '',\n        location: '',\n        status: 'available',\n        description: '',\n        user_guide: '',\n        video_tutorial: '',\n        image_url: ''\n      }\n      this.dialogVisible = true\n    },\n\n    // 编辑设备\n    handleEdit(row) {\n      this.dialogType = 'edit'\n      this.form = { ...row }\n      this.dialogVisible = true\n    },\n\n    // 删除设备\n    handleDelete(row) {\n      this.$confirm(\n        this.$t('admin.confirmDeleteEquipment'),\n        this.$t('common.warning'),\n        {\n          confirmButtonText: this.$t('common.confirm'),\n          cancelButtonText: this.$t('common.cancel'),\n          type: 'warning'\n        }\n      ).then(async () => {\n        try {\n          this.loading = true\n\n          await equipmentApi.deleteEquipment(row.id)\n\n          this.$message.success(this.$t('admin.equipmentDeleted'))\n          this.fetchData()\n        } catch (error) {\n          console.error('删除设备失败:', error)\n          this.$message.error(this.$t('error.serverError'))\n        } finally {\n          this.loading = false\n        }\n      }).catch(() => {\n        // 取消删除，不做任何处理\n      })\n    },\n\n    // 上传设备图片\n    handleUploadImage(row) {\n      this.currentEquipment = row\n      this.imageUrl = row.image_url || ''\n      this.uploadDialogVisible = true\n    },\n\n    // 提交表单\n    submitForm() {\n      this.$refs.form.validate(async valid => {\n        if (!valid) return\n\n        try {\n          this.submitting = true\n\n          if (this.dialogType === 'add') {\n            // 创建设备\n            const response = await equipmentApi.createEquipment(this.form)\n            this.$message.success(this.$t('admin.equipmentAdded'))\n          } else {\n            // 更新设备\n            const response = await equipmentApi.updateEquipment(this.form.id, this.form)\n            this.$message.success(this.$t('admin.equipmentUpdated'))\n          }\n\n          this.dialogVisible = false\n          this.fetchData()\n        } catch (error) {\n          console.error('保存设备失败:', error)\n          this.$message.error(this.$t('error.serverError'))\n        } finally {\n          this.submitting = false\n        }\n      })\n    },\n\n    // 重置表单\n    resetForm() {\n      if (this.$refs.form) {\n        this.$refs.form.resetFields()\n      }\n    },\n\n    // 上传前验证\n    beforeUpload(file) {\n      const isImage = file.type.startsWith('image/')\n      const isLt8M = file.size / 1024 / 1024 < 8\n\n      if (!isImage) {\n        this.$message.error(this.$t('admin.imageTypeError'))\n        return false\n      }\n\n      if (!isLt8M) {\n        this.$message.error(this.$t('admin.imageSizeError').replace('2MB', '8MB'))\n        return false\n      }\n\n      return true\n    },\n\n    // 上传成功（添加/编辑表单中）\n    handleUploadSuccess(response) {\n      this.form.image_url = response.data.image_url\n      this.$message.success(this.$t('admin.imageUploadSuccess'))\n    },\n\n    // 上传成功（单独上传图片对话框）\n    handleImageUploadSuccess(response) {\n      this.imageUrl = response.data.image_url\n      this.currentEquipment.image_url = response.data.image_url\n\n      // 更新设备列表中的图片URL\n      const index = this.equipments.findIndex(item => item.id === this.currentEquipment.id)\n      if (index !== -1) {\n        this.$set(this.equipments, index, { ...this.currentEquipment })\n      }\n\n      this.$message.success(this.$t('admin.imageUploadSuccess'))\n\n      // 关闭对话框\n      setTimeout(() => {\n        this.uploadDialogVisible = false\n      }, 1500)\n    },\n\n    // 上传失败\n    handleUploadError(error, file) {\n      console.error('上传图片失败:', error)\n      console.log('文件信息:', file ? {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        lastModified: file.lastModified\n      } : 'No file info')\n\n      // 尝试获取更详细的错误信息\n      let errorMessage = this.$t('admin.imageUploadError')\n      if (error.response && error.response.data) {\n        console.error('错误响应数据:', error.response.data)\n        if (error.response.data.detail) {\n          errorMessage += ': ' + error.response.data.detail\n        }\n      }\n\n      this.$message.error(errorMessage)\n    },\n\n    // 处理导入/导出\n    handleImportExport(command) {\n      switch (command) {\n        case 'import':\n          this.handleImport()\n          break\n        case 'export':\n          this.handleExport()\n          break\n        case 'template':\n          this.downloadTemplate()\n          break\n      }\n    },\n\n    // 导入设备\n    handleImport() {\n      // 创建一个隐藏的文件输入框\n      const input = document.createElement('input')\n      input.type = 'file'\n      input.accept = '.xlsx,.xls'\n      input.style.display = 'none'\n\n      // 监听文件选择事件\n      input.addEventListener('change', async (e) => {\n        const file = e.target.files[0]\n        if (!file) return\n\n        // 创建 FormData\n        const formData = new FormData()\n        formData.append('file', file)\n\n        try {\n          this.loading = true\n\n          // 发送请求\n          const response = await this.$axios.post('/api/equipment/import', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'Authorization': `Bearer ${this.getToken}`\n            }\n          })\n\n          this.$message.success(response.data.message || this.$t('admin.importSuccess'))\n\n          // 重新加载数据\n          this.fetchData()\n        } catch (error) {\n          console.error('导入设备失败:', error)\n          this.$message.error(error.response?.data?.detail || this.$t('admin.importError'))\n        } finally {\n          this.loading = false\n\n          // 移除输入框\n          document.body.removeChild(input)\n        }\n      })\n\n      // 添加到文档并触发点击\n      document.body.appendChild(input)\n      input.click()\n    },\n\n    // 导出设备\n    handleExport() {\n      try {\n        // 构建查询参数\n        const params = new URLSearchParams()\n        if (this.filter.category) params.append('category', this.filter.category)\n        if (this.filter.status) params.append('status', this.filter.status)\n\n        // 生成导出 URL\n        const exportUrl = `/api/equipment/export?${params.toString()}`\n\n        // 使用浏览器下载\n        window.open(exportUrl, '_blank')\n      } catch (error) {\n        console.error('导出设备失败:', error)\n        this.$message.error(this.$t('admin.exportError'))\n      }\n    },\n\n    // 下载模板\n    downloadTemplate() {\n      try {\n        // 使用浏览器下载\n        window.open('/api/equipment/template', '_blank')\n      } catch (error) {\n        console.error('下载模板失败:', error)\n        this.$message.error(this.$t('admin.templateError'))\n      }\n    },\n\n    // 处理视频类型变化\n    handleVideoTypeChange() {\n      // 如果已经有视频URL，则根据新的视频类型进行转换\n      if (this.form.video_tutorial) {\n        // 提取视频ID\n        let videoId = ''\n\n        // 尝试从当前的URL中提取视频ID\n        if (this.form.video_tutorial.includes('youtube.com') || this.form.video_tutorial.includes('youtu.be')) {\n          // 从 YouTube URL 提取视频ID\n          const match = this.form.video_tutorial.match(/(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/ ]{11})/)\n          if (match && match[1]) {\n            videoId = match[1]\n          }\n        } else if (this.form.video_tutorial.includes('bilibili.com')) {\n          // 从 Bilibili URL 提取视频ID\n          const match = this.form.video_tutorial.match(/bilibili\\.com\\/video\\/([^\\/?]+)/)\n          if (match && match[1]) {\n            videoId = match[1].replace('BV', '')\n          }\n        }\n\n        // 如果成功提取到视频ID，则根据新的视频类型生成URL\n        if (videoId) {\n          switch (this.videoType) {\n            case 'youtube':\n              this.form.video_tutorial = `https://www.youtube.com/embed/${videoId}`\n              break\n            case 'bilibili':\n              this.form.video_tutorial = `https://player.bilibili.com/player.html?bvid=BV${videoId}`\n              break\n            default:\n              // 其他类型不做处理\n              break\n          }\n        }\n      }\n    },\n\n    // 获取完整的图片URL\n    getFullImageUrl(url) {\n      if (!url) return '';\n\n      // 如果已经是完整URL，直接返回\n      if (url.startsWith('http://') || url.startsWith('https://')) {\n        return url;\n      }\n\n      // 如果是相对路径，添加基础URL\n      if (url.startsWith('/')) {\n        return this.baseUrl + url;\n      }\n\n      // 其他情况，添加基础URL和斜杠\n      return this.baseUrl + '/' + url;\n    },\n\n    // 触发手动上传\n    triggerManualUpload() {\n      this.$refs.manualFileInput.click()\n    },\n\n    // 处理手动文件选择\n    async handleManualFileChange(event) {\n      const file = event.target.files[0]\n      if (!file) return\n\n      // 验证文件\n      const isImage = file.type.startsWith('image/')\n      const isLt8M = file.size / 1024 / 1024 < 8\n\n      if (!isImage) {\n        this.$message.error(this.$t('admin.imageTypeError'))\n        return\n      }\n\n      if (!isLt8M) {\n        this.$message.error(this.$t('admin.imageSizeError').replace('2MB', '8MB'))\n        return\n      }\n\n      // 创建 FormData\n      const formData = new FormData()\n      formData.append('file', file)\n\n      try {\n        this.loading = true\n\n        // 直接使用 axios 发送请求\n        const response = await axios.post(this.uploadUrl, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${this.getToken}`\n          }\n        })\n\n        // 处理成功响应\n        this.form.image_url = response.data.data.image_url\n        this.$message.success(this.$t('admin.imageUploadSuccess'))\n      } catch (error) {\n        console.error('手动上传图片失败:', error)\n        console.log('文件信息:', {\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          lastModified: file.lastModified\n        })\n\n        // 尝试获取更详细的错误信息\n        let errorMessage = this.$t('admin.imageUploadError')\n        if (error.response && error.response.data) {\n          console.error('错误响应数据:', error.response.data)\n          if (error.response.data.detail) {\n            errorMessage += ': ' + error.response.data.detail\n          }\n        }\n\n        this.$message.error(errorMessage)\n      } finally {\n        this.loading = false\n        // 清空文件输入框，允许再次选择同一文件\n        this.$refs.manualFileInput.value = ''\n      }\n    },\n\n    // 触发对话框手动上传\n    triggerDialogManualUpload() {\n      this.$refs.dialogManualFileInput.click()\n    },\n\n    // 处理对话框手动文件选择\n    async handleDialogManualFileChange(event) {\n      const file = event.target.files[0]\n      if (!file) return\n\n      // 验证文件\n      const isImage = file.type.startsWith('image/')\n      const isLt8M = file.size / 1024 / 1024 < 8\n\n      if (!isImage) {\n        this.$message.error(this.$t('admin.imageTypeError'))\n        return\n      }\n\n      if (!isLt8M) {\n        this.$message.error(this.$t('admin.imageSizeError').replace('2MB', '8MB'))\n        return\n      }\n\n      // 创建 FormData\n      const formData = new FormData()\n      formData.append('file', file)\n      if (this.currentEquipment.id) {\n        formData.append('equipment_id', this.currentEquipment.id)\n      }\n\n      try {\n        this.loading = true\n\n        // 直接使用 axios 发送请求\n        const response = await axios.post(this.uploadUrl, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${this.getToken}`\n          }\n        })\n\n        // 处理成功响应\n        this.imageUrl = response.data.data.image_url\n        this.currentEquipment.image_url = response.data.data.image_url\n\n        // 更新设备列表中的图片URL\n        const index = this.equipments.findIndex(item => item.id === this.currentEquipment.id)\n        if (index !== -1) {\n          this.$set(this.equipments, index, { ...this.currentEquipment })\n        }\n\n        this.$message.success(this.$t('admin.imageUploadSuccess'))\n\n        // 关闭对话框\n        setTimeout(() => {\n          this.uploadDialogVisible = false\n        }, 1500)\n      } catch (error) {\n        console.error('手动上传图片失败:', error)\n        console.log('文件信息:', {\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          lastModified: file.lastModified\n        })\n\n        // 尝试获取更详细的错误信息\n        let errorMessage = this.$t('admin.imageUploadError')\n        if (error.response && error.response.data) {\n          console.error('错误响应数据:', error.response.data)\n          if (error.response.data.detail) {\n            errorMessage += ': ' + error.response.data.detail\n          }\n        }\n\n        this.$message.error(errorMessage)\n      } finally {\n        this.loading = false\n        // 清空文件输入框，允许再次选择同一文件\n        this.$refs.dialogManualFileInput.value = ''\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.admin-equipment {\n  padding: 20px;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.page-actions {\n  display: flex;\n  gap: 10px;\n}\n\n.page-header h2 {\n  margin: 0;\n  font-size: 20px;\n}\n\n.filter-card {\n  margin-bottom: 20px;\n}\n\n.filter-form .el-form-item {\n  margin-bottom: 0;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  text-align: right;\n}\n\n.quill-editor {\n  height: 300px;\n  margin-bottom: 10px;\n}\n\n.editor-tip {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 5px;\n}\n\n.danger-button {\n  color: #F56C6C;\n}\n\n.equipment-image-uploader {\n  text-align: center;\n}\n\n.equipment-image-uploader .el-upload {\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n  width: 300px;\n  height: 225px;\n  display: inline-block;\n}\n\n.equipment-image-uploader .el-upload:hover {\n  border-color: #409EFF;\n}\n\n.equipment-image-uploader-icon {\n  font-size: 28px;\n  color: #8c939d;\n  width: 300px;\n  height: 225px;\n  line-height: 225px;\n  text-align: center;\n}\n\n.equipment-image {\n  width: 300px;\n  height: 225px;\n  display: block;\n  object-fit: contain;\n}\n\n.image-tip,\n.video-tip {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 5px;\n}\n\n.manual-upload {\n  margin-top: 10px;\n}\n\n.clickable-image {\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.clickable-image:hover {\n  transform: scale(1.05);\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n@media (max-width: 768px) {\n  .admin-equipment {\n    padding: 10px;\n  }\n\n  .filter-form {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .filter-form .el-form-item {\n    margin-right: 0;\n    margin-bottom: 10px;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}