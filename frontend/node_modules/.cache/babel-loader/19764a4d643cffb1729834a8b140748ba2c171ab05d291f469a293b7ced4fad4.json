{"ast":null,"code":"import { getDbTables, getDbTableColumns, getDbTableRows } from '@/api/dbAdmin';\nimport { mapState } from 'vuex';\nexport default {\n  name: 'DatabaseViewer',\n  data() {\n    return {\n      tables: [],\n      selectedTable: '',\n      columns: [],\n      rows: [],\n      total: 0,\n      page: 1,\n      pageSize: 20,\n      loading: false,\n      inited: false\n    };\n  },\n  computed: {\n    ...mapState({\n      user: state => state.user\n    }),\n    isSuperAdmin() {\n      return this.user && this.user.role === 'superadmin';\n    }\n  },\n  created() {\n    console.log(\"DatabaseViewer 组件 created\");\n  },\n  mounted() {\n    console.log(\"DatabaseViewer 组件 mounted, 调用 initIfNeeded\");\n    this.initIfNeeded();\n  },\n  methods: {\n    // ... existing methods ...\n\n    // 根据列名设置列宽\n    getColumnWidth(columnName) {\n      // 针对特殊列设置宽度\n      if (columnName.toLowerCase().includes('content_html') || columnName.toLowerCase().includes('html') || columnName.toLowerCase().includes('content')) {\n        return 500; // 对HTML内容类型设置很宽\n      } else if (columnName.toLowerCase().includes('id')) {\n        return 80; // ID列窄一些\n      } else if (columnName.toLowerCase().includes('date') || columnName.toLowerCase().includes('time') || columnName.toLowerCase().includes('created') || columnName.toLowerCase().includes('updated')) {\n        return 180; // 日期时间列适中\n      } else if (columnName.toLowerCase().includes('name') || columnName.toLowerCase().includes('title')) {\n        return 150; // 名称标题列适中\n      } else if (columnName.toLowerCase().includes('description') || columnName.toLowerCase().includes('comment')) {\n        return 250; // 描述、评论列宽一些\n      } else {\n        return 150; // 默认列宽\n      }\n    },\n    // 格式化单元格内容\n    formatCell(row, column, cellValue) {\n      if (cellValue === null || cellValue === undefined) {\n        return '';\n      }\n\n      // 如果是HTML内容，只显示部分文本并添加提示\n      if (column.property.toLowerCase().includes('content_html') || column.property.toLowerCase().includes('html')) {\n        if (typeof cellValue === 'string' && cellValue.length > 100) {\n          return cellValue.substring(0, 100) + '...';\n        }\n      }\n\n      // 对日期时间格式化\n      if ((column.property.toLowerCase().includes('date') || column.property.toLowerCase().includes('time')) && !isNaN(Date.parse(cellValue))) {\n        return new Date(cellValue).toLocaleString();\n      }\n      return cellValue;\n    },\n    // 单元格样式\n    cellStyle({\n      row,\n      column,\n      rowIndex,\n      columnIndex\n    }) {\n      const style = {\n        padding: '8px',\n        maxHeight: '100px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'normal',\n        wordBreak: 'break-word'\n      };\n\n      // 对HTML内容列特殊处理\n      if (column.property.toLowerCase().includes('content_html') || column.property.toLowerCase().includes('html')) {\n        style.maxHeight = '100px';\n        style.maxWidth = '500px';\n      }\n      return style;\n    }\n  }\n};","map":{"version":3,"names":["getDbTables","getDbTableColumns","getDbTableRows","mapState","name","data","tables","selectedTable","columns","rows","total","page","pageSize","loading","inited","computed","user","state","isSuperAdmin","role","created","console","log","mounted","initIfNeeded","methods","getColumnWidth","columnName","toLowerCase","includes","formatCell","row","column","cellValue","undefined","property","length","substring","isNaN","Date","parse","toLocaleString","cellStyle","rowIndex","columnIndex","style","padding","maxHeight","overflow","textOverflow","whiteSpace","wordBreak","maxWidth"],"sources":["src/views/admin/DatabaseViewer.vue"],"sourcesContent":["<template>\r\n  <div class=\"db-viewer\" v-if=\"isSuperAdmin\">\r\n    <el-row>\r\n      <el-col :span=\"4\" class=\"db-tables-list\">\r\n        <el-card shadow=\"never\" style=\"height: 100%\">\r\n          <div slot=\"header\"><b>数据库表</b></div>\r\n          <el-scrollbar style=\"height: 70vh\">\r\n            <el-menu :default-active=\"selectedTable\" @select=\"handleTableSelect\">\r\n              <el-menu-item v-for=\"table in tables\" :key=\"table\" :index=\"table\">\r\n                {{ table }}\r\n              </el-menu-item>\r\n            </el-menu>\r\n          </el-scrollbar>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"20\" class=\"db-table-content\">\r\n        <el-card shadow=\"never\" style=\"min-height: 70vh\">\r\n          <div slot=\"header\" class=\"db-table-header\">\r\n            <span v-if=\"selectedTable\"><b>{{ selectedTable }}</b>（共 {{ total }} 条）</span>\r\n            <el-button v-if=\"selectedTable\" size=\"mini\" icon=\"el-icon-refresh\" @click=\"refreshTable\" style=\"float: right;\">刷新</el-button>\r\n          </div>\r\n          <div v-if=\"selectedTable\" class=\"table-wrapper\">\r\n            <el-table \r\n              :data=\"rows\" \r\n              border \r\n              size=\"small\" \r\n              style=\"width: 100%\" \r\n              max-height=\"500\" \r\n              header-row-class-name=\"db-table-header-row\"\r\n              :cell-style=\"cellStyle\"\r\n            >\r\n              <el-table-column \r\n                v-for=\"col in columns\" \r\n                :key=\"col.name\" \r\n                :prop=\"col.name\" \r\n                :label=\"col.name\" \r\n                :min-width=\"getColumnWidth(col.name)\"\r\n                :formatter=\"formatCell\"\r\n                show-overflow-tooltip\r\n                align=\"left\"\r\n              />\r\n            </el-table>\r\n            <el-pagination\r\n              v-if=\"total > pageSize\"\r\n              background\r\n              layout=\"prev, pager, next, jumper\"\r\n              :current-page=\"page\"\r\n              :page-size=\"pageSize\"\r\n              :total=\"total\"\r\n              @current-change=\"handlePageChange\"\r\n              style=\"margin-top: 16px; text-align: right;\"\r\n            />\r\n            <div class=\"db-table-columns-info\" style=\"margin-top: 16px;\">\r\n              <b>字段信息：</b>\r\n              <el-table :data=\"columns\" border size=\"mini\" style=\"width: 100%; margin-top: 8px;\">\r\n                <el-table-column prop=\"name\" label=\"字段名\" width=\"120\" />\r\n                <el-table-column prop=\"type\" label=\"类型\" width=\"120\" />\r\n                <el-table-column prop=\"nullable\" label=\"可空\" width=\"80\">\r\n                  <template slot-scope=\"scope\">\r\n                    <el-tag :type=\"scope.row.nullable ? 'info' : 'success'\">{{ scope.row.nullable ? '是' : '否' }}</el-tag>\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column prop=\"default\" label=\"默认值\" />\r\n              </el-table>\r\n            </div>\r\n          </div>\r\n          <div v-else style=\"text-align:center; color:#888; padding: 60px 0;\">请选择左侧表名</div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n  <div v-else style=\"text-align:center; color:#888; padding: 60px 0;\">无权限，仅超级管理员可访问</div>\r\n</template>\r\n\r\n<script>\r\nimport { getDbTables, getDbTableColumns, getDbTableRows } from '@/api/dbAdmin'\r\nimport { mapState } from 'vuex'\r\n\r\nexport default {\r\n  name: 'DatabaseViewer',\r\n  data() {\r\n    return {\r\n      tables: [],\r\n      selectedTable: '',\r\n      columns: [],\r\n      rows: [],\r\n      total: 0,\r\n      page: 1,\r\n      pageSize: 20,\r\n      loading: false,\r\n      inited: false,\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      user: state => state.user,\r\n    }),\r\n    isSuperAdmin() {\r\n      return this.user && this.user.role === 'superadmin'\r\n    },\r\n  },\r\n  created() {\r\n    console.log(\"DatabaseViewer 组件 created\")\r\n  },\r\n  mounted() {\r\n    console.log(\"DatabaseViewer 组件 mounted, 调用 initIfNeeded\")\r\n    this.initIfNeeded()\r\n  },\r\n  methods: {\r\n    // ... existing methods ...\r\n    \r\n    // 根据列名设置列宽\r\n    getColumnWidth(columnName) {\r\n      // 针对特殊列设置宽度\r\n      if (columnName.toLowerCase().includes('content_html') || \r\n          columnName.toLowerCase().includes('html') || \r\n          columnName.toLowerCase().includes('content')) {\r\n        return 500;  // 对HTML内容类型设置很宽\r\n      } else if (columnName.toLowerCase().includes('id')) {\r\n        return 80;   // ID列窄一些\r\n      } else if (columnName.toLowerCase().includes('date') || \r\n                columnName.toLowerCase().includes('time') || \r\n                columnName.toLowerCase().includes('created') || \r\n                columnName.toLowerCase().includes('updated')) {\r\n        return 180;  // 日期时间列适中\r\n      } else if (columnName.toLowerCase().includes('name') || \r\n                columnName.toLowerCase().includes('title')) {\r\n        return 150;  // 名称标题列适中\r\n      } else if (columnName.toLowerCase().includes('description') || \r\n                columnName.toLowerCase().includes('comment')) {\r\n        return 250;  // 描述、评论列宽一些\r\n      } else {\r\n        return 150;  // 默认列宽\r\n      }\r\n    },\r\n    \r\n    // 格式化单元格内容\r\n    formatCell(row, column, cellValue) {\r\n      if (cellValue === null || cellValue === undefined) {\r\n        return '';\r\n      }\r\n      \r\n      // 如果是HTML内容，只显示部分文本并添加提示\r\n      if (column.property.toLowerCase().includes('content_html') || \r\n          column.property.toLowerCase().includes('html')) {\r\n        if (typeof cellValue === 'string' && cellValue.length > 100) {\r\n          return cellValue.substring(0, 100) + '...';\r\n        }\r\n      }\r\n      \r\n      // 对日期时间格式化\r\n      if ((column.property.toLowerCase().includes('date') || \r\n          column.property.toLowerCase().includes('time')) && \r\n          !isNaN(Date.parse(cellValue))) {\r\n        return new Date(cellValue).toLocaleString();\r\n      }\r\n      \r\n      return cellValue;\r\n    },\r\n    \r\n    // 单元格样式\r\n    cellStyle({row, column, rowIndex, columnIndex}) {\r\n      const style = {\r\n        padding: '8px',\r\n        maxHeight: '100px', \r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        whiteSpace: 'normal',\r\n        wordBreak: 'break-word'\r\n      };\r\n      \r\n      // 对HTML内容列特殊处理\r\n      if (column.property.toLowerCase().includes('content_html') || \r\n          column.property.toLowerCase().includes('html')) {\r\n        style.maxHeight = '100px';\r\n        style.maxWidth = '500px';\r\n      }\r\n      \r\n      return style;\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.db-viewer {\r\n  padding: 24px;\r\n}\r\n.db-tables-list {\r\n  border-right: 1px solid #eee;\r\n  min-height: 70vh;\r\n}\r\n.db-table-content {\r\n  padding-left: 24px;\r\n}\r\n.db-table-header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n.table-wrapper {\r\n  overflow: auto;\r\n  max-height: 70vh;\r\n}\r\n/* 给表格添加滚动条 */\r\n.table-wrapper :deep(.el-table__body-wrapper) {\r\n  overflow-x: auto !important;\r\n  overflow-y: auto !important;\r\n}\r\n/* 修复表头样式 */\r\n.db-table-header-row {\r\n  background-color: #f5f7fa !important;\r\n}\r\n/* 限制单元格高度 */\r\n.table-wrapper :deep(.el-table__row) td {\r\n  max-height: 100px;\r\n  overflow: hidden;\r\n}\r\n</style>"],"mappings":"AA2EA,SAAAA,WAAA,EAAAC,iBAAA,EAAAC,cAAA;AACA,SAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,aAAA;MACAC,OAAA;MACAC,IAAA;MACAC,KAAA;MACAC,IAAA;MACAC,QAAA;MACAC,OAAA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACA,GAAAZ,QAAA;MACAa,IAAA,EAAAC,KAAA,IAAAA,KAAA,CAAAD;IACA;IACAE,aAAA;MACA,YAAAF,IAAA,SAAAA,IAAA,CAAAG,IAAA;IACA;EACA;EACAC,QAAA;IACAC,OAAA,CAAAC,GAAA;EACA;EACAC,QAAA;IACAF,OAAA,CAAAC,GAAA;IACA,KAAAE,YAAA;EACA;EACAC,OAAA;IACA;;IAEA;IACAC,eAAAC,UAAA;MACA;MACA,IAAAA,UAAA,CAAAC,WAAA,GAAAC,QAAA,oBACAF,UAAA,CAAAC,WAAA,GAAAC,QAAA,YACAF,UAAA,CAAAC,WAAA,GAAAC,QAAA;QACA;MACA,WAAAF,UAAA,CAAAC,WAAA,GAAAC,QAAA;QACA;MACA,WAAAF,UAAA,CAAAC,WAAA,GAAAC,QAAA,YACAF,UAAA,CAAAC,WAAA,GAAAC,QAAA,YACAF,UAAA,CAAAC,WAAA,GAAAC,QAAA,eACAF,UAAA,CAAAC,WAAA,GAAAC,QAAA;QACA;MACA,WAAAF,UAAA,CAAAC,WAAA,GAAAC,QAAA,YACAF,UAAA,CAAAC,WAAA,GAAAC,QAAA;QACA;MACA,WAAAF,UAAA,CAAAC,WAAA,GAAAC,QAAA,mBACAF,UAAA,CAAAC,WAAA,GAAAC,QAAA;QACA;MACA;QACA;MACA;IACA;IAEA;IACAC,WAAAC,GAAA,EAAAC,MAAA,EAAAC,SAAA;MACA,IAAAA,SAAA,aAAAA,SAAA,KAAAC,SAAA;QACA;MACA;;MAEA;MACA,IAAAF,MAAA,CAAAG,QAAA,CAAAP,WAAA,GAAAC,QAAA,oBACAG,MAAA,CAAAG,QAAA,CAAAP,WAAA,GAAAC,QAAA;QACA,WAAAI,SAAA,iBAAAA,SAAA,CAAAG,MAAA;UACA,OAAAH,SAAA,CAAAI,SAAA;QACA;MACA;;MAEA;MACA,KAAAL,MAAA,CAAAG,QAAA,CAAAP,WAAA,GAAAC,QAAA,YACAG,MAAA,CAAAG,QAAA,CAAAP,WAAA,GAAAC,QAAA,aACA,CAAAS,KAAA,CAAAC,IAAA,CAAAC,KAAA,CAAAP,SAAA;QACA,WAAAM,IAAA,CAAAN,SAAA,EAAAQ,cAAA;MACA;MAEA,OAAAR,SAAA;IACA;IAEA;IACAS,UAAA;MAAAX,GAAA;MAAAC,MAAA;MAAAW,QAAA;MAAAC;IAAA;MACA,MAAAC,KAAA;QACAC,OAAA;QACAC,SAAA;QACAC,QAAA;QACAC,YAAA;QACAC,UAAA;QACAC,SAAA;MACA;;MAEA;MACA,IAAAnB,MAAA,CAAAG,QAAA,CAAAP,WAAA,GAAAC,QAAA,oBACAG,MAAA,CAAAG,QAAA,CAAAP,WAAA,GAAAC,QAAA;QACAgB,KAAA,CAAAE,SAAA;QACAF,KAAA,CAAAO,QAAA;MACA;MAEA,OAAAP,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}