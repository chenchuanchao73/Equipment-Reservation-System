{"ast":null,"code":"import router from './index';\nimport store from '@/store';\nimport { Message } from 'element-ui';\nimport NProgress from 'nprogress';\nimport 'nprogress/nprogress.css';\n\n// 配置NProgress\nNProgress.configure({\n  showSpinner: false\n});\n\n// 白名单路由（不需要登录即可访问）\nconst whiteList = ['/', '/equipment', '/equipment/:id', '/reservation/query', '/reservation/:code', '/admin/login', '/404'];\n\n// 路由前置守卫\nrouter.beforeEach((to, from, next) => {\n  // 开始进度条\n  NProgress.start();\n\n  // 设置页面标题\n  document.title = to.meta.title ? `${to.meta.title} - HTNIA设备预定系统` : 'HTNIA设备预定系统';\n\n  // 获取用户登录状态\n  const hasToken = store.getters.isLoggedIn;\n\n  // 判断是否需要登录权限\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth);\n\n  // 如果是登录页面且已登录，直接跳转到首页\n  if (to.path === '/admin/login' && hasToken) {\n    next('/admin/dashboard');\n    NProgress.done();\n    return;\n  }\n\n  // 如果需要登录权限但未登录，跳转到登录页\n  if (requiresAuth && !hasToken) {\n    next(`/admin/login?redirect=${to.path}`);\n    NProgress.done();\n    return;\n  }\n\n  // 其他情况直接放行\n  next();\n});\n\n// 路由后置守卫\nrouter.afterEach(() => {\n  // 结束进度条\n  NProgress.done();\n});\nexport default router;","map":{"version":3,"names":["router","store","Message","NProgress","configure","showSpinner","whiteList","beforeEach","to","from","next","start","document","title","meta","hasToken","getters","isLoggedIn","requiresAuth","matched","some","record","path","done","afterEach"],"sources":["D:/Python Projects/equipment-reservation-system/frontend/src/router/permission.js"],"sourcesContent":["import router from './index'\nimport store from '@/store'\nimport { Message } from 'element-ui'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\n// 配置NProgress\nNProgress.configure({ showSpinner: false })\n\n// 白名单路由（不需要登录即可访问）\nconst whiteList = [\n  '/',\n  '/equipment',\n  '/equipment/:id',\n  '/reservation/query',\n  '/reservation/:code',\n  '/admin/login',\n  '/404'\n]\n\n// 路由前置守卫\nrouter.beforeEach((to, from, next) => {\n  // 开始进度条\n  NProgress.start()\n\n  // 设置页面标题\n  document.title = to.meta.title ? `${to.meta.title} - HTNIA设备预定系统` : 'HTNIA设备预定系统'\n\n  // 获取用户登录状态\n  const hasToken = store.getters.isLoggedIn\n\n  // 判断是否需要登录权限\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth)\n\n  // 如果是登录页面且已登录，直接跳转到首页\n  if (to.path === '/admin/login' && hasToken) {\n    next('/admin/dashboard')\n    NProgress.done()\n    return\n  }\n\n  // 如果需要登录权限但未登录，跳转到登录页\n  if (requiresAuth && !hasToken) {\n    next(`/admin/login?redirect=${to.path}`)\n    NProgress.done()\n    return\n  }\n\n  // 其他情况直接放行\n  next()\n})\n\n// 路由后置守卫\nrouter.afterEach(() => {\n  // 结束进度条\n  NProgress.done()\n})\n\nexport default router\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,SAAS;AAC5B,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,OAAO,QAAQ,YAAY;AACpC,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAO,yBAAyB;;AAEhC;AACAA,SAAS,CAACC,SAAS,CAAC;EAAEC,WAAW,EAAE;AAAM,CAAC,CAAC;;AAE3C;AACA,MAAMC,SAAS,GAAG,CAChB,GAAG,EACH,YAAY,EACZ,gBAAgB,EAChB,oBAAoB,EACpB,oBAAoB,EACpB,cAAc,EACd,MAAM,CACP;;AAED;AACAN,MAAM,CAACO,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC;EACAP,SAAS,CAACQ,KAAK,CAAC,CAAC;;EAEjB;EACAC,QAAQ,CAACC,KAAK,GAAGL,EAAE,CAACM,IAAI,CAACD,KAAK,GAAG,GAAGL,EAAE,CAACM,IAAI,CAACD,KAAK,gBAAgB,GAAG,aAAa;;EAEjF;EACA,MAAME,QAAQ,GAAGd,KAAK,CAACe,OAAO,CAACC,UAAU;;EAEzC;EACA,MAAMC,YAAY,GAAGV,EAAE,CAACW,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACP,IAAI,CAACI,YAAY,CAAC;;EAExE;EACA,IAAIV,EAAE,CAACc,IAAI,KAAK,cAAc,IAAIP,QAAQ,EAAE;IAC1CL,IAAI,CAAC,kBAAkB,CAAC;IACxBP,SAAS,CAACoB,IAAI,CAAC,CAAC;IAChB;EACF;;EAEA;EACA,IAAIL,YAAY,IAAI,CAACH,QAAQ,EAAE;IAC7BL,IAAI,CAAC,yBAAyBF,EAAE,CAACc,IAAI,EAAE,CAAC;IACxCnB,SAAS,CAACoB,IAAI,CAAC,CAAC;IAChB;EACF;;EAEA;EACAb,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;;AAEF;AACAV,MAAM,CAACwB,SAAS,CAAC,MAAM;EACrB;EACArB,SAAS,CAACoB,IAAI,CAAC,CAAC;AAClB,CAAC,CAAC;AAEF,eAAevB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}