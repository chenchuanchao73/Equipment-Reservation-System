{"ast":null,"code":"import Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\nimport VueI18n from 'vue-i18n';\nimport axios from 'axios';\nimport enLocale from 'element-ui/lib/locale/lang/en';\nimport zhLocale from 'element-ui/lib/locale/lang/zh-CN';\n\n// 导入权限控制\nimport './router/permission';\n\n// 导入富文本编辑器\n// 暂时注释掉富文本编辑器相关代码\n// import VueQuillEditor from 'vue-quill-editor'\n// import 'quill/dist/quill.core.css'\n// import 'quill/dist/quill.snow.css'\n// import 'quill/dist/quill.bubble.css'\n\n// 导入语言包\nimport zhCN from './locales/zh-CN';\nimport en from './locales/en';\n\n// 使用插件\nVue.use(VueI18n);\n// Vue.use(VueQuillEditor) // 暂时注释掉\n\n// 配置axios\n// 动态获取API基础URL\nconst getApiBaseUrl = () => {\n  // 如果环境变量中有设置，则使用环境变量\n  if (process.env.VUE_APP_API_URL) {\n    return process.env.VUE_APP_API_URL;\n  }\n\n  // 否则，根据当前页面的主机名动态构建API URL\n  const currentHost = window.location.hostname;\n  // 如果是localhost或127.0.0.1，使用localhost:8000\n  if (currentHost === 'localhost' || currentHost === '127.0.0.1') {\n    return 'http://localhost:8000';\n  }\n  // 否则，使用当前主机名但端口改为8000\n  return `http://${currentHost}:8000`;\n};\n\n// 设置axios基础URL\naxios.defaults.baseURL = getApiBaseUrl();\n// 增加超时时间到 30 秒\naxios.defaults.timeout = 30000;\n// 添加调试日志\nconsole.log('API Base URL:', axios.defaults.baseURL);\naxios.interceptors.request.use(config => {\n  // 从localStorage获取token\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response) {\n    // 处理401错误（会话过期）\n    if (error.response.status === 401) {\n      // 显示友好的提示信息\n      Vue.prototype.$message({\n        message: '您的会话已过期，请重新登录',\n        type: 'warning',\n        duration: 3000\n      });\n      store.dispatch('logout');\n      // 避免重复导航到登录页\n      if (router.currentRoute.path !== '/admin/login') {\n        router.push('/admin/login');\n      }\n    }\n  }\n  return Promise.reject(error);\n});\nVue.prototype.$http = axios;\n\n// 配置i18n\nconst i18n = new VueI18n({\n  locale: store.state.language || 'zh-CN',\n  messages: {\n    'zh-CN': {\n      ...zhCN,\n      el: zhLocale.el\n    },\n    'en': {\n      ...en,\n      el: enLocale.el\n    }\n  },\n  silentTranslationWarn: true\n});\n\n// 同步语言设置\nstore.watch(state => state.language, newLang => {\n  i18n.locale = newLang;\n  document.querySelector('html').setAttribute('lang', newLang);\n  console.log('Language changed to:', newLang);\n});\n\n// 使用Element UI\nVue.use(ElementUI, {\n  i18n: (key, value) => i18n.t(key, value)\n});\n\n// 导入日期工具函数\nimport { formatDate, convertToBeijingTime } from './utils/date';\n\n// 全局过滤器\nVue.filter('dateFormat', function (value, format = 'YYYY-MM-DD HH:mm') {\n  if (!value) return '';\n\n  // 使用日期工具函数，自动转换为北京时间\n  return formatDate(value, format, true);\n});\nVue.config.productionTip = false;\nnew Vue({\n  router,\n  store,\n  i18n,\n  render: h => h(App)\n}).$mount('#app');","map":{"version":3,"names":["Vue","App","router","store","ElementUI","VueI18n","axios","enLocale","zhLocale","zhCN","en","use","getApiBaseUrl","process","env","VUE_APP_API_URL","currentHost","window","location","hostname","defaults","baseURL","timeout","console","log","interceptors","request","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","status","prototype","$message","message","type","duration","dispatch","currentRoute","path","push","$http","i18n","locale","state","language","messages","el","silentTranslationWarn","watch","newLang","document","querySelector","setAttribute","key","value","t","formatDate","convertToBeijingTime","filter","format","productionTip","render","h","$mount"],"sources":["D:/Equipment-Reservation-System-main/frontend/src/main.js"],"sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\nimport VueI18n from 'vue-i18n'\nimport axios from 'axios'\nimport enLocale from 'element-ui/lib/locale/lang/en'\nimport zhLocale from 'element-ui/lib/locale/lang/zh-CN'\n\n\n// 导入权限控制\nimport './router/permission'\n\n// 导入富文本编辑器\n// 暂时注释掉富文本编辑器相关代码\n// import VueQuillEditor from 'vue-quill-editor'\n// import 'quill/dist/quill.core.css'\n// import 'quill/dist/quill.snow.css'\n// import 'quill/dist/quill.bubble.css'\n\n// 导入语言包\nimport zhCN from './locales/zh-CN'\nimport en from './locales/en'\n\n// 使用插件\nVue.use(VueI18n)\n// Vue.use(VueQuillEditor) // 暂时注释掉\n\n// 配置axios\n// 动态获取API基础URL\nconst getApiBaseUrl = () => {\n  // 如果环境变量中有设置，则使用环境变量\n  if (process.env.VUE_APP_API_URL) {\n    return process.env.VUE_APP_API_URL\n  }\n\n  // 否则，根据当前页面的主机名动态构建API URL\n  const currentHost = window.location.hostname\n  // 如果是localhost或127.0.0.1，使用localhost:8000\n  if (currentHost === 'localhost' || currentHost === '127.0.0.1') {\n    return 'http://localhost:8000'\n  }\n  // 否则，使用当前主机名但端口改为8000\n  return `http://${currentHost}:8000`\n}\n\n// 设置axios基础URL\naxios.defaults.baseURL = getApiBaseUrl()\n// 增加超时时间到 30 秒\naxios.defaults.timeout = 30000\n// 添加调试日志\nconsole.log('API Base URL:', axios.defaults.baseURL)\naxios.interceptors.request.use(config => {\n  // 从localStorage获取token\n  const token = localStorage.getItem('token')\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`\n  }\n  return config\n}, error => {\n  return Promise.reject(error)\n})\n\naxios.interceptors.response.use(response => {\n  return response\n}, error => {\n  if (error.response) {\n    // 处理401错误（会话过期）\n    if (error.response.status === 401) {\n      // 显示友好的提示信息\n      Vue.prototype.$message({\n        message: '您的会话已过期，请重新登录',\n        type: 'warning',\n        duration: 3000\n      })\n\n      store.dispatch('logout')\n      // 避免重复导航到登录页\n      if (router.currentRoute.path !== '/admin/login') {\n        router.push('/admin/login')\n      }\n    }\n  }\n  return Promise.reject(error)\n})\n\nVue.prototype.$http = axios\n\n// 配置i18n\nconst i18n = new VueI18n({\n  locale: store.state.language || 'zh-CN',\n  messages: {\n    'zh-CN': {\n      ...zhCN,\n      el: zhLocale.el\n    },\n    'en': {\n      ...en,\n      el: enLocale.el\n    }\n  },\n  silentTranslationWarn: true\n})\n\n// 同步语言设置\nstore.watch(\n  state => state.language,\n  (newLang) => {\n    i18n.locale = newLang\n    document.querySelector('html').setAttribute('lang', newLang)\n    console.log('Language changed to:', newLang)\n  }\n)\n\n// 使用Element UI\nVue.use(ElementUI, {\n  i18n: (key, value) => i18n.t(key, value)\n})\n\n// 导入日期工具函数\nimport { formatDate, convertToBeijingTime } from './utils/date'\n\n// 全局过滤器\nVue.filter('dateFormat', function(value, format = 'YYYY-MM-DD HH:mm') {\n  if (!value) return ''\n\n  // 使用日期工具函数，自动转换为北京时间\n  return formatDate(value, format, true)\n})\n\nVue.config.productionTip = false\n\nnew Vue({\n  router,\n  store,\n  i18n,\n  render: h => h(App)\n}).$mount('#app')\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}