{"ast":null,"code":"import { mapGetters } from 'vuex';\nimport { categoryApi } from '@/api';\nexport default {\n  name: 'AdminCategory',\n  data() {\n    return {\n      loading: false,\n      submitting: false,\n      categories: [],\n      total: 0,\n      currentPage: 1,\n      pageSize: 10,\n      filter: {\n        search: ''\n      },\n      dialogVisible: false,\n      dialogType: 'add',\n      // 'add' or 'edit'\n      form: {\n        id: null,\n        name: '',\n        description: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入类别名称',\n          trigger: 'blur'\n        }, {\n          min: 1,\n          max: 50,\n          message: '长度在 1 到 50 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    ...mapGetters(['getToken'])\n  },\n  created() {\n    this.fetchData();\n  },\n  methods: {\n    // 获取类别列表\n    async fetchData() {\n      try {\n        this.loading = true;\n        const params = {\n          skip: (this.currentPage - 1) * this.pageSize,\n          limit: this.pageSize,\n          search: this.filter.search || undefined\n        };\n        const response = await categoryApi.getCategories(params);\n        this.categories = response.data.items;\n        this.total = response.data.total;\n      } catch (error) {\n        console.error('获取类别列表失败:', error);\n        this.$message.error('获取类别列表失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 处理筛选条件变化\n    handleFilterChange() {\n      this.currentPage = 1;\n      this.fetchData();\n    },\n    // 处理页码变化\n    handlePageChange(page) {\n      this.currentPage = page;\n      this.fetchData();\n    },\n    // 添加类别\n    handleAdd() {\n      this.dialogType = 'add';\n      this.form = {\n        id: null,\n        name: '',\n        description: ''\n      };\n      this.dialogVisible = true;\n    },\n    // 编辑类别\n    handleEdit(row) {\n      this.dialogType = 'edit';\n      this.form = {\n        ...row\n      };\n      this.dialogVisible = true;\n    },\n    // 删除类别\n    handleDelete(row) {\n      this.$confirm('确定要删除该类别吗？删除后不可恢复，且可能影响已使用该类别的设备。', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          this.loading = true;\n          await categoryApi.deleteCategory(row.id);\n          this.$message.success('类别已删除');\n          this.fetchData();\n        } catch (error) {\n          console.error('删除类别失败:', error);\n          this.$message.error('删除类别失败');\n        } finally {\n          this.loading = false;\n        }\n      }).catch(() => {\n        // 取消删除，不做任何处理\n      });\n    },\n    // 提交表单\n    submitForm() {\n      this.$refs.form.validate(async valid => {\n        if (!valid) return;\n        try {\n          this.submitting = true;\n          if (this.dialogType === 'add') {\n            // 创建类别\n            await categoryApi.createCategory(this.form);\n            this.$message.success('类别添加成功');\n          } else {\n            // 更新类别\n            await categoryApi.updateCategory(this.form.id, this.form);\n            this.$message.success('类别更新成功');\n          }\n          this.dialogVisible = false;\n          this.fetchData();\n        } catch (error) {\n          console.error('保存类别失败:', error);\n          if (error.response && error.response.data && error.response.data.detail) {\n            this.$message.error(error.response.data.detail);\n          } else {\n            this.$message.error('保存类别失败');\n          }\n        } finally {\n          this.submitting = false;\n        }\n      });\n    },\n    // 重置表单\n    resetForm() {\n      if (this.$refs.form) {\n        this.$refs.form.resetFields();\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}