{"ast":null,"code":"import axios from 'axios';\nimport store from '@/store';\nimport router from '@/router';\nimport { Message } from 'element-ui';\n\n// 创建axios实例\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_API_URL || '',\n  timeout: 10000\n});\n\n// 请求拦截器\nservice.interceptors.request.use(config => {\n  // 从localStorage获取token\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  console.error('Response error:', error);\n  if (error.response) {\n    const {\n      status,\n      data\n    } = error.response;\n\n    // 处理不同的错误状态码\n    switch (status) {\n      case 400:\n        Message.error(data.detail || '请求参数错误');\n        break;\n      case 401:\n        Message.warning('您的会话已过期，请重新登录');\n        store.dispatch('logout');\n        router.push('/admin/login');\n        break;\n      case 403:\n        Message.error('没有权限访问该资源');\n        break;\n      case 404:\n        Message.error('请求的资源不存在');\n        break;\n      case 500:\n        Message.error('服务器内部错误');\n        break;\n      default:\n        Message.error(`请求失败: ${error.message}`);\n    }\n  } else {\n    Message.error('网络错误，请检查您的网络连接');\n  }\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","store","router","Message","service","create","baseURL","process","env","VUE_APP_API_URL","timeout","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","console","Promise","reject","response","data","status","detail","warning","dispatch","push","message"],"sources":["D:/Equipment-Reservation-System-main/frontend/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\nimport store from '@/store'\nimport router from '@/router'\nimport { Message } from 'element-ui'\n\n// 创建axios实例\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_API_URL || '',\n  timeout: 10000\n})\n\n// 请求拦截器\nservice.interceptors.request.use(\n  config => {\n    // 从localStorage获取token\n    const token = localStorage.getItem('token')\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`\n    }\n    return config\n  },\n  error => {\n    console.error('Request error:', error)\n    return Promise.reject(error)\n  }\n)\n\n// 响应拦截器\nservice.interceptors.response.use(\n  response => {\n    return response.data\n  },\n  error => {\n    console.error('Response error:', error)\n\n    if (error.response) {\n      const { status, data } = error.response\n\n      // 处理不同的错误状态码\n      switch (status) {\n        case 400:\n          Message.error(data.detail || '请求参数错误')\n          break\n        case 401:\n          Message.warning('您的会话已过期，请重新登录')\n          store.dispatch('logout')\n          router.push('/admin/login')\n          break\n        case 403:\n          Message.error('没有权限访问该资源')\n          break\n        case 404:\n          Message.error('请求的资源不存在')\n          break\n        case 500:\n          Message.error('服务器内部错误')\n          break\n        default:\n          Message.error(`请求失败: ${error.message}`)\n      }\n    } else {\n      Message.error('网络错误，请检查您的网络连接')\n    }\n\n    return Promise.reject(error)\n  }\n)\n\nexport default service\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,OAAO,QAAQ,YAAY;;AAEpC;AACA,MAAMC,OAAO,GAAGJ,KAAK,CAACK,MAAM,CAAC;EAC3BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,eAAe,IAAI,EAAE;EAC1CC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAN,OAAO,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAI;EACR;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACDM,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAhB,OAAO,CAACO,YAAY,CAACa,QAAQ,CAACX,GAAG,CAC/BW,QAAQ,IAAI;EACV,OAAOA,QAAQ,CAACC,IAAI;AACtB,CAAC,EACDL,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;EAEvC,IAAIA,KAAK,CAACI,QAAQ,EAAE;IAClB,MAAM;MAAEE,MAAM;MAAED;IAAK,CAAC,GAAGL,KAAK,CAACI,QAAQ;;IAEvC;IACA,QAAQE,MAAM;MACZ,KAAK,GAAG;QACNvB,OAAO,CAACiB,KAAK,CAACK,IAAI,CAACE,MAAM,IAAI,QAAQ,CAAC;QACtC;MACF,KAAK,GAAG;QACNxB,OAAO,CAACyB,OAAO,CAAC,eAAe,CAAC;QAChC3B,KAAK,CAAC4B,QAAQ,CAAC,QAAQ,CAAC;QACxB3B,MAAM,CAAC4B,IAAI,CAAC,cAAc,CAAC;QAC3B;MACF,KAAK,GAAG;QACN3B,OAAO,CAACiB,KAAK,CAAC,WAAW,CAAC;QAC1B;MACF,KAAK,GAAG;QACNjB,OAAO,CAACiB,KAAK,CAAC,UAAU,CAAC;QACzB;MACF,KAAK,GAAG;QACNjB,OAAO,CAACiB,KAAK,CAAC,SAAS,CAAC;QACxB;MACF;QACEjB,OAAO,CAACiB,KAAK,CAAC,SAASA,KAAK,CAACW,OAAO,EAAE,CAAC;IAC3C;EACF,CAAC,MAAM;IACL5B,OAAO,CAACiB,KAAK,CAAC,gBAAgB,CAAC;EACjC;EAEA,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAehB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}