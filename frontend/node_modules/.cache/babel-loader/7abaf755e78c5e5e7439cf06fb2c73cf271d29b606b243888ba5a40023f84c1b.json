{"ast":null,"code":"import { reservationApi } from '@/api';\nimport { formatDate } from '@/utils/date';\nexport default {\n  name: 'ReservationDetail',\n  props: {\n    isAdmin: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      loading: true,\n      reservation: null,\n      cancelDialogVisible: false,\n      cancelling: false\n    };\n  },\n  computed: {\n    // 是否可以取消预定\n    canCancel() {\n      if (!this.reservation) return false;\n\n      // 只有确认状态的预定可以取消\n      return this.reservation.status === 'confirmed';\n    }\n  },\n  created() {\n    this.fetchReservation();\n  },\n  methods: {\n    // 获取预定详情\n    async fetchReservation() {\n      this.loading = true;\n      try {\n        const code = this.$route.params.code;\n        let response;\n        if (this.isAdmin) {\n          // 管理员查询\n          response = await reservationApi.getReservation(code);\n        } else {\n          // 用户查询\n          response = await reservationApi.getReservationByCode(code);\n        }\n        if (response.data.success) {\n          this.reservation = response.data.data;\n        } else {\n          this.$message.error(response.data.message || this.$t('reservation.notFound'));\n          this.reservation = null;\n        }\n      } catch (error) {\n        console.error('Failed to fetch reservation:', error);\n        this.$message.error(this.$t('common.error'));\n        this.reservation = null;\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 返回上一页\n    goBack() {\n      if (this.$route.query.from === 'admin') {\n        this.$router.push('/admin/reservations');\n      } else if (this.$route.query.from === 'query') {\n        this.$router.push('/reservation/query');\n      } else {\n        this.$router.go(-1);\n      }\n    },\n    // 格式化日期时间\n    formatDateTime(datetime) {\n      return formatDate(datetime);\n    },\n    // 获取状态类名\n    getStatusClass(status) {\n      const statusMap = {\n        confirmed: 'status-confirmed',\n        cancelled: 'status-cancelled',\n        completed: 'status-completed',\n        in_use: 'status-in-use',\n        expired: 'status-expired'\n      };\n      return statusMap[status] || 'status-unknown';\n    },\n    // 获取状态图标\n    getStatusIcon(status) {\n      const iconMap = {\n        confirmed: 'el-icon-check',\n        cancelled: 'el-icon-close',\n        completed: 'el-icon-success',\n        in_use: 'el-icon-time',\n        expired: 'el-icon-warning'\n      };\n      return iconMap[status] || 'el-icon-question';\n    },\n    // 获取状态文本\n    getStatusText(status) {\n      const statusMap = {\n        confirmed: this.$t('reservation.statusConfirmed'),\n        cancelled: this.$t('reservation.statusCancelled'),\n        completed: this.$t('reservation.statusCompleted'),\n        in_use: this.$t('reservation.statusInUse'),\n        expired: this.$t('reservation.statusExpired')\n      };\n      return statusMap[status] || this.$t('reservation.statusUnknown');\n    },\n    // 显示取消对话框\n    showCancelDialog() {\n      this.cancelDialogVisible = true;\n    },\n    // 取消预定\n    async cancelReservation() {\n      this.cancelling = true;\n      try {\n        const response = await reservationApi.cancelReservation(this.reservation.reservation_code, {\n          reservation_number: this.reservation.reservation_number\n        });\n        if (response.data.success) {\n          this.$message.success(this.$t('reservation.cancelSuccess'));\n          this.cancelDialogVisible = false;\n          // 重新获取预定信息\n          await this.fetchReservation();\n        } else {\n          this.$message.error(response.data.message || this.$t('reservation.cancelFailed'));\n        }\n      } catch (error) {\n        console.error('Failed to cancel reservation:', error);\n        this.$message.error(this.$t('reservation.cancelFailed'));\n      } finally {\n        this.cancelling = false;\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}