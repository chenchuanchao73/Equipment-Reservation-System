{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c('div', {\n    staticClass: \"admin-login\"\n  }, [_c('div', {\n    staticClass: \"login-container\"\n  }, [_c('div', {\n    staticClass: \"login-header\"\n  }, [_c('img', {\n    staticClass: \"login-logo\",\n    attrs: {\n      \"src\": require(\"@/assets/logo.png\"),\n      \"alt\": \"Logo\"\n    }\n  }), _c('h1', [_vm._v(_vm._s(_vm.$t('admin.login')))])]), _c('el-card', {\n    staticClass: \"login-card\",\n    attrs: {\n      \"shadow\": \"never\"\n    }\n  }, [_c('el-form', {\n    ref: \"loginForm\",\n    attrs: {\n      \"model\": _vm.loginForm,\n      \"rules\": _vm.loginRules,\n      \"label-position\": \"top\"\n    },\n    nativeOn: {\n      \"submit\": function ($event) {\n        $event.preventDefault();\n        return _vm.handleLogin.apply(null, arguments);\n      }\n    }\n  }, [_c('el-form-item', {\n    attrs: {\n      \"label\": _vm.$t('admin.username'),\n      \"prop\": \"username\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"prefix-icon\": \"el-icon-user\",\n      \"placeholder\": _vm.$t('admin.username')\n    },\n    model: {\n      value: _vm.loginForm.username,\n      callback: function ($$v) {\n        _vm.$set(_vm.loginForm, \"username\", $$v);\n      },\n      expression: \"loginForm.username\"\n    }\n  })], 1), _c('el-form-item', {\n    attrs: {\n      \"label\": _vm.$t('admin.password'),\n      \"prop\": \"password\"\n    }\n  }, [_c('el-input', {\n    attrs: {\n      \"prefix-icon\": \"el-icon-lock\",\n      \"type\": \"password\",\n      \"placeholder\": _vm.$t('admin.password'),\n      \"show-password\": \"\"\n    },\n    model: {\n      value: _vm.loginForm.password,\n      callback: function ($$v) {\n        _vm.$set(_vm.loginForm, \"password\", $$v);\n      },\n      expression: \"loginForm.password\"\n    }\n  })], 1), _c('el-form-item', [_c('el-button', {\n    staticStyle: {\n      \"width\": \"100%\"\n    },\n    attrs: {\n      \"type\": \"primary\",\n      \"native-type\": \"submit\",\n      \"loading\": _vm.loading\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t('admin.loginButton')) + \" \")])], 1), _c('div', {\n    staticClass: \"backend-status\"\n  }, [_c('span', [_vm._v(\"后端服务状态: \")]), _vm.backendStatus === 'online' ? _c('el-tag', {\n    attrs: {\n      \"type\": \"success\",\n      \"size\": \"small\"\n    }\n  }, [_vm._v(\"在线\")]) : _vm.backendStatus === 'partial' ? _c('el-tag', {\n    attrs: {\n      \"type\": \"warning\",\n      \"size\": \"small\"\n    }\n  }, [_vm._v(\"部分可用\")]) : _vm.backendStatus === 'offline' ? _c('el-tag', {\n    attrs: {\n      \"type\": \"danger\",\n      \"size\": \"small\"\n    }\n  }, [_vm._v(\"离线\")]) : _vm.backendStatus === 'error' ? _c('el-tag', {\n    attrs: {\n      \"type\": \"danger\",\n      \"size\": \"small\"\n    }\n  }, [_vm._v(\"错误\")]) : _vm.checkingBackend ? _c('el-tag', {\n    attrs: {\n      \"type\": \"info\",\n      \"size\": \"small\"\n    }\n  }, [_vm._v(\"检查中...\")]) : _c('el-tag', {\n    attrs: {\n      \"type\": \"info\",\n      \"size\": \"small\"\n    }\n  }, [_vm._v(\"未知\")]), _c('el-button', {\n    attrs: {\n      \"type\": \"text\",\n      \"size\": \"small\",\n      \"loading\": _vm.checkingBackend\n    },\n    on: {\n      \"click\": _vm.checkBackendConnection\n    }\n  }, [_vm._v(\"重新检查\")])], 1), _vm.backendStatus === 'offline' || _vm.backendStatus === 'error' ? _c('el-alert', {\n    attrs: {\n      \"title\": \"无法连接到后端服务\",\n      \"type\": \"error\",\n      \"description\": \"请确保后端服务已启动并运行在 http://localhost:8000\",\n      \"show-icon\": \"\",\n      \"closable\": false\n    }\n  }) : _vm._e()], 1)], 1), _c('div', {\n    staticClass: \"login-footer\"\n  }, [_c('el-button', {\n    attrs: {\n      \"type\": \"text\"\n    },\n    on: {\n      \"click\": function ($event) {\n        return _vm.$router.push('/');\n      }\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t('common.back')) + \" \" + _vm._s(_vm.$t('nav.home')) + \" \")])], 1)], 1)]);\n};\nvar staticRenderFns = [];\nexport { render, staticRenderFns };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}