{"ast":null,"code":"// import { Calendar } from '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport FullCalendar from '@fullcalendar/vue';\nimport { formatDate } from '@/utils/date';\nimport reservationApi from '@/api/reservation';\nexport default {\n  name: 'CalendarView',\n  components: {\n    FullCalendar\n  },\n  data() {\n    return {\n      calendarOptions: {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        initialView: 'dayGridMonth',\n        headerToolbar: false,\n        events: [],\n        eventClick: this.handleEventClick,\n        eventDidMount: this.handleEventDidMount,\n        datesSet: this.handleDatesSet,\n        locale: this.$i18n.locale === 'zh-CN' ? 'zh-cn' : 'en',\n        firstDay: 1,\n        allDaySlot: false,\n        slotMinTime: '00:00:00',\n        slotMaxTime: '24:00:00',\n        height: 'auto',\n        nowIndicator: true,\n        slotLabelFormat: {\n          hour: '2-digit',\n          minute: '2-digit',\n          hour12: false\n        },\n        slotEventOverlap: false,\n        eventTimeFormat: {\n          hour: '2-digit',\n          minute: '2-digit',\n          hour12: false\n        },\n        titleFormat: {\n          year: 'numeric',\n          month: 'long'\n        },\n        views: {\n          dayGridMonth: {\n            dayHeaderFormat: {\n              weekday: 'long'\n            },\n            fixedWeekCount: false,\n            showNonCurrentDates: false\n          },\n          timeGridWeek: {\n            dayHeaderFormat: {\n              weekday: 'long',\n              month: 'numeric',\n              day: 'numeric',\n              omitCommas: true\n            },\n            slotEventOverlap: false,\n            snapDuration: '00:15:00'\n          },\n          timeGridDay: {\n            dayHeaderFormat: {\n              weekday: 'long',\n              month: 'numeric',\n              day: 'numeric',\n              omitCommas: true\n            },\n            slotEventOverlap: false,\n            eventMaxStack: 4,\n            moreLinkClick: 'popover',\n            displayEventTime: true,\n            eventDisplay: 'block',\n            dayMaxEventRows: true,\n            dayMaxEvents: false,\n            eventTimeFormat: {\n              hour: '2-digit',\n              minute: '2-digit',\n              hour12: false\n            },\n            resourceAreaWidth: '0',\n            slotDuration: '00:30:00',\n            snapDuration: '00:15:00',\n            slotLabelFormat: {\n              hour: '2-digit',\n              minute: '2-digit',\n              hour12: false\n            },\n            allDayMaintainDuration: true,\n            nowIndicator: true,\n            slotEventOverlap: false\n          }\n        },\n        locales: {\n          'zh-cn': {\n            week: {\n              dow: 1,\n              doy: 4\n            },\n            buttonText: {\n              today: '今天',\n              month: '月',\n              week: '周',\n              day: '日'\n            },\n            weekText: '周',\n            allDayText: '全天',\n            moreLinkText: '更多',\n            noEventsText: '没有事件'\n          },\n          'en': {\n            week: {\n              dow: 1,\n              doy: 4\n            },\n            buttonText: {\n              today: 'Today',\n              month: 'Month',\n              week: 'Week',\n              day: 'Day'\n            },\n            weekText: 'W',\n            allDayText: 'All day',\n            moreLinkText: 'more',\n            noEventsText: 'No events'\n          }\n        }\n      },\n      detailVisible: false,\n      selectedEvent: null,\n      loading: false,\n      currentViewTitle: '',\n      cancelDialogVisible: false,\n      cancelling: false,\n      cancelForm: {\n        reservationCode: ''\n      },\n      cancelRules: {\n        reservationCode: [{\n          required: true,\n          message: this.$t('reservation.codeOrContactRequired'),\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted() {\n    this.loadEvents();\n  },\n  beforeDestroy() {\n    // 清除资源\n  },\n  watch: {\n    // 监听语言变化\n    '$i18n.locale': {\n      handler(newLocale) {\n        if (this.$refs.fullCalendar) {\n          const calendarApi = this.$refs.fullCalendar.getApi();\n          calendarApi.setOption('locale', newLocale === 'zh-CN' ? 'zh-cn' : 'en');\n          this.currentViewTitle = calendarApi.view.title;\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    // 加载预约数据\n    async loadEvents() {\n      this.loading = true;\n      try {\n        const calendarApi = this.$refs.fullCalendar.getApi();\n        const start = this.formatDate(calendarApi.view.activeStart);\n        const end = this.formatDate(calendarApi.view.activeEnd);\n        const response = await this.$http.get('/api/reservations/calendar', {\n          params: {\n            start_date: start,\n            end_date: end\n          }\n        });\n        if (response.data.success) {\n          calendarApi.removeAllEvents();\n          calendarApi.addEventSource(response.data.events);\n        } else {\n          this.$message.error(response.data.message || this.$t('calendar.loadFailed'));\n        }\n      } catch (error) {\n        console.error('Failed to load calendar events:', error);\n        this.$message.error(this.$t('calendar.loadFailed'));\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 处理日期范围变化\n    handleDatesSet() {\n      // 更新当前视图标题\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      this.currentViewTitle = calendarApi.view.title;\n\n      // 加载事件数据\n      this.loadEvents();\n    },\n    // 处理事件点击\n    handleEventClick(info) {\n      this.selectedEvent = info.event;\n      this.detailVisible = true;\n    },\n    // 处理事件挂载（修改事件的显示内容）\n    // handleEventDidMount(info) {\n    //   // 获取事件信息\n    //   const event = info.event;\n    //   const userName = event.extendedProps.userName || '';\n    //   const title = event.title || '';\n    //   const startStr = this.formatTime(event.start);\n    //   const endStr = this.formatTime(event.end);\n    //   const timeStr = `${startStr}-${endStr}`;\n    //   const status = event.extendedProps.status;\n    //   const isRecurring = event.extendedProps.isRecurring;\n\n    //   // 根据状态设置事件颜色（适用于所有视图）\n    //   if (status) {\n    //     if (status === 'confirmed') {\n    //       info.el.style.backgroundColor = 'rgba(103, 194, 58, 0.7)'; // 已确认 - 半透明绿色\n    //       info.el.style.borderColor = 'rgba(103, 194, 58, 0.9)';\n    //     } else if (status === 'in_use') {\n    //       info.el.style.backgroundColor = 'rgba(64, 158, 255, 0.7)'; // 使用中 - 半透明蓝色\n    //       info.el.style.borderColor = 'rgba(64, 158, 255, 0.9)';\n    //     }\n    //   }\n\n    //   // 添加鼠标悬停工具提示\n    //   this.addEventTooltip(info);\n\n    //   // 为循环预约添加标记 - 适用于所有视图\n    //   if (isRecurring) {\n    //     // 月视图的处理方式\n    //     if (info.view.type === 'dayGridMonth') {\n    //       const recurringIcon = document.createElement('span');\n    //       recurringIcon.className = 'recurring-icon';\n    //       recurringIcon.innerHTML = '<i class=\"el-icon-refresh-right\"></i>';\n    //       const titleEl = info.el.querySelector('.fc-event-title');\n    //       if (titleEl) {\n    //         titleEl.appendChild(recurringIcon);\n    //       }\n    //     }\n    //   }\n\n    //   // 在周视图和日视图中自定义事件内容\n    //   if (info.view.type === 'timeGridWeek' || info.view.type === 'timeGridDay') {\n    //     // 清除默认内容\n    //     const eventContent = info.el.querySelector('.fc-event-main');\n    //     if (eventContent) {\n    //       // 创建自定义内容\n    //       const customContent = document.createElement('div');\n    //       customContent.className = 'custom-event-content';\n\n    //       // 对于非常窄的事件容器，使用更紧凑的布局\n    //       const isNarrow = info.el.offsetWidth < 150;\n    //       if (isNarrow) {\n    //         customContent.classList.add('compact');\n\n    //         // 设备名称\n    //         const title = document.createElement('div');\n    //         title.className = 'event-title-inline';\n    //         title.textContent = info.event.title;\n    //         customContent.appendChild(title);\n\n    //         // 使用人\n    //         if (userName) {\n    //           const user = document.createElement('div');\n    //           user.className = 'event-user-inline';\n    //           user.textContent = userName;\n    //           customContent.appendChild(user);\n    //         }\n\n    //         // 时间\n    //         const time = document.createElement('div');\n    //         time.className = 'event-time-inline';\n    //         time.textContent = timeStr;\n    //         customContent.appendChild(time);\n    //       } else {\n    //         // 正常宽度布局 - 使用内联布局\n    //         const inlineContent = document.createElement('div');\n    //         inlineContent.className = 'inline-content';\n\n    //         // 设备名称\n    //         const titleSpan = document.createElement('span');\n    //         titleSpan.className = 'event-title-inline';\n    //         titleSpan.textContent = info.event.title;\n    //         inlineContent.appendChild(titleSpan);\n\n    //         // 分隔符\n    //         const separator1 = document.createElement('span');\n    //         separator1.className = 'event-separator';\n    //         separator1.textContent = ' · ';\n    //         inlineContent.appendChild(separator1);\n\n    //         // 使用人\n    //         const userSpan = document.createElement('span');\n    //         userSpan.className = 'event-user-inline';\n    //         userSpan.textContent = userName;\n    //         inlineContent.appendChild(userSpan);\n\n    //         // 分隔符\n    //         const separator2 = document.createElement('span');\n    //         separator2.className = 'event-separator';\n    //         separator2.textContent = ' · ';\n    //         inlineContent.appendChild(separator2);\n\n    //         // 时间\n    //         const timeSpan = document.createElement('span');\n    //         timeSpan.className = 'event-time-inline';\n    //         timeSpan.textContent = timeStr;\n    //         inlineContent.appendChild(timeSpan);\n\n    //         customContent.appendChild(inlineContent);\n    //       }\n\n    //       // 替换原有内容\n    //       eventContent.innerHTML = '';\n    //       eventContent.appendChild(customContent);\n\n    //       // 为循环预约添加图标\n    //       if (isRecurring) {\n    //         const recurringIcon = document.createElement('span');\n    //         recurringIcon.className = 'recurring-icon-timegrid';\n    //         recurringIcon.innerHTML = '<i class=\"el-icon-refresh-right\"></i>';\n    //         customContent.appendChild(recurringIcon);\n    //       }\n\n    //       // 日视图中添加额外处理，确保事件显示在正确的位置\n    //       if (info.view.type === 'timeGridDay') {\n    //         // 处理事件容器\n    //         const eventHarness = info.el.closest('.fc-timegrid-event-harness');\n    //         if (eventHarness) {\n    //           // 确保事件位置正确\n    //           eventHarness.style.zIndex = \"5\";\n    //         }\n    //       }\n    //     }\n    //   }\n\n    //   // 在月视图中修改时间格式为24小时制\n    //   if (info.view.type === 'dayGridMonth') {\n    //     const timeEl = info.el.querySelector('.fc-event-time');\n    //     if (timeEl && info.event.start) {\n    //       // 使用24小时制格式化时间\n    //       const formattedTime = info.event.start.toLocaleTimeString('zh-CN', {\n    //         hour: '2-digit',\n    //         minute: '2-digit',\n    //         hour12: false\n    //       });\n    //       timeEl.textContent = formattedTime;\n    //     }\n    //   }\n    // },\n\n    // 切换视图\n    changeView(viewName) {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.changeView(viewName);\n    },\n    // 跳转到今天\n    today() {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.today();\n    },\n    // 上一个时间段\n    prev() {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.prev();\n    },\n    // 下一个时间段\n    next() {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.next();\n    },\n    // 获取状态标签类型\n    getStatusTagType(status) {\n      const statusMap = {\n        'confirmed': 'success',\n        'in_use': 'primary',\n        'cancelled': 'info',\n        'expired': 'danger'\n      };\n      return statusMap[status] || 'info';\n    },\n    // 格式化日期\n    formatDate(date) {\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    },\n    // 格式化日期时间\n    formatDateTime(date) {\n      return formatDate(date, 'YYYY-MM-DD HH:mm');\n    },\n    // 格式化短时间（只显示小时和分钟）\n    formatShortTime(date) {\n      if (!date) return '';\n      return date.toLocaleTimeString('zh-CN', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false\n      });\n    },\n    // 获取状态文本\n    getStatusText(status) {\n      const statusMap = {\n        'confirmed': this.$t('reservation.confirmed'),\n        'in_use': this.$t('reservation.inUse'),\n        'cancelled': this.$t('reservation.cancelled'),\n        'expired': this.$t('reservation.expired')\n      };\n      return statusMap[status] || status;\n    },\n    // 添加事件工具提示\n    addEventTooltip(info) {\n      // 获取事件信息\n      const event = info.event;\n      const props = event.extendedProps;\n\n      // 计算事件持续时间（分钟）\n      const start = event.start;\n      const end = event.end;\n      const durationMs = end - start;\n      const durationMinutes = Math.round(durationMs / (1000 * 60));\n\n      // 获取当前视图类型\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      const viewType = calendarApi.view.type;\n\n      // 获取事件元素\n      const titleEl = info.el.querySelector('.fc-event-title');\n      const timeEl = info.el.querySelector('.fc-event-time');\n      const mainEl = info.el.querySelector('.fc-event-main');\n\n      // 根据视图类型处理事件显示\n      if (viewType === 'dayGridMonth') {\n        // 月视图：所有预约显示相同，显示设备名称+开始和结束时间\n        if (titleEl) {\n          // 提取完整设备名称（通常是前两个单词，如\"M2F Mic\"）\n          const titleParts = event.title.split(' ');\n          let deviceName = titleParts[0]; // 至少包含第一个单词\n\n          // 如果第二个单词是\"Mic\"或其他设备类型标识，也包含它\n          if (titleParts.length > 1 && (titleParts[1] === 'Mic' || titleParts[1] === 'Speaker' || titleParts[1].startsWith('Speaker'))) {\n            deviceName = `${titleParts[0]} ${titleParts[1]}`;\n          }\n\n          // 格式化时间\n          const startTime = this.formatShortTime(start);\n          const endTime = this.formatShortTime(end);\n\n          // 设置标题为\"设备名称 开始-结束\"\n          titleEl.textContent = `${deviceName}     ${startTime}-${endTime}`;\n\n          // 完全移除时间元素，防止重复显示时间\n          if (timeEl) {\n            timeEl.remove(); // 彻底移除时间元素，而不仅仅是隐藏\n          }\n        }\n      } else if (viewType === 'timeGridWeek' || viewType === 'timeGridDay') {\n        // 周视图和日视图：短时间预约特殊处理\n        if (durationMinutes <= 30) {\n          // 添加短时间预约的类\n          info.el.classList.add('very-short-duration-event');\n\n          // 只显示设备名称\n          if (titleEl) {\n            const deviceName = event.title.split(' ')[0];\n            titleEl.textContent = deviceName;\n          }\n\n          // 调整主容器样式\n          if (mainEl) {\n            mainEl.style.display = 'flex';\n            mainEl.style.alignItems = 'center';\n            mainEl.style.justifyContent = 'center';\n            mainEl.style.padding = '2px';\n\n            // 日视图和周视图的不同布局\n            if (viewType === 'timeGridDay') {\n              // 日视图：水平排列\n              mainEl.style.flexDirection = 'row';\n              if (timeEl) {\n                timeEl.style.marginRight = '4px';\n              }\n            } else {\n              // 周视图：垂直排列\n              mainEl.style.flexDirection = 'column';\n              if (timeEl) {\n                timeEl.style.marginBottom = '2px';\n              }\n            }\n          }\n\n          // 调整字体样式\n          if (titleEl) {\n            titleEl.style.fontWeight = 'bold';\n            titleEl.style.fontSize = '0.9em';\n          }\n          if (timeEl) {\n            timeEl.style.fontWeight = 'bold';\n            timeEl.style.fontSize = '0.9em';\n          }\n        }\n      }\n\n      // 设置title属性（原生浏览器工具提示）\n      const tooltipText = `${event.title}\\n${props.userName || ''}\\n${this.formatDateTime(start)} - ${this.formatDateTime(end)}\\n${this.getStatusText(props.status)}\\n${props.reservationNumber}`;\n      info.el.setAttribute('title', tooltipText);\n    },\n    // 显示取消预约对话框\n    showCancelDialog() {\n      this.cancelForm.reservationCode = '';\n      this.cancelDialogVisible = true;\n    },\n    // 取消预约\n    async cancelReservation() {\n      try {\n        // 验证表单\n        await this.$refs.cancelForm.validate();\n\n        // 检查输入的预约码是否与当前预约码匹配\n        if (this.cancelForm.reservationCode !== this.selectedEvent.extendedProps.reservationCode) {\n          this.$message.error(this.$t('reservation.checkCodeAndContact'));\n          return;\n        }\n        this.cancelling = true;\n\n        // 准备请求数据\n        const data = {\n          reservation_number: this.selectedEvent.extendedProps.reservationNumber || null,\n          lang: this.$i18n.locale\n        };\n\n        // 调用取消预约API\n        const response = await reservationApi.cancelReservation(this.selectedEvent.extendedProps.reservationCode, data);\n        if (response.data.success) {\n          this.$message.success(this.$t('reservation.cancelSuccess'));\n          this.cancelDialogVisible = false;\n\n          // 关闭预约详情弹窗\n          this.detailVisible = false;\n\n          // 重新加载日历事件\n          this.loadEvents();\n        } else {\n          this.$message.error(response.data.message || this.$t('reservation.cancelFailed'));\n        }\n      } catch (error) {\n        console.error('Failed to cancel reservation:', error);\n        this.$message.error(this.$t('error.serverError'));\n      } finally {\n        this.cancelling = false;\n      }\n    },\n    // 格式化时间为24小时制\n    formatTime(date) {\n      if (!date) return '';\n      return date.toLocaleTimeString('zh-CN', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false\n      });\n    }\n  }\n};","map":{"version":3,"names":["dayGridPlugin","timeGridPlugin","interactionPlugin","FullCalendar","formatDate","reservationApi","name","components","data","calendarOptions","plugins","initialView","headerToolbar","events","eventClick","handleEventClick","eventDidMount","handleEventDidMount","datesSet","handleDatesSet","locale","$i18n","firstDay","allDaySlot","slotMinTime","slotMaxTime","height","nowIndicator","slotLabelFormat","hour","minute","hour12","slotEventOverlap","eventTimeFormat","titleFormat","year","month","views","dayGridMonth","dayHeaderFormat","weekday","fixedWeekCount","showNonCurrentDates","timeGridWeek","day","omitCommas","snapDuration","timeGridDay","eventMaxStack","moreLinkClick","displayEventTime","eventDisplay","dayMaxEventRows","dayMaxEvents","resourceAreaWidth","slotDuration","allDayMaintainDuration","locales","week","dow","doy","buttonText","today","weekText","allDayText","moreLinkText","noEventsText","detailVisible","selectedEvent","loading","currentViewTitle","cancelDialogVisible","cancelling","cancelForm","reservationCode","cancelRules","required","message","$t","trigger","mounted","loadEvents","beforeDestroy","watch","handler","newLocale","$refs","fullCalendar","calendarApi","getApi","setOption","view","title","immediate","methods","start","activeStart","end","activeEnd","response","$http","get","params","start_date","end_date","success","removeAllEvents","addEventSource","$message","error","console","info","event","changeView","viewName","prev","next","getStatusTagType","status","statusMap","date","getFullYear","String","getMonth","padStart","getDate","formatDateTime","formatShortTime","toLocaleTimeString","getStatusText","addEventTooltip","props","extendedProps","durationMs","durationMinutes","Math","round","viewType","type","titleEl","el","querySelector","timeEl","mainEl","titleParts","split","deviceName","length","startsWith","startTime","endTime","textContent","remove","classList","add","style","display","alignItems","justifyContent","padding","flexDirection","marginRight","marginBottom","fontWeight","fontSize","tooltipText","userName","reservationNumber","setAttribute","showCancelDialog","cancelReservation","validate","reservation_number","lang","formatTime"],"sources":["src/views/calendar/CalendarView.vue"],"sourcesContent":["<template>\n  <div class=\"calendar-view\">\n    <div class=\"calendar-header\">\n      <el-row type=\"flex\" justify=\"space-between\" align=\"middle\">\n        <el-col :span=\"8\">\n          <h1>{{ $t('calendar.title') }}</h1>\n          <h2 class=\"calendar-current-date\">{{ currentViewTitle }}</h2>\n        </el-col>\n        <el-col :span=\"16\">\n          <div class=\"calendar-controls\">\n            <el-button-group>\n              <el-button size=\"small\" @click=\"changeView('dayGridMonth')\">{{ $t('calendar.month') }}</el-button>\n              <el-button size=\"small\" @click=\"changeView('timeGridWeek')\">{{ $t('calendar.week') }}</el-button>\n              <el-button size=\"small\" @click=\"changeView('timeGridDay')\">{{ $t('calendar.day') }}</el-button>\n            </el-button-group>\n            <el-button size=\"small\" @click=\"today\">{{ $t('calendar.today') }}</el-button>\n            <el-button-group>\n              <el-button size=\"small\" icon=\"el-icon-arrow-left\" @click=\"prev\"></el-button>\n              <el-button size=\"small\" icon=\"el-icon-arrow-right\" @click=\"next\"></el-button>\n            </el-button-group>\n          </div>\n        </el-col>\n      </el-row>\n    </div>\n\n    <FullCalendar\n      ref=\"fullCalendar\"\n      :options=\"calendarOptions\"\n    />\n\n    <!-- 预约详情弹窗 -->\n    <el-dialog :visible.sync=\"detailVisible\" width=\"400px\" :title=\"$t('calendar.reservationInfo')\">\n      <div v-if=\"selectedEvent\" class=\"event-detail-card\">\n        <div class=\"event-header\" :class=\"'status-' + selectedEvent.extendedProps.status\">\n          <h3>{{ selectedEvent.title }}</h3>\n          <el-tag size=\"small\" :type=\"getStatusTagType(selectedEvent.extendedProps.status)\">\n            {{ getStatusText(selectedEvent.extendedProps.status) }}\n          </el-tag>\n        </div>\n\n        <div class=\"event-info\">\n          <div class=\"info-item time-info\">\n            <i class=\"el-icon-time\"></i>\n            <span class=\"time-display\">{{ formatDateTime(selectedEvent.start) }} - {{ formatDateTime(selectedEvent.end) }}</span>\n          </div>\n\n          <div class=\"info-item\">\n            <i class=\"el-icon-user\"></i>\n            <span>{{ selectedEvent.extendedProps.userName }} ({{ selectedEvent.extendedProps.userDepartment }})</span>\n          </div>\n\n          <div class=\"info-item\" v-if=\"selectedEvent.extendedProps.userEmail\">\n            <i class=\"el-icon-message\"></i>\n            <span>{{ selectedEvent.extendedProps.userEmail }}</span>\n          </div>\n        </div>\n\n        <!-- 循环预约提示 -->\n        <div v-if=\"selectedEvent.extendedProps.isRecurring\" class=\"recurring-notice\">\n          <el-alert\n            :title=\"$t('reservation.partOfRecurringReservation')\"\n            type=\"info\"\n            :closable=\"false\">\n          </el-alert>\n        </div>\n\n        <!-- 取消预约/提前归还按钮 -->\n        <div class=\"action-buttons\">\n          <el-button\n            type=\"danger\"\n            @click=\"showCancelDialog\"\n          >\n            {{ selectedEvent.extendedProps.status === 'in_use' ? $t('reservation.earlyReturn') : $t('reservation.cancelReservation') }}\n          </el-button>\n        </div>\n      </div>\n    </el-dialog>\n\n    <!-- 取消预约/提前归还对话框 -->\n    <el-dialog\n      :title=\"selectedEvent && selectedEvent.extendedProps.status === 'in_use' ? $t('reservation.earlyReturn') : $t('reservation.cancelReservation')\"\n      :visible.sync=\"cancelDialogVisible\"\n      width=\"400px\"\n    >\n      <div class=\"cancel-content\">\n        <p>{{ selectedEvent && selectedEvent.extendedProps.status === 'in_use' ? $t('reservation.confirmEarlyReturn') : $t('reservation.confirmCancel') }}</p>\n\n        <el-form ref=\"cancelForm\" :model=\"cancelForm\" :rules=\"cancelRules\" label-position=\"top\">\n          <el-form-item :label=\"$t('reservation.code')\" prop=\"reservationCode\">\n            <el-input\n              v-model=\"cancelForm.reservationCode\"\n              :placeholder=\"$t('reservation.queryPlaceholder')\"\n            ></el-input>\n          </el-form-item>\n        </el-form>\n      </div>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"cancelDialogVisible = false\">{{ $t('common.cancel') }}</el-button>\n        <el-button type=\"danger\" :loading=\"cancelling\" @click=\"cancelReservation\">{{ $t('common.confirm') }}</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n// import { Calendar } from '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport FullCalendar from '@fullcalendar/vue';\nimport { formatDate } from '@/utils/date';\nimport reservationApi from '@/api/reservation';\n\nexport default {\n  name: 'CalendarView',\n  components: {\n    FullCalendar\n  },\n  data() {\n    return {\n      calendarOptions: {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        initialView: 'dayGridMonth',\n        headerToolbar: false,\n        events: [],\n        eventClick: this.handleEventClick,\n        eventDidMount: this.handleEventDidMount,\n        datesSet: this.handleDatesSet,\n        locale: this.$i18n.locale === 'zh-CN' ? 'zh-cn' : 'en',\n        firstDay: 1,\n        allDaySlot: false,\n        slotMinTime: '00:00:00',\n        slotMaxTime: '24:00:00',\n        height: 'auto',\n        nowIndicator: true,\n        slotLabelFormat: {\n          hour: '2-digit',\n          minute: '2-digit',\n          hour12: false\n        },\n        slotEventOverlap: false,\n        eventTimeFormat: {\n          hour: '2-digit',\n          minute: '2-digit',\n          hour12: false\n        },\n        titleFormat: { year: 'numeric', month: 'long' },\n        views: {\n          dayGridMonth: {\n            dayHeaderFormat: { weekday: 'long' },\n            fixedWeekCount: false,\n            showNonCurrentDates: false\n          },\n          timeGridWeek: {\n            dayHeaderFormat: { weekday: 'long', month: 'numeric', day: 'numeric', omitCommas: true },\n            slotEventOverlap: false,\n            snapDuration: '00:15:00'\n          },\n          timeGridDay: {\n            dayHeaderFormat: { weekday: 'long', month: 'numeric', day: 'numeric', omitCommas: true },\n            slotEventOverlap: false,\n            eventMaxStack: 4,\n            moreLinkClick: 'popover',\n            displayEventTime: true,\n            eventDisplay: 'block',\n            dayMaxEventRows: true,\n            dayMaxEvents: false,\n            eventTimeFormat: {\n              hour: '2-digit',\n              minute: '2-digit',\n              hour12: false\n            },\n            resourceAreaWidth: '0',\n            slotDuration: '00:30:00',\n            snapDuration: '00:15:00',\n            slotLabelFormat: {\n              hour: '2-digit',\n              minute: '2-digit',\n              hour12: false\n            },\n            allDayMaintainDuration: true,\n            nowIndicator: true,\n            slotEventOverlap: false\n          }\n        },\n        locales: {\n          'zh-cn': {\n            week: {\n              dow: 1,\n              doy: 4\n            },\n            buttonText: {\n              today: '今天',\n              month: '月',\n              week: '周',\n              day: '日'\n            },\n            weekText: '周',\n            allDayText: '全天',\n            moreLinkText: '更多',\n            noEventsText: '没有事件'\n          },\n          'en': {\n            week: {\n              dow: 1,\n              doy: 4\n            },\n            buttonText: {\n              today: 'Today',\n              month: 'Month',\n              week: 'Week',\n              day: 'Day'\n            },\n            weekText: 'W',\n            allDayText: 'All day',\n            moreLinkText: 'more',\n            noEventsText: 'No events'\n          }\n        }\n      },\n      detailVisible: false,\n      selectedEvent: null,\n      loading: false,\n      currentViewTitle: '',\n      cancelDialogVisible: false,\n      cancelling: false,\n      cancelForm: {\n        reservationCode: ''\n      },\n      cancelRules: {\n        reservationCode: [\n          { required: true, message: this.$t('reservation.codeOrContactRequired'), trigger: 'blur' }\n        ]\n      },\n    };\n  },\n  mounted() {\n    this.loadEvents();\n  },\n\n  beforeDestroy() {\n    // 清除资源\n  },\n  watch: {\n    // 监听语言变化\n    '$i18n.locale': {\n      handler(newLocale) {\n        if (this.$refs.fullCalendar) {\n          const calendarApi = this.$refs.fullCalendar.getApi();\n          calendarApi.setOption('locale', newLocale === 'zh-CN' ? 'zh-cn' : 'en');\n          this.currentViewTitle = calendarApi.view.title;\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    // 加载预约数据\n    async loadEvents() {\n      this.loading = true;\n      try {\n        const calendarApi = this.$refs.fullCalendar.getApi();\n        const start = this.formatDate(calendarApi.view.activeStart);\n        const end = this.formatDate(calendarApi.view.activeEnd);\n\n        const response = await this.$http.get('/api/reservations/calendar', {\n          params: {\n            start_date: start,\n            end_date: end\n          }\n        });\n\n        if (response.data.success) {\n          calendarApi.removeAllEvents();\n          calendarApi.addEventSource(response.data.events);\n        } else {\n          this.$message.error(response.data.message || this.$t('calendar.loadFailed'));\n        }\n      } catch (error) {\n        console.error('Failed to load calendar events:', error);\n        this.$message.error(this.$t('calendar.loadFailed'));\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    // 处理日期范围变化\n    handleDatesSet() {\n      // 更新当前视图标题\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      this.currentViewTitle = calendarApi.view.title;\n\n      // 加载事件数据\n      this.loadEvents();\n    },\n\n    // 处理事件点击\n    handleEventClick(info) {\n      this.selectedEvent = info.event;\n      this.detailVisible = true;\n    },\n\n    // 处理事件挂载（修改事件的显示内容）\n    // handleEventDidMount(info) {\n    //   // 获取事件信息\n    //   const event = info.event;\n    //   const userName = event.extendedProps.userName || '';\n    //   const title = event.title || '';\n    //   const startStr = this.formatTime(event.start);\n    //   const endStr = this.formatTime(event.end);\n    //   const timeStr = `${startStr}-${endStr}`;\n    //   const status = event.extendedProps.status;\n    //   const isRecurring = event.extendedProps.isRecurring;\n\n    //   // 根据状态设置事件颜色（适用于所有视图）\n    //   if (status) {\n    //     if (status === 'confirmed') {\n    //       info.el.style.backgroundColor = 'rgba(103, 194, 58, 0.7)'; // 已确认 - 半透明绿色\n    //       info.el.style.borderColor = 'rgba(103, 194, 58, 0.9)';\n    //     } else if (status === 'in_use') {\n    //       info.el.style.backgroundColor = 'rgba(64, 158, 255, 0.7)'; // 使用中 - 半透明蓝色\n    //       info.el.style.borderColor = 'rgba(64, 158, 255, 0.9)';\n    //     }\n    //   }\n\n    //   // 添加鼠标悬停工具提示\n    //   this.addEventTooltip(info);\n\n    //   // 为循环预约添加标记 - 适用于所有视图\n    //   if (isRecurring) {\n    //     // 月视图的处理方式\n    //     if (info.view.type === 'dayGridMonth') {\n    //       const recurringIcon = document.createElement('span');\n    //       recurringIcon.className = 'recurring-icon';\n    //       recurringIcon.innerHTML = '<i class=\"el-icon-refresh-right\"></i>';\n    //       const titleEl = info.el.querySelector('.fc-event-title');\n    //       if (titleEl) {\n    //         titleEl.appendChild(recurringIcon);\n    //       }\n    //     }\n    //   }\n\n    //   // 在周视图和日视图中自定义事件内容\n    //   if (info.view.type === 'timeGridWeek' || info.view.type === 'timeGridDay') {\n    //     // 清除默认内容\n    //     const eventContent = info.el.querySelector('.fc-event-main');\n    //     if (eventContent) {\n    //       // 创建自定义内容\n    //       const customContent = document.createElement('div');\n    //       customContent.className = 'custom-event-content';\n\n    //       // 对于非常窄的事件容器，使用更紧凑的布局\n    //       const isNarrow = info.el.offsetWidth < 150;\n    //       if (isNarrow) {\n    //         customContent.classList.add('compact');\n\n    //         // 设备名称\n    //         const title = document.createElement('div');\n    //         title.className = 'event-title-inline';\n    //         title.textContent = info.event.title;\n    //         customContent.appendChild(title);\n\n    //         // 使用人\n    //         if (userName) {\n    //           const user = document.createElement('div');\n    //           user.className = 'event-user-inline';\n    //           user.textContent = userName;\n    //           customContent.appendChild(user);\n    //         }\n\n    //         // 时间\n    //         const time = document.createElement('div');\n    //         time.className = 'event-time-inline';\n    //         time.textContent = timeStr;\n    //         customContent.appendChild(time);\n    //       } else {\n    //         // 正常宽度布局 - 使用内联布局\n    //         const inlineContent = document.createElement('div');\n    //         inlineContent.className = 'inline-content';\n\n    //         // 设备名称\n    //         const titleSpan = document.createElement('span');\n    //         titleSpan.className = 'event-title-inline';\n    //         titleSpan.textContent = info.event.title;\n    //         inlineContent.appendChild(titleSpan);\n\n    //         // 分隔符\n    //         const separator1 = document.createElement('span');\n    //         separator1.className = 'event-separator';\n    //         separator1.textContent = ' · ';\n    //         inlineContent.appendChild(separator1);\n\n    //         // 使用人\n    //         const userSpan = document.createElement('span');\n    //         userSpan.className = 'event-user-inline';\n    //         userSpan.textContent = userName;\n    //         inlineContent.appendChild(userSpan);\n\n    //         // 分隔符\n    //         const separator2 = document.createElement('span');\n    //         separator2.className = 'event-separator';\n    //         separator2.textContent = ' · ';\n    //         inlineContent.appendChild(separator2);\n\n    //         // 时间\n    //         const timeSpan = document.createElement('span');\n    //         timeSpan.className = 'event-time-inline';\n    //         timeSpan.textContent = timeStr;\n    //         inlineContent.appendChild(timeSpan);\n\n    //         customContent.appendChild(inlineContent);\n    //       }\n\n    //       // 替换原有内容\n    //       eventContent.innerHTML = '';\n    //       eventContent.appendChild(customContent);\n\n    //       // 为循环预约添加图标\n    //       if (isRecurring) {\n    //         const recurringIcon = document.createElement('span');\n    //         recurringIcon.className = 'recurring-icon-timegrid';\n    //         recurringIcon.innerHTML = '<i class=\"el-icon-refresh-right\"></i>';\n    //         customContent.appendChild(recurringIcon);\n    //       }\n\n    //       // 日视图中添加额外处理，确保事件显示在正确的位置\n    //       if (info.view.type === 'timeGridDay') {\n    //         // 处理事件容器\n    //         const eventHarness = info.el.closest('.fc-timegrid-event-harness');\n    //         if (eventHarness) {\n    //           // 确保事件位置正确\n    //           eventHarness.style.zIndex = \"5\";\n    //         }\n    //       }\n    //     }\n    //   }\n\n    //   // 在月视图中修改时间格式为24小时制\n    //   if (info.view.type === 'dayGridMonth') {\n    //     const timeEl = info.el.querySelector('.fc-event-time');\n    //     if (timeEl && info.event.start) {\n    //       // 使用24小时制格式化时间\n    //       const formattedTime = info.event.start.toLocaleTimeString('zh-CN', {\n    //         hour: '2-digit',\n    //         minute: '2-digit',\n    //         hour12: false\n    //       });\n    //       timeEl.textContent = formattedTime;\n    //     }\n    //   }\n    // },\n\n    // 切换视图\n    changeView(viewName) {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.changeView(viewName);\n    },\n\n    // 跳转到今天\n    today() {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.today();\n    },\n\n    // 上一个时间段\n    prev() {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.prev();\n    },\n\n    // 下一个时间段\n    next() {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.next();\n    },\n\n    // 获取状态标签类型\n    getStatusTagType(status) {\n      const statusMap = {\n        'confirmed': 'success',\n        'in_use': 'primary',\n        'cancelled': 'info',\n        'expired': 'danger'\n      };\n      return statusMap[status] || 'info';\n    },\n\n    // 格式化日期\n    formatDate(date) {\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    },\n\n    // 格式化日期时间\n    formatDateTime(date) {\n      return formatDate(date, 'YYYY-MM-DD HH:mm');\n    },\n\n    // 格式化短时间（只显示小时和分钟）\n    formatShortTime(date) {\n      if (!date) return '';\n      return date.toLocaleTimeString('zh-CN', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false\n      });\n    },\n\n    // 获取状态文本\n    getStatusText(status) {\n      const statusMap = {\n        'confirmed': this.$t('reservation.confirmed'),\n        'in_use': this.$t('reservation.inUse'),\n        'cancelled': this.$t('reservation.cancelled'),\n        'expired': this.$t('reservation.expired')\n      };\n      return statusMap[status] || status;\n    },\n\n    // 添加事件工具提示\n    addEventTooltip(info) {\n      // 获取事件信息\n      const event = info.event;\n      const props = event.extendedProps;\n\n      // 计算事件持续时间（分钟）\n      const start = event.start;\n      const end = event.end;\n      const durationMs = end - start;\n      const durationMinutes = Math.round(durationMs / (1000 * 60));\n\n      // 获取当前视图类型\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      const viewType = calendarApi.view.type;\n\n      // 获取事件元素\n      const titleEl = info.el.querySelector('.fc-event-title');\n      const timeEl = info.el.querySelector('.fc-event-time');\n      const mainEl = info.el.querySelector('.fc-event-main');\n\n      // 根据视图类型处理事件显示\n      if (viewType === 'dayGridMonth') {\n        // 月视图：所有预约显示相同，显示设备名称+开始和结束时间\n        if (titleEl) {\n          // 提取完整设备名称（通常是前两个单词，如\"M2F Mic\"）\n          const titleParts = event.title.split(' ');\n          let deviceName = titleParts[0]; // 至少包含第一个单词\n\n          // 如果第二个单词是\"Mic\"或其他设备类型标识，也包含它\n          if (titleParts.length > 1 &&\n              (titleParts[1] === 'Mic' ||\n               titleParts[1] === 'Speaker' ||\n               titleParts[1].startsWith('Speaker'))) {\n            deviceName = `${titleParts[0]} ${titleParts[1]}`;\n          }\n\n          // 格式化时间\n          const startTime = this.formatShortTime(start);\n          const endTime = this.formatShortTime(end);\n\n          // 设置标题为\"设备名称 开始-结束\"\n          titleEl.textContent = `${deviceName}     ${startTime}-${endTime}`;\n\n          // 完全移除时间元素，防止重复显示时间\n          if (timeEl) {\n            timeEl.remove(); // 彻底移除时间元素，而不仅仅是隐藏\n          }\n        }\n      } else if (viewType === 'timeGridWeek' || viewType === 'timeGridDay') {\n        // 周视图和日视图：短时间预约特殊处理\n        if (durationMinutes <= 30) {\n          // 添加短时间预约的类\n          info.el.classList.add('very-short-duration-event');\n\n          // 只显示设备名称\n          if (titleEl) {\n            const deviceName = event.title.split(' ')[0];\n            titleEl.textContent = deviceName;\n          }\n\n          // 调整主容器样式\n          if (mainEl) {\n            mainEl.style.display = 'flex';\n            mainEl.style.alignItems = 'center';\n            mainEl.style.justifyContent = 'center';\n            mainEl.style.padding = '2px';\n\n            // 日视图和周视图的不同布局\n            if (viewType === 'timeGridDay') {\n              // 日视图：水平排列\n              mainEl.style.flexDirection = 'row';\n              if (timeEl) {\n                timeEl.style.marginRight = '4px';\n              }\n            } else {\n              // 周视图：垂直排列\n              mainEl.style.flexDirection = 'column';\n              if (timeEl) {\n                timeEl.style.marginBottom = '2px';\n              }\n            }\n          }\n\n          // 调整字体样式\n          if (titleEl) {\n            titleEl.style.fontWeight = 'bold';\n            titleEl.style.fontSize = '0.9em';\n          }\n          if (timeEl) {\n            timeEl.style.fontWeight = 'bold';\n            timeEl.style.fontSize = '0.9em';\n          }\n        }\n      }\n\n      // 设置title属性（原生浏览器工具提示）\n      const tooltipText = `${event.title}\\n${props.userName || ''}\\n${this.formatDateTime(start)} - ${this.formatDateTime(end)}\\n${this.getStatusText(props.status)}\\n${props.reservationNumber}`;\n      info.el.setAttribute('title', tooltipText);\n    },\n\n    // 显示取消预约对话框\n    showCancelDialog() {\n      this.cancelForm.reservationCode = '';\n      this.cancelDialogVisible = true;\n    },\n\n    // 取消预约\n    async cancelReservation() {\n      try {\n        // 验证表单\n        await this.$refs.cancelForm.validate();\n\n        // 检查输入的预约码是否与当前预约码匹配\n        if (this.cancelForm.reservationCode !== this.selectedEvent.extendedProps.reservationCode) {\n          this.$message.error(this.$t('reservation.checkCodeAndContact'));\n          return;\n        }\n\n        this.cancelling = true;\n\n        // 准备请求数据\n        const data = {\n          reservation_number: this.selectedEvent.extendedProps.reservationNumber || null,\n          lang: this.$i18n.locale\n        };\n\n        // 调用取消预约API\n        const response = await reservationApi.cancelReservation(this.selectedEvent.extendedProps.reservationCode, data);\n\n        if (response.data.success) {\n          this.$message.success(this.$t('reservation.cancelSuccess'));\n          this.cancelDialogVisible = false;\n\n          // 关闭预约详情弹窗\n          this.detailVisible = false;\n\n          // 重新加载日历事件\n          this.loadEvents();\n        } else {\n          this.$message.error(response.data.message || this.$t('reservation.cancelFailed'));\n        }\n      } catch (error) {\n        console.error('Failed to cancel reservation:', error);\n        this.$message.error(this.$t('error.serverError'));\n      } finally {\n        this.cancelling = false;\n      }\n    },\n\n    // 格式化时间为24小时制\n    formatTime(date) {\n      if (!date) return '';\n      return date.toLocaleTimeString('zh-CN', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false\n      });\n    },\n  }\n};\n</script>\n\n<style scoped>\n.calendar-view {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.calendar-header {\n  margin-bottom: 20px;\n}\n\n.calendar-current-date {\n  font-size: 1.2rem;\n  color: #606266;\n  margin-top: 5px;\n  font-weight: normal;\n}\n\n.calendar-controls {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n}\n\n.recurring-notice {\n  margin: 15px 0;\n}\n\n.action-buttons {\n  margin-top: 15px;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.cancel-content {\n  padding: 10px 0;\n}\n\n.recurring-icon {\n  margin-left: 5px;\n  color: #ff9800;\n}\n\n/* 周视图和日视图中的循环预约图标 */\n:deep(.recurring-icon-timegrid) {\n  position: absolute;\n  top: 2px;\n  right: 2px;\n  color: rgba(255, 255, 255, 0.9);\n  font-size: 12px;\n  z-index: 2;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-radius: 50%;\n  width: 16px;\n  height: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  pointer-events: none; /* 确保图标不会影响点击事件 */\n}\n\n/* 自定义事件样式 */\n:deep(.fc-event) {\n  cursor: pointer;\n}\n\n:deep(.fc-event-title) {\n  font-weight: bold;\n}\n\n/* 隐藏月视图中的点 */\n:deep(.fc-daygrid-event-dot) {\n  display: none !important;\n}\n\n/* 月视图中的事件内容居中显示 */\n:deep(.fc-daygrid-event) {\n  display: flex !important;\n  flex-direction: row !important;\n  align-items: center !important;\n  justify-content: center !important;\n  text-align: center !important;\n  padding: 2px 4px !important;\n  white-space: nowrap !important;\n}\n\n:deep(.fc-daygrid-event-harness) {\n  margin-top: 2px !important;\n}\n\n:deep(.fc-daygrid-event .fc-event-main) {\n  width: 100% !important;\n  text-align: center !important;\n  display: flex !important;\n  justify-content: center !important;\n  align-items: center !important;\n}\n\n:deep(.fc-daygrid-event .fc-event-time) {\n  font-weight: bold !important;\n  margin-right: 4px !important;\n  text-align: center !important;\n  display: inline !important;\n}\n\n:deep(.fc-daygrid-event .fc-event-title) {\n  display: inline !important;\n  text-align: center !important;\n}\n\n/* 日期头部样式 */\n:deep(.fc-col-header-cell) {\n  background-color: #f5f7fa;\n  padding: 8px 0;\n}\n\n:deep(.fc-col-header-cell-cushion) {\n  font-weight: bold;\n  color: #303133;\n  text-decoration: none;\n  padding: 4px;\n}\n\n/* 时间格子样式 */\n:deep(.fc-timegrid-slot) {\n  height: 40px;\n}\n\n/* 设置事件的最小高度 */\n:deep(.fc-timegrid-event) {\n  min-height: 40px !important; /* 确保短时间预约有足够的显示空间 */\n}\n\n/* 今天高亮 - 使用突出边框而非背景色 */\n:deep(.fc-day-today) {\n  background-color: transparent !important; /* 移除背景色 */\n  position: relative !important;\n}\n\n/* 为月视图中的今天添加突出边框 */\n:deep(.fc-daygrid-day.fc-day-today::after) {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border: 1px solid #006eff !important; /* 红色细线边框 */\n  pointer-events: none; /* 确保边框不会影响点击事件 */\n  z-index: 1; /* 确保边框在内容之上 */\n}\n\n/* 月视图中今天的日期数字加粗显示 */\n:deep(.fc-day-today .fc-daygrid-day-number) {\n  font-weight: bold !important;\n  color: #006eff !important; /* 红色文字 */\n}\n\n/* 周视图和日视图中今天的列头样式 */\n:deep(.fc-timeGridWeek-view .fc-col-header-cell.fc-day-today),\n:deep(.fc-timeGridDay-view .fc-col-header-cell.fc-day-today) {\n  background-color: transparent !important;\n}\n\n/* 周视图和日视图中今天的列头文字样式 */\n:deep(.fc-timeGridWeek-view .fc-col-header-cell.fc-day-today .fc-col-header-cell-cushion),\n:deep(.fc-timeGridDay-view .fc-col-header-cell.fc-day-today .fc-col-header-cell-cushion) {\n  font-weight: bold !important;\n  color: #006eff !important; /* 红色文字 */\n}\n\n/* 周视图中今天的时间轴列样式 */\n:deep(.fc-timeGridWeek-view .fc-timegrid-col.fc-day-today) {\n  background-color: transparent !important;\n  position: relative !important;\n}\n\n/* 为周视图中今天的时间轴添加红色细线边框 */\n:deep(.fc-timeGridWeek-view .fc-timegrid-col.fc-day-today::after) {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border-top: 1px solid #006eff !important;\n  border-left: 1px solid #006eff !important;\n  border-right: 1px solid #006eff !important;\n  border-bottom: 1px solid #006eff !important;\n  pointer-events: none;\n  z-index: 1;\n}\n\n/* 日视图中今天的时间轴列样式 */\n:deep(.fc-timeGridDay-view .fc-timegrid-col.fc-day-today) {\n  background-color: transparent !important;\n  /* 日视图不需要边框 */\n}\n\n/* 周末颜色 */\n:deep(.fc-day-sat), :deep(.fc-day-sun) {\n  background-color: #ffffff;\n}\n\n/* 周末表头文字颜色 - 红色 */\n:deep(.fc-col-header-cell.fc-day-sat), :deep(.fc-col-header-cell.fc-day-sun) {\n  color: #ff0000;\n}\n\n:deep(.fc-col-header-cell.fc-day-sat .fc-col-header-cell-cushion),\n:deep(.fc-col-header-cell.fc-day-sun .fc-col-header-cell-cushion) {\n  color: #ff0000;\n}\n\n/* 月视图中周末日期数字颜色 - 红色 */\n:deep(.fc-daygrid-day.fc-day-sat .fc-daygrid-day-number),\n:deep(.fc-daygrid-day.fc-day-sun .fc-daygrid-day-number) {\n  color: #ff0000;\n}\n\n/* 工作日颜色 */\n:deep(.fc-day-mon), :deep(.fc-day-tue), :deep(.fc-day-wed), :deep(.fc-day-thu), :deep(.fc-day-fri) {\n  background-color: #ffffff;\n}\n\n/* 预约详情弹窗样式 */\n.event-detail-card {\n  border-radius: 4px;\n  overflow: hidden;\n}\n\n.event-header {\n  padding: 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.event-header h3 {\n  margin: 0;\n  font-size: 18px;\n}\n\n.status-confirmed {\n  background-color: #f0f9eb;\n  border-left: 4px solid #67c23a;\n}\n\n.status-in_use {\n  background-color: #ecf5ff;\n  border-left: 4px solid #409eff;\n}\n\n.status-cancelled {\n  background-color: #f4f4f5;\n  border-left: 4px solid #909399;\n}\n\n.status-expired {\n  background-color: #fef0f0;\n  border-left: 4px solid #f56c6c;\n}\n\n.event-info {\n  padding: 0 15px 15px;\n}\n\n.info-item {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.info-item i {\n  margin-right: 10px;\n  color: #909399;\n}\n\n.time-info {\n  margin-bottom: 15px;\n}\n\n.time-display {\n  font-size: 16px;\n  font-weight: bold;\n  color: #303133;\n}\n\n/* 自定义事件内容样式 */\n:deep(.custom-event-content) {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  padding: 4px;\n  text-align: center;\n  overflow: hidden;\n}\n\n/* 当事件宽度较窄时的样式调整 */\n:deep(.fc-timegrid-col-events .custom-event-content) {\n  font-size: 0.9em;\n  line-height: 1.2;\n}\n\n/* 修复日视图和周视图中事件宽度问题 - 允许并排显示 */\n:deep(.fc-timegrid-event-harness) {\n  /* 移除强制宽度，允许事件并排显示 */\n  border-radius: 3px !important;\n}\n\n:deep(.fc-timegrid-event) {\n  border-radius: 3px !important;\n  margin: 1px !important;\n  padding: 4px !important;\n}\n\n/* 确保事件内容在较窄的事件中也能正常显示 */\n:deep(.fc-timegrid-event .fc-event-main) {\n  padding: 4px !important;\n}\n\n/* 修复日视图中的事件宽度，让同一时间段的多个预约可以并排显示 */\n:deep(.fc-timeGridDay-view .fc-timegrid-event) {\n  /* 允许事件并排显示 */\n  width: auto !important; /* 修改为自动宽度，而非100% */\n  max-width: none !important;\n  min-width: 20% !important; /* 设置最小宽度，确保不会太窄 */\n  margin: 1px 2px !important; /* 添加左右边距，分隔不同的事件 */\n  border-radius: 3px !important;\n  box-sizing: border-box !important;\n  overflow: hidden !important; /* 确保内容不溢出 */\n}\n\n/* 修复日视图中的列宽度 */\n:deep(.fc-timeGridDay-view .fc-timegrid-col) {\n  width: 100% !important;\n  max-width: 100% !important;\n  display: flex !important; /* 启用弹性布局 */\n  flex-direction: column !important;\n}\n\n/* 日视图中的事件容器，允许事件水平排列 */\n:deep(.fc-timeGridDay-view .fc-timegrid-col-events) {\n  display: flex !important;\n  flex-wrap: wrap !important; /* 允许事件换行 */\n  width: 100% !important;\n  justify-content: flex-start !important; /* 从左向右排列 */\n  gap: 2px !important; /* 事件间的间隙 */\n}\n\n/* 日视图中的事件容器组 */\n:deep(.fc-timeGridDay-view .fc-timegrid-event-harness) {\n  margin: 0 2px !important;\n  width: auto !important; /* 自动宽度，允许多个事件并排 */\n  flex-grow: 1 !important; /* 允许事件水平扩展 */\n  flex-basis: 0 !important; /* 基础宽度设为0，让flex-grow控制 */\n  max-width: calc(50% - 4px) !important; /* 最大宽度为50%减去间距，确保至少有2个事件并排 */\n  min-width: 150px !important; /* 设置最小宽度 */\n}\n\n/* 周视图中的事件样式改进 - 改善文字显示与排版 */\n:deep(.fc-timeGridWeek-view .fc-timegrid-event) {\n  padding: 4px !important;\n  margin: 1px !important;\n  border-radius: 3px !important;\n}\n\n:deep(.fc-timeGridWeek-view .custom-event-content) {\n  display: flex !important;\n  flex-direction: column !important;\n  padding: 2px 4px !important;\n  font-size: 0.9em !important;\n  line-height: 1.2 !important;\n}\n\n/* 改善事件中设备名称、预约人和时间的显示 */\n:deep(.fc-event-title) {\n  font-weight: bold !important;\n  margin-bottom: 2px !important;\n  white-space: nowrap !important;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n}\n\n:deep(.fc-event-time) {\n  font-weight: normal !important;\n  margin-top: 2px !important;\n  white-space: nowrap !important;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n}\n\n/* 添加分隔符样式，在事件内容之间显示分隔符 */\n:deep(.event-separator) {\n  margin: 0 4px !important;\n  opacity: 0.7 !important;\n}\n\n/* 当前时间指示器样式 */\n:deep(.fc-timegrid-now-indicator-line) {\n  border-color: #ff0000; /* 红色线条 */\n  border-width: 0.1px; /* 加粗线条 */\n  z-index: 10; /* 确保在事件上方显示 */\n}\n\n:deep(.fc-timegrid-now-indicator-arrow) {\n  border-color: #ff0000; /* 红色箭头 */\n  border-width: 5px 0px 0 0; /* 加大箭头 */\n}\n\n/* 紧凑型布局样式 */\n:deep(.custom-event-content.compact) {\n  display: flex !important;\n  flex-direction: column !important;\n  justify-content: center !important;\n  padding: 4px !important;\n  gap: 2px !important;\n}\n\n:deep(.inline-content) {\n  display: flex !important;\n  flex-wrap: nowrap !important;\n  align-items: center !important;\n  justify-content: center !important;\n  white-space: nowrap !important;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n}\n\n:deep(.time-content) {\n  display: flex !important;\n  justify-content: center !important;\n  font-size: 0.9em !important;\n  white-space: nowrap !important;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n}\n\n/* 行内样式组件 */\n:deep(.event-title-inline) {\n  font-weight: bold !important;\n  white-space: nowrap !important;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n}\n\n:deep(.event-user-inline) {\n  white-space: nowrap !important;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n}\n\n:deep(.event-time-inline) {\n  white-space: nowrap !important;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n}\n\n/* 日视图特殊样式调整 */\n:deep(.fc-timeGridDay-view .custom-event-content.compact) {\n  padding: 6px !important;\n  font-size: 0.95em !important;\n  justify-content: center !important;\n  overflow: hidden !important;\n  display: flex !important;\n  flex-direction: column !important;\n}\n\n:deep(.fc-timeGridDay-view .inline-content) {\n  font-size: 0.95em !important;\n  display: flex !important;\n  flex-wrap: wrap !important;\n  justify-content: center !important;\n  align-items: center !important;\n  gap: 2px !important;\n}\n\n/* 日视图中设备名称和使用人的显示 */\n:deep(.fc-timeGridDay-view .event-title-inline) {\n  font-weight: bold !important;\n  white-space: nowrap !important;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n  display: block !important;\n  text-align: center !important;\n}\n\n:deep(.fc-timeGridDay-view .event-user-inline) {\n  display: block !important;\n  text-align: center !important;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n  max-width: 100% !important;\n}\n\n:deep(.fc-timeGridDay-view .event-time-inline) {\n  font-size: 0.9em !important;\n  display: block !important;\n  text-align: center !important;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n  max-width: 100% !important;\n}\n\n/* 日视图中并排显示时的调整 */\n:deep(.fc-timeGridDay-view .fc-timegrid-col-events .fc-timegrid-event-harness) {\n  display: flex !important;\n  align-items: stretch !important;\n}\n\n:deep(.fc-timeGridDay-view .fc-timegrid-col-events .fc-timegrid-event) {\n  flex: 1 !important;\n  min-width: 0 !important;\n  display: flex !important;\n  flex-direction: column !important;\n}\n\n:deep(.fc-timeGridDay-view .fc-timegrid-col-events .fc-event-main) {\n  flex: 1 !important;\n  padding: 2px !important;\n  overflow: hidden !important;\n}\n\n/* 日视图中的事件内容 - 改善文字显示 */\n:deep(.fc-timeGridDay-view .custom-event-content) {\n  padding: 4px !important;\n  font-size: 0.95em !important;\n  line-height: 1.3 !important;\n  text-align: center !important;\n}\n\n/* 周视图特殊样式调整 */\n:deep(.fc-timeGridWeek-view .custom-event-content.compact) {\n  padding: 2px 4px !important;\n  min-height: 30px !important;\n}\n\n:deep(.fc-timeGridWeek-view .inline-content) {\n  font-size: 0.9em !important;\n}\n\n/* 解决重叠事件问题的其他样式调整 */\n:deep(.fc-timegrid-now-indicator-container) {\n  z-index: 10 !important; /* 确保当前时间指示器显示在最上层 */\n}\n\n:deep(.fc-timegrid-col-events) {\n  position: relative !important;\n  z-index: 1 !important; /* 确保事件层级正确 */\n}\n\n/* 调整日视图中时间槽的高度，使并排事件更加美观 */\n:deep(.fc-timeGridDay-view .fc-timegrid-slot) {\n  height: 50px !important; /* 增加高度，让短时间事件也有足够的空间 */\n}\n\n/* 确保日历容器有足够宽度 */\n:deep(.fc-view-harness) {\n  max-width: 100% !important;\n  overflow: hidden !important;\n}\n\n/* 修复日视图中事件的垂直定位问题 */\n:deep(.fc-timegrid-event) {\n  position: relative !important;\n}\n\n:deep(.fc-timegrid-slot-lane) {\n  position: relative !important;\n  z-index: 1 !important;\n}\n\n:deep(.fc-timegrid-body) {\n  z-index: 2 !important;\n}\n\n:deep(.fc-timegrid-slots) {\n  z-index: 1 !important;\n}\n\n:deep(.fc-timegrid-cols) {\n  z-index: 3 !important;\n  position: relative !important;\n}\n\n:deep(.fc-timegrid-axis-chunk) {\n  z-index: 1 !important;\n}\n\n/* 确保事件显示在对应时间段 */\n:deep(.fc-timegrid-event-harness) {\n  position: absolute !important;\n}\n\n/* 调整日视图中的事件容器样式 */\n:deep(.fc-timeGridDay-view .fc-daygrid-day-events) {\n  position: relative !important;\n  min-height: 0 !important;\n}\n\n/* 修复日视图中时间段显示问题 */\n:deep(.fc-timeGridDay-view .fc-scrollgrid-sync-inner) {\n  min-height: 100% !important;\n}\n\n:deep(.fc-timeGridDay-view .fc-scrollgrid-sync-table) {\n  min-height: 100% !important;\n}\n\n</style>\n\n"],"mappings":"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;QACA;MACA,SAAA+B,KAAA;QACAC,OAAA,CAAAD,KAAA,oCAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA,MAAA/B,EAAA;MACA;QACA,KAAAT,OAAA;MACA;IACA;IAEA;IACAlD,eAAA;MACA;MACA,MAAAqE,WAAA,QAAAF,KAAA,CAAAC,YAAA,CAAAE,MAAA;MACA,KAAAnB,gBAAA,GAAAkB,WAAA,CAAAG,IAAA,CAAAC,KAAA;;MAEA;MACA,KAAAX,UAAA;IACA;IAEA;IACAlE,iBAAAgG,IAAA;MACA,KAAA3C,aAAA,GAAA2C,IAAA,CAAAC,KAAA;MACA,KAAA7C,aAAA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA8C,WAAAC,QAAA;MACA,MAAA1B,WAAA,QAAAF,KAAA,CAAAC,YAAA,CAAAE,MAAA;MACAD,WAAA,CAAAyB,UAAA,CAAAC,QAAA;IACA;IAEA;IACApD,MAAA;MACA,MAAA0B,WAAA,QAAAF,KAAA,CAAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}