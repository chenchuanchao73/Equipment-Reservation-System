{"ast":null,"code":"import { recurringReservationApi, reservationApi } from '@/api';\nimport { isReservationExpired } from '@/utils/date';\nexport default {\n  name: 'RecurringReservationDetail',\n  data() {\n    return {\n      recurringReservationId: null,\n      recurringReservation: null,\n      childReservations: [],\n      loading: true,\n      childReservationsLoading: false,\n      error: false,\n      errorMessage: '',\n      includePastReservations: false,\n      cancelDialogVisible: false,\n      cancelFutureOnly: 1,\n      userEmail: '',\n      cancelLoading: false\n    };\n  },\n  created() {\n    this.recurringReservationId = this.$route.params.id;\n    this.loadRecurringReservation();\n  },\n  methods: {\n    // 加载循环预约详情\n    async loadRecurringReservation() {\n      this.loading = true;\n      this.error = false;\n      try {\n        const response = await recurringReservationApi.getRecurringReservation(this.recurringReservationId);\n        if (response.data.success) {\n          this.recurringReservation = response.data.data;\n          this.userEmail = this.recurringReservation.user_email || '';\n          this.loadChildReservations();\n        } else {\n          this.error = true;\n          this.errorMessage = response.data.message || this.$t('reservation.failedToLoadReservation');\n        }\n      } catch (error) {\n        console.error('Failed to load recurring reservation:', error);\n        this.error = true;\n        this.errorMessage = error.response?.data?.detail || this.$t('reservation.failedToLoadReservation');\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 加载子预约列表\n    async loadChildReservations() {\n      this.childReservationsLoading = true;\n      try {\n        const response = await recurringReservationApi.getChildReservations(this.recurringReservationId, this.includePastReservations ? 1 : 0);\n        if (response.data.success) {\n          this.childReservations = response.data.reservations || [];\n        } else {\n          this.$message.error(response.data.message || this.$t('reservation.failedToLoadChildReservations'));\n        }\n      } catch (error) {\n        console.error('Failed to load child reservations:', error);\n        this.$message.error(this.$t('reservation.failedToLoadChildReservations'));\n      } finally {\n        this.childReservationsLoading = false;\n      }\n    },\n    // 查看子预约详情\n    viewChildReservation(reservation) {\n      this.$router.push(`/reservation/${reservation.reservation_code}`);\n    },\n    // 取消子预约\n    async cancelChildReservation(reservation) {\n      try {\n        const result = await this.$confirm(this.$t('reservation.cancelConfirmation'), this.$t('common.warning'), {\n          confirmButtonText: this.$t('common.confirm'),\n          cancelButtonText: this.$t('common.cancel'),\n          type: 'warning'\n        });\n        if (result === 'confirm') {\n          const response = await reservationApi.cancelReservation(reservation.reservation_code, {\n            user_email: this.recurringReservation.user_email\n          });\n          if (response.data.success) {\n            this.$message.success(this.$t('reservation.cancelSuccess'));\n            this.loadChildReservations();\n          } else {\n            this.$message.error(response.data.message || this.$t('reservation.cancelFailed'));\n          }\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('Failed to cancel reservation:', error);\n          this.$message.error(this.$t('reservation.cancelFailed'));\n        }\n      }\n    },\n    // 显示取消循环预约对话框\n    showCancelDialog() {\n      this.cancelDialogVisible = true;\n    },\n    // 确认取消循环预约\n    async confirmCancel() {\n      this.cancelLoading = true;\n      try {\n        const response = await recurringReservationApi.cancelRecurringReservation(this.recurringReservationId, this.cancelFutureOnly, this.userEmail || null);\n        if (response.data.success) {\n          this.$message.success(this.$t('reservation.cancelSuccess'));\n          this.cancelDialogVisible = false;\n          this.loadRecurringReservation();\n        } else {\n          this.$message.error(response.data.message || this.$t('reservation.cancelFailed'));\n        }\n      } catch (error) {\n        console.error('Failed to cancel recurring reservation:', error);\n        this.$message.error(this.$t('reservation.cancelFailed'));\n      } finally {\n        this.cancelLoading = false;\n      }\n    },\n    // 格式化日期\n    formatDate(dateStr) {\n      if (!dateStr) return '';\n      const date = new Date(dateStr);\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    },\n    // 格式化时间\n    formatTime(timeStr) {\n      if (!timeStr) return '';\n      return timeStr.substring(0, 5);\n    },\n    // 格式化日期时间\n    formatDateTime(row, column, cellValue) {\n      if (!cellValue) return '';\n      const date = new Date(cellValue);\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;\n    },\n    // 格式化星期几\n    formatDaysOfWeek(days) {\n      if (!days || days.length === 0) return '';\n      const dayNames = [this.$t('common.sunday'), this.$t('common.monday'), this.$t('common.tuesday'), this.$t('common.wednesday'), this.$t('common.thursday'), this.$t('common.friday'), this.$t('common.saturday')];\n      return days.map(day => dayNames[day]).join(', ');\n    },\n    // 格式化每月几号\n    formatDaysOfMonth(days) {\n      if (!days || days.length === 0) return '';\n      return days.join(', ');\n    },\n    // 获取循环模式文本\n    getPatternText(pattern) {\n      const patterns = {\n        'daily': this.$t('reservation.daily'),\n        'weekly': this.$t('reservation.weekly'),\n        'monthly': this.$t('reservation.monthly'),\n        'custom': this.$t('reservation.custom')\n      };\n      return patterns[pattern] || pattern;\n    },\n    // 获取循环预约状态类型\n    getStatusType(reservation) {\n      if (reservation.status === 'cancelled') {\n        return 'danger';\n      }\n      return 'success';\n    },\n    // 获取循环预约状态文本\n    getStatusText(reservation) {\n      if (reservation.status === 'cancelled') {\n        return this.$t('reservation.cancelled');\n      }\n      return this.$t('reservation.active');\n    },\n    // 获取子预约状态类型\n    getChildStatusType(reservation) {\n      // 如果预约已取消，返回红色\n      if (reservation.status === 'cancelled') {\n        return 'danger';\n      }\n\n      // 如果预约已过期，返回橙色\n      if (isReservationExpired(reservation.end_datetime)) {\n        return 'warning';\n      }\n\n      // 如果预约正在进行中，返回蓝色\n      const now = new Date();\n      const start = new Date(reservation.start_datetime);\n      const end = new Date(reservation.end_datetime);\n      if (now >= start && now <= end) {\n        return 'primary';\n      }\n\n      // 如果预约已确认且未开始，返回绿色\n      return 'success';\n    },\n    // 获取子预约状态文本\n    getChildStatusText(reservation) {\n      // 如果预约已取消，显示\"已取消\"\n      if (reservation.status === 'cancelled') {\n        return this.$t('reservation.cancelled');\n      }\n\n      // 如果预约已过期，显示\"已过期\"\n      if (isReservationExpired(reservation.end_datetime)) {\n        return this.$t('reservation.expired');\n      }\n\n      // 如果预约正在进行中，显示\"进行中\"\n      const now = new Date();\n      const start = new Date(reservation.start_datetime);\n      const end = new Date(reservation.end_datetime);\n      if (now >= start && now <= end) {\n        return this.$t('reservation.ongoing');\n      }\n\n      // 如果预约已确认且未开始，显示\"已确认\"\n      return this.$t('reservation.confirmed');\n    }\n  }\n};","map":{"version":3,"names":["recurringReservationApi","reservationApi","isReservationExpired","name","data","recurringReservationId","recurringReservation","childReservations","loading","childReservationsLoading","error","errorMessage","includePastReservations","cancelDialogVisible","cancelFutureOnly","userEmail","cancelLoading","created","$route","params","id","loadRecurringReservation","methods","response","getRecurringReservation","success","user_email","loadChildReservations","message","$t","console","detail","getChildReservations","reservations","$message","viewChildReservation","reservation","$router","push","reservation_code","cancelChildReservation","result","$confirm","confirmButtonText","cancelButtonText","type","cancelReservation","showCancelDialog","confirmCancel","cancelRecurringReservation","formatDate","dateStr","date","Date","getFullYear","String","getMonth","padStart","getDate","formatTime","timeStr","substring","formatDateTime","row","column","cellValue","getHours","getMinutes","formatDaysOfWeek","days","length","dayNames","map","day","join","formatDaysOfMonth","getPatternText","pattern","patterns","getStatusType","status","getStatusText","getChildStatusType","end_datetime","now","start","start_datetime","end","getChildStatusText"],"sources":["src/views/reservation/RecurringReservationDetail.vue"],"sourcesContent":["<template>\n  <div class=\"recurring-reservation-detail\">\n    <div v-if=\"loading\" class=\"loading-container\">\n      <el-skeleton :rows=\"10\" animated />\n    </div>\n\n    <div v-else-if=\"error\" class=\"error-container\">\n      <el-result\n        icon=\"error\"\n        :title=\"$t('common.error')\"\n        :sub-title=\"errorMessage\"\n      >\n        <template #extra>\n          <el-button type=\"primary\" @click=\"$router.push('/')\">{{ $t('common.backToHome') }}</el-button>\n        </template>\n      </el-result>\n    </div>\n\n    <div v-else class=\"content-container\">\n      <div class=\"header-actions\">\n        <el-button icon=\"el-icon-back\" @click=\"$router.go(-1)\">{{ $t('common.back') }}</el-button>\n        <el-button type=\"danger\" @click=\"showCancelDialog\" :disabled=\"recurringReservation.status === 'cancelled'\">\n          {{ $t('reservation.cancel') }}\n        </el-button>\n      </div>\n\n      <!-- 循环预约信息卡片 -->\n      <el-card class=\"reservation-card\" shadow=\"hover\">\n        <div slot=\"header\" class=\"card-header\">\n          <span>{{ $t('reservation.recurringReservationDetails') }}</span>\n          <el-tag :type=\"getStatusType(recurringReservation)\" size=\"medium\">\n            {{ getStatusText(recurringReservation) }}\n          </el-tag>\n        </div>\n\n        <div class=\"reservation-info\">\n          <div class=\"info-section\">\n            <h3>{{ $t('reservation.reservationInfo') }}</h3>\n            <div class=\"info-row\">\n              <span class=\"info-label\">{{ $t('reservation.code') }}:</span>\n              <span class=\"info-value\">{{ recurringReservation.reservation_code }}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">{{ $t('reservation.pattern') }}:</span>\n              <span class=\"info-value\">{{ getPatternText(recurringReservation.pattern_type) }}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">{{ $t('reservation.dateRange') }}:</span>\n              <span class=\"info-value\">{{ formatDate(recurringReservation.start_date) }} - {{ formatDate(recurringReservation.end_date) }}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">{{ $t('reservation.timeRange') }}:</span>\n              <span class=\"info-value\">{{ formatTime(recurringReservation.start_time) }} - {{ formatTime(recurringReservation.end_time) }}</span>\n            </div>\n            <div class=\"info-row\" v-if=\"recurringReservation.days_of_week && recurringReservation.days_of_week.length > 0\">\n              <span class=\"info-label\">{{ $t('reservation.daysOfWeek') }}:</span>\n              <span class=\"info-value\">{{ formatDaysOfWeek(recurringReservation.days_of_week) }}</span>\n            </div>\n            <div class=\"info-row\" v-if=\"recurringReservation.days_of_month && recurringReservation.days_of_month.length > 0\">\n              <span class=\"info-label\">{{ $t('reservation.daysOfMonth') }}:</span>\n              <span class=\"info-value\">{{ formatDaysOfMonth(recurringReservation.days_of_month) }}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">{{ $t('reservation.purpose') }}:</span>\n              <span class=\"info-value\">{{ recurringReservation.purpose || $t('common.notProvided') }}</span>\n            </div>\n          </div>\n\n          <div class=\"info-section\">\n            <h3>{{ $t('equipment.info') }}</h3>\n            <div class=\"info-row\">\n              <span class=\"info-label\">{{ $t('equipment.name') }}:</span>\n              <span class=\"info-value\">{{ recurringReservation.equipment_name }}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">{{ $t('equipment.category') }}:</span>\n              <span class=\"info-value\">{{ recurringReservation.equipment_category }}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">{{ $t('equipment.location') }}:</span>\n              <span class=\"info-value\">{{ recurringReservation.equipment_location || $t('common.notProvided') }}</span>\n            </div>\n          </div>\n\n          <div class=\"info-section\">\n            <h3>{{ $t('reservation.userInfo') }}</h3>\n            <div class=\"info-row\">\n              <span class=\"info-label\">{{ $t('reservation.userName') }}:</span>\n              <span class=\"info-value\">{{ recurringReservation.user_name }}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">{{ $t('reservation.userDepartment') }}:</span>\n              <span class=\"info-value\">{{ recurringReservation.user_department }}</span>\n            </div>\n            <div class=\"info-row\">\n              <span class=\"info-label\">{{ $t('reservation.userContact') }}:</span>\n              <span class=\"info-value\">{{ recurringReservation.user_contact }}</span>\n            </div>\n            <div class=\"info-row\" v-if=\"recurringReservation.user_email\">\n              <span class=\"info-label\">{{ $t('reservation.userEmail') }}:</span>\n              <span class=\"info-value\">{{ recurringReservation.user_email }}</span>\n            </div>\n          </div>\n        </div>\n      </el-card>\n\n      <!-- 子预约列表 -->\n      <el-card class=\"child-reservations-card\" shadow=\"hover\">\n        <div slot=\"header\" class=\"card-header\">\n          <span>{{ $t('reservation.childReservations') }}</span>\n          <el-switch\n            v-model=\"includePastReservations\"\n            :active-text=\"$t('reservation.includePast')\"\n            @change=\"loadChildReservations\"\n          ></el-switch>\n        </div>\n\n        <div v-if=\"childReservationsLoading\" class=\"loading-container\">\n          <el-skeleton :rows=\"5\" animated />\n        </div>\n\n        <div v-else-if=\"childReservations.length === 0\" class=\"empty-state\">\n          <el-empty :description=\"$t('reservation.noChildReservations')\"></el-empty>\n        </div>\n\n        <div v-else class=\"child-reservations-list\">\n          <el-table\n            :data=\"childReservations\"\n            style=\"width: 100%\"\n            border\n            stripe\n          >\n            <el-table-column\n              prop=\"reservation_code\"\n              :label=\"$t('reservation.code')\"\n              width=\"120\"\n            ></el-table-column>\n            <el-table-column\n              prop=\"start_datetime\"\n              :label=\"$t('reservation.startTime')\"\n              width=\"180\"\n              :formatter=\"formatDateTime\"\n            ></el-table-column>\n            <el-table-column\n              prop=\"end_datetime\"\n              :label=\"$t('reservation.endTime')\"\n              width=\"180\"\n              :formatter=\"formatDateTime\"\n            ></el-table-column>\n            <el-table-column\n              prop=\"status\"\n              :label=\"$t('reservation.status')\"\n              width=\"120\"\n            >\n              <template slot-scope=\"scope\">\n                <el-tag :type=\"getChildStatusType(scope.row)\" size=\"medium\">\n                  {{ getChildStatusText(scope.row) }}\n                </el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column\n              :label=\"$t('common.actions')\"\n              width=\"150\"\n            >\n              <template slot-scope=\"scope\">\n                <el-button\n                  size=\"mini\"\n                  type=\"primary\"\n                  @click=\"viewChildReservation(scope.row)\"\n                  icon=\"el-icon-view\"\n                  circle\n                ></el-button>\n                <el-button\n                  size=\"mini\"\n                  type=\"danger\"\n                  @click=\"cancelChildReservation(scope.row)\"\n                  :disabled=\"scope.row.status === 'cancelled'\"\n                  icon=\"el-icon-delete\"\n                  circle\n                ></el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n      </el-card>\n    </div>\n\n    <!-- 取消循环预约对话框 -->\n    <el-dialog\n      :title=\"$t('reservation.cancelRecurringReservation')\"\n      :visible.sync=\"cancelDialogVisible\"\n      width=\"500px\"\n    >\n      <div class=\"cancel-options\">\n        <p>{{ $t('reservation.cancelRecurringReservationConfirm') }}</p>\n        <el-radio-group v-model=\"cancelFutureOnly\">\n          <el-radio :label=\"1\">{{ $t('reservation.cancelFutureOnly') }}</el-radio>\n          <el-radio :label=\"0\">{{ $t('reservation.cancelAll') }}</el-radio>\n        </el-radio-group>\n        <div class=\"email-input\">\n          <el-form-item :label=\"$t('reservation.userEmail')\" prop=\"userEmail\">\n            <el-input v-model=\"userEmail\" :placeholder=\"$t('reservation.emailForConfirmation')\"></el-input>\n          </el-form-item>\n        </div>\n      </div>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"cancelDialogVisible = false\">{{ $t('common.cancel') }}</el-button>\n        <el-button type=\"danger\" @click=\"confirmCancel\" :loading=\"cancelLoading\">{{ $t('common.confirm') }}</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { recurringReservationApi, reservationApi } from '@/api'\nimport { isReservationExpired } from '@/utils/date'\n\nexport default {\n  name: 'RecurringReservationDetail',\n\n  data() {\n    return {\n      recurringReservationId: null,\n      recurringReservation: null,\n      childReservations: [],\n      loading: true,\n      childReservationsLoading: false,\n      error: false,\n      errorMessage: '',\n      includePastReservations: false,\n      cancelDialogVisible: false,\n      cancelFutureOnly: 1,\n      userEmail: '',\n      cancelLoading: false\n    }\n  },\n\n  created() {\n    this.recurringReservationId = this.$route.params.id\n    this.loadRecurringReservation()\n  },\n\n  methods: {\n    // 加载循环预约详情\n    async loadRecurringReservation() {\n      this.loading = true\n      this.error = false\n\n      try {\n        const response = await recurringReservationApi.getRecurringReservation(this.recurringReservationId)\n        \n        if (response.data.success) {\n          this.recurringReservation = response.data.data\n          this.userEmail = this.recurringReservation.user_email || ''\n          this.loadChildReservations()\n        } else {\n          this.error = true\n          this.errorMessage = response.data.message || this.$t('reservation.failedToLoadReservation')\n        }\n      } catch (error) {\n        console.error('Failed to load recurring reservation:', error)\n        this.error = true\n        this.errorMessage = error.response?.data?.detail || this.$t('reservation.failedToLoadReservation')\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // 加载子预约列表\n    async loadChildReservations() {\n      this.childReservationsLoading = true\n\n      try {\n        const response = await recurringReservationApi.getChildReservations(\n          this.recurringReservationId,\n          this.includePastReservations ? 1 : 0\n        )\n        \n        if (response.data.success) {\n          this.childReservations = response.data.reservations || []\n        } else {\n          this.$message.error(response.data.message || this.$t('reservation.failedToLoadChildReservations'))\n        }\n      } catch (error) {\n        console.error('Failed to load child reservations:', error)\n        this.$message.error(this.$t('reservation.failedToLoadChildReservations'))\n      } finally {\n        this.childReservationsLoading = false\n      }\n    },\n\n    // 查看子预约详情\n    viewChildReservation(reservation) {\n      this.$router.push(`/reservation/${reservation.reservation_code}`)\n    },\n\n    // 取消子预约\n    async cancelChildReservation(reservation) {\n      try {\n        const result = await this.$confirm(\n          this.$t('reservation.cancelConfirmation'),\n          this.$t('common.warning'),\n          {\n            confirmButtonText: this.$t('common.confirm'),\n            cancelButtonText: this.$t('common.cancel'),\n            type: 'warning'\n          }\n        )\n\n        if (result === 'confirm') {\n          const response = await reservationApi.cancelReservation(reservation.reservation_code, {\n            user_email: this.recurringReservation.user_email\n          })\n\n          if (response.data.success) {\n            this.$message.success(this.$t('reservation.cancelSuccess'))\n            this.loadChildReservations()\n          } else {\n            this.$message.error(response.data.message || this.$t('reservation.cancelFailed'))\n          }\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('Failed to cancel reservation:', error)\n          this.$message.error(this.$t('reservation.cancelFailed'))\n        }\n      }\n    },\n\n    // 显示取消循环预约对话框\n    showCancelDialog() {\n      this.cancelDialogVisible = true\n    },\n\n    // 确认取消循环预约\n    async confirmCancel() {\n      this.cancelLoading = true\n\n      try {\n        const response = await recurringReservationApi.cancelRecurringReservation(\n          this.recurringReservationId,\n          this.cancelFutureOnly,\n          this.userEmail || null\n        )\n\n        if (response.data.success) {\n          this.$message.success(this.$t('reservation.cancelSuccess'))\n          this.cancelDialogVisible = false\n          this.loadRecurringReservation()\n        } else {\n          this.$message.error(response.data.message || this.$t('reservation.cancelFailed'))\n        }\n      } catch (error) {\n        console.error('Failed to cancel recurring reservation:', error)\n        this.$message.error(this.$t('reservation.cancelFailed'))\n      } finally {\n        this.cancelLoading = false\n      }\n    },\n\n    // 格式化日期\n    formatDate(dateStr) {\n      if (!dateStr) return ''\n      const date = new Date(dateStr)\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`\n    },\n\n    // 格式化时间\n    formatTime(timeStr) {\n      if (!timeStr) return ''\n      return timeStr.substring(0, 5)\n    },\n\n    // 格式化日期时间\n    formatDateTime(row, column, cellValue) {\n      if (!cellValue) return ''\n      const date = new Date(cellValue)\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`\n    },\n\n    // 格式化星期几\n    formatDaysOfWeek(days) {\n      if (!days || days.length === 0) return ''\n      \n      const dayNames = [\n        this.$t('common.sunday'),\n        this.$t('common.monday'),\n        this.$t('common.tuesday'),\n        this.$t('common.wednesday'),\n        this.$t('common.thursday'),\n        this.$t('common.friday'),\n        this.$t('common.saturday')\n      ]\n      \n      return days.map(day => dayNames[day]).join(', ')\n    },\n\n    // 格式化每月几号\n    formatDaysOfMonth(days) {\n      if (!days || days.length === 0) return ''\n      return days.join(', ')\n    },\n\n    // 获取循环模式文本\n    getPatternText(pattern) {\n      const patterns = {\n        'daily': this.$t('reservation.daily'),\n        'weekly': this.$t('reservation.weekly'),\n        'monthly': this.$t('reservation.monthly'),\n        'custom': this.$t('reservation.custom')\n      }\n      return patterns[pattern] || pattern\n    },\n\n    // 获取循环预约状态类型\n    getStatusType(reservation) {\n      if (reservation.status === 'cancelled') {\n        return 'danger'\n      }\n      return 'success'\n    },\n\n    // 获取循环预约状态文本\n    getStatusText(reservation) {\n      if (reservation.status === 'cancelled') {\n        return this.$t('reservation.cancelled')\n      }\n      return this.$t('reservation.active')\n    },\n\n    // 获取子预约状态类型\n    getChildStatusType(reservation) {\n      // 如果预约已取消，返回红色\n      if (reservation.status === 'cancelled') {\n        return 'danger'\n      }\n\n      // 如果预约已过期，返回橙色\n      if (isReservationExpired(reservation.end_datetime)) {\n        return 'warning'\n      }\n\n      // 如果预约正在进行中，返回蓝色\n      const now = new Date()\n      const start = new Date(reservation.start_datetime)\n      const end = new Date(reservation.end_datetime)\n      if (now >= start && now <= end) {\n        return 'primary'\n      }\n\n      // 如果预约已确认且未开始，返回绿色\n      return 'success'\n    },\n\n    // 获取子预约状态文本\n    getChildStatusText(reservation) {\n      // 如果预约已取消，显示\"已取消\"\n      if (reservation.status === 'cancelled') {\n        return this.$t('reservation.cancelled')\n      }\n\n      // 如果预约已过期，显示\"已过期\"\n      if (isReservationExpired(reservation.end_datetime)) {\n        return this.$t('reservation.expired')\n      }\n\n      // 如果预约正在进行中，显示\"进行中\"\n      const now = new Date()\n      const start = new Date(reservation.start_datetime)\n      const end = new Date(reservation.end_datetime)\n      if (now >= start && now <= end) {\n        return this.$t('reservation.ongoing')\n      }\n\n      // 如果预约已确认且未开始，显示\"已确认\"\n      return this.$t('reservation.confirmed')\n    }\n  }\n}\n</script>\n\n<style scoped>\n.recurring-reservation-detail {\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.loading-container,\n.error-container {\n  margin: 40px 0;\n}\n\n.header-actions {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n}\n\n.reservation-card,\n.child-reservations-card {\n  margin-bottom: 30px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.reservation-info {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 20px;\n}\n\n.info-section {\n  margin-bottom: 20px;\n}\n\n.info-section h3 {\n  margin-top: 0;\n  margin-bottom: 15px;\n  font-size: 16px;\n  color: #303133;\n  border-bottom: 1px solid #EBEEF5;\n  padding-bottom: 10px;\n}\n\n.info-row {\n  margin-bottom: 10px;\n  line-height: 1.5;\n}\n\n.info-label {\n  font-weight: bold;\n  color: #606266;\n  margin-right: 5px;\n}\n\n.info-value {\n  color: #303133;\n}\n\n.empty-state {\n  padding: 30px 0;\n}\n\n.cancel-options {\n  padding: 0 20px;\n}\n\n.cancel-options p {\n  margin-bottom: 20px;\n  color: #606266;\n}\n\n.email-input {\n  margin-top: 20px;\n}\n\n.child-reservations-list {\n  margin-top: 20px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}