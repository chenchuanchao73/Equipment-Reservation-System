{"ast":null,"code":"import axios from 'axios';\n\n/**\n * 预定API\n */\nexport default {\n  // 创建预定\n  createReservation(data) {\n    return axios.post('/api/reservation', data);\n  },\n  // 获取预定列表（管理员）\n  getReservations(params) {\n    return axios.get('/api/reservation', {\n      params\n    });\n  },\n  // 获取预定详情\n  getReservation(code) {\n    return axios.get(`/api/reservation/${code}`);\n  },\n  // 通过预定码获取预定详情\n  getReservationByCode(code) {\n    // 添加时间戳参数，防止缓存\n    const timestamp = new Date().getTime();\n    let url = code.includes('?') ? `${code}&_t=${timestamp}` : `/api/reservation/code/${code}?_t=${timestamp}`;\n    console.log('API URL:', url);\n    return axios.get(url);\n  },\n  // 更新预定\n  updateReservation(code, data) {\n    return axios.put(`/api/reservation/code/${code}`, data);\n  },\n  // 取消预定\n  cancelReservation(code, data = {}) {\n    return axios.post(`/api/reservation/cancel/code/${code}`, data);\n  },\n  // 获取预定二维码\n  getReservationQrcode(code) {\n    return axios.get(`/api/reservation/qrcode/${code}`);\n  },\n  // 获取设备在指定日期的可用性\n  getEquipmentAvailability(equipmentId, params) {\n    return axios.get(`/api/equipment/${equipmentId}/availability`, {\n      params\n    });\n  }\n};","map":{"version":3,"names":["axios","createReservation","data","post","getReservations","params","get","getReservation","code","getReservationByCode","timestamp","Date","getTime","url","includes","console","log","updateReservation","put","cancelReservation","getReservationQrcode","getEquipmentAvailability","equipmentId"],"sources":["D:/equipment-reservation-system/frontend/src/api/reservation.js"],"sourcesContent":["import axios from 'axios'\n\n/**\n * 预定API\n */\nexport default {\n  // 创建预定\n  createReservation(data) {\n    return axios.post('/api/reservation', data)\n  },\n\n  // 获取预定列表（管理员）\n  getReservations(params) {\n    return axios.get('/api/reservation', { params })\n  },\n\n  // 获取预定详情\n  getReservation(code) {\n    return axios.get(`/api/reservation/${code}`)\n  },\n\n  // 通过预定码获取预定详情\n  getReservationByCode(code) {\n    // 添加时间戳参数，防止缓存\n    const timestamp = new Date().getTime()\n    let url = code.includes('?')\n      ? `${code}&_t=${timestamp}`\n      : `/api/reservation/code/${code}?_t=${timestamp}`\n\n    console.log('API URL:', url)\n    return axios.get(url)\n  },\n\n  // 更新预定\n  updateReservation(code, data) {\n    return axios.put(`/api/reservation/code/${code}`, data)\n  },\n\n  // 取消预定\n  cancelReservation(code, data = {}) {\n    return axios.post(`/api/reservation/cancel/code/${code}`, data)\n  },\n\n  // 获取预定二维码\n  getReservationQrcode(code) {\n    return axios.get(`/api/reservation/qrcode/${code}`)\n  },\n\n  // 获取设备在指定日期的可用性\n  getEquipmentAvailability(equipmentId, params) {\n    return axios.get(`/api/equipment/${equipmentId}/availability`, { params })\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA,eAAe;EACb;EACAC,iBAAiBA,CAACC,IAAI,EAAE;IACtB,OAAOF,KAAK,CAACG,IAAI,CAAC,kBAAkB,EAAED,IAAI,CAAC;EAC7C,CAAC;EAED;EACAE,eAAeA,CAACC,MAAM,EAAE;IACtB,OAAOL,KAAK,CAACM,GAAG,CAAC,kBAAkB,EAAE;MAAED;IAAO,CAAC,CAAC;EAClD,CAAC;EAED;EACAE,cAAcA,CAACC,IAAI,EAAE;IACnB,OAAOR,KAAK,CAACM,GAAG,CAAC,oBAAoBE,IAAI,EAAE,CAAC;EAC9C,CAAC;EAED;EACAC,oBAAoBA,CAACD,IAAI,EAAE;IACzB;IACA,MAAME,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IACtC,IAAIC,GAAG,GAAGL,IAAI,CAACM,QAAQ,CAAC,GAAG,CAAC,GACxB,GAAGN,IAAI,OAAOE,SAAS,EAAE,GACzB,yBAAyBF,IAAI,OAAOE,SAAS,EAAE;IAEnDK,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,GAAG,CAAC;IAC5B,OAAOb,KAAK,CAACM,GAAG,CAACO,GAAG,CAAC;EACvB,CAAC;EAED;EACAI,iBAAiBA,CAACT,IAAI,EAAEN,IAAI,EAAE;IAC5B,OAAOF,KAAK,CAACkB,GAAG,CAAC,yBAAyBV,IAAI,EAAE,EAAEN,IAAI,CAAC;EACzD,CAAC;EAED;EACAiB,iBAAiBA,CAACX,IAAI,EAAEN,IAAI,GAAG,CAAC,CAAC,EAAE;IACjC,OAAOF,KAAK,CAACG,IAAI,CAAC,gCAAgCK,IAAI,EAAE,EAAEN,IAAI,CAAC;EACjE,CAAC;EAED;EACAkB,oBAAoBA,CAACZ,IAAI,EAAE;IACzB,OAAOR,KAAK,CAACM,GAAG,CAAC,2BAA2BE,IAAI,EAAE,CAAC;EACrD,CAAC;EAED;EACAa,wBAAwBA,CAACC,WAAW,EAAEjB,MAAM,EAAE;IAC5C,OAAOL,KAAK,CAACM,GAAG,CAAC,kBAAkBgB,WAAW,eAAe,EAAE;MAAEjB;IAAO,CAAC,CAAC;EAC5E;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}