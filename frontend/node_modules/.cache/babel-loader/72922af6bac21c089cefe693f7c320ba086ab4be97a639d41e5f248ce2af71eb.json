{"ast":null,"code":"import axios from 'axios';\n\n// Unsplash API\nexport const unsplashApi = {\n  // 搜索图片\n  searchPhotos(query, page = 1, perPage = 10) {\n    return axios.get('/api/unsplash/search', {\n      params: {\n        query,\n        page,\n        per_page: perPage\n      }\n    });\n  },\n  // 获取随机图片\n  getRandomPhoto(query) {\n    return axios.get('/api/unsplash/random', {\n      params: {\n        query\n      }\n    });\n  }\n};\n\n// 设备API\nexport const equipmentApi = {\n  // 获取设备列表\n  getEquipments(params) {\n    return axios.get('/api/equipment', {\n      params\n    });\n  },\n  // 获取设备详情\n  getEquipment(id) {\n    return axios.get(`/api/equipment/${id}`);\n  },\n  // 获取设备类别\n  getCategories() {\n    return axios.get('/api/equipment/categories');\n  },\n  // 获取设备可用性\n  getAvailability(id, startDate, endDate) {\n    return axios.get(`/api/equipment/${id}/availability`, {\n      params: {\n        start_date: startDate,\n        end_date: endDate\n      }\n    });\n  },\n  // 创建设备（管理员）\n  createEquipment(data) {\n    return axios.post('/api/equipment', data);\n  },\n  // 更新设备（管理员）\n  updateEquipment(id, data) {\n    return axios.put(`/api/equipment/${id}`, data);\n  },\n  // 删除设备（管理员）\n  deleteEquipment(id) {\n    return axios.delete(`/api/equipment/${id}`);\n  }\n};\n\n// 设备类别API\nexport const categoryApi = {\n  // 获取设备类别列表\n  getCategories(params) {\n    return axios.get('/api/equipment-categories', {\n      params\n    });\n  },\n  // 获取所有设备类别\n  getAllCategories() {\n    return axios.get('/api/equipment-categories/all');\n  },\n  // 获取设备类别详情\n  getCategory(id) {\n    return axios.get(`/api/equipment-categories/${id}`);\n  },\n  // 创建设备类别（管理员）\n  createCategory(data) {\n    return axios.post('/api/equipment-categories', data);\n  },\n  // 更新设备类别（管理员）\n  updateCategory(id, data) {\n    return axios.put(`/api/equipment-categories/${id}`, data);\n  },\n  // 删除设备类别（管理员）\n  deleteCategory(id) {\n    return axios.delete(`/api/equipment-categories/${id}`);\n  }\n};\n\n// 预定API\nexport const reservationApi = {\n  // 创建预定\n  createReservation(data) {\n    return axios.post('/api/reservation', data);\n  },\n  // 获取预定列表（管理员）\n  getReservations(params) {\n    return axios.get('/api/reservation', {\n      params\n    });\n  },\n  // 获取预定详情\n  getReservation(code) {\n    return axios.get(`/api/reservation/${code}`);\n  },\n  // 通过预定码或预约序号获取预定详情\n  getReservationByCode(code, reservationNumber = null) {\n    // 添加时间戳参数，防止缓存\n    const timestamp = new Date().getTime();\n\n    // 构建基本URL\n    let url = code.includes('?') ? `${code}&_t=${timestamp}` : `/api/reservation/code/${code}?_t=${timestamp}`;\n\n    // 如果提供了预约序号，添加到URL参数中\n    if (reservationNumber) {\n      url += `&reservation_number=${reservationNumber}`;\n      console.log(`添加预约序号参数: ${reservationNumber}`);\n    }\n    console.log(`获取预约详情URL: ${url}`);\n    return axios.get(url);\n  },\n  // 更新预定\n  updateReservation(code, data) {\n    return axios.put(`/api/reservation/code/${code}`, data);\n  },\n  // 取消预定\n  cancelReservation(code, data) {\n    return axios.post(`/api/reservation/cancel/code/${code}`, data);\n  },\n  // 获取预定二维码\n  getReservationQrcode(code) {\n    return axios.get(`/api/reservation/qrcode/${code}`);\n  }\n};\n\n// 循环预约API\nexport const recurringReservationApi = {\n  // 创建循环预约\n  createRecurringReservation(data) {\n    return axios.post('/api/recurring-reservation', data);\n  },\n  // 获取循环预约列表\n  getRecurringReservations(params) {\n    return axios.get('/api/recurring-reservation', {\n      params\n    });\n  },\n  // 获取循环预约详情\n  getRecurringReservation(id) {\n    return axios.get(`/api/recurring-reservation/${id}`);\n  },\n  // 通过预定码获取循环预约详情\n  getRecurringReservationByCode(code) {\n    return axios.get(`/api/recurring-reservation/code/${code}`);\n  },\n  // 更新循环预约\n  updateRecurringReservation(id, data, updateFutureOnly = 1) {\n    return axios.put(`/api/recurring-reservation/${id}`, data, {\n      params: {\n        update_future_only: updateFutureOnly\n      }\n    });\n  },\n  // 取消循环预约\n  cancelRecurringReservation(id, cancelFutureOnly = 1, userEmail = null, lang = 'zh_CN') {\n    return axios.post(`/api/recurring-reservation/cancel/${id}`, null, {\n      params: {\n        cancel_future_only: cancelFutureOnly,\n        user_email: userEmail,\n        lang: lang\n      }\n    });\n  },\n  // 获取循环预约的子预约\n  getChildReservations(id, includePast = 0) {\n    return axios.get(`/api/recurring-reservation/${id}/reservations`, {\n      params: {\n        include_past: includePast\n      }\n    });\n  }\n};\n\n// 管理员API\nexport const adminApi = {\n  // 管理员登录\n  login(username, password) {\n    const formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    return axios.post('/api/admin/login', formData);\n  },\n  // 获取管理员列表（超级管理员）\n  getAdmins(params) {\n    return axios.get('/api/admin', {\n      params\n    });\n  },\n  // 创建管理员（超级管理员）\n  createAdmin(data) {\n    return axios.post('/api/admin', data);\n  },\n  // 更新管理员\n  updateAdmin(id, data) {\n    return axios.put(`/api/admin/${id}`, data);\n  },\n  // 删除管理员（超级管理员）\n  deleteAdmin(id) {\n    return axios.delete(`/api/admin/${id}`);\n  },\n  // 获取系统设置\n  getSettings() {\n    return axios.get('/api/admin/settings');\n  },\n  // 更新系统设置\n  updateSettings(data) {\n    return axios.put('/api/admin/settings', data);\n  }\n};\nexport default {\n  equipment: equipmentApi,\n  category: categoryApi,\n  reservation: reservationApi,\n  recurringReservation: recurringReservationApi,\n  admin: adminApi,\n  unsplash: unsplashApi\n};","map":{"version":3,"names":["axios","unsplashApi","searchPhotos","query","page","perPage","get","params","per_page","getRandomPhoto","equipmentApi","getEquipments","getEquipment","id","getCategories","getAvailability","startDate","endDate","start_date","end_date","createEquipment","data","post","updateEquipment","put","deleteEquipment","delete","categoryApi","getAllCategories","getCategory","createCategory","updateCategory","deleteCategory","reservationApi","createReservation","getReservations","getReservation","code","getReservationByCode","reservationNumber","timestamp","Date","getTime","url","includes","console","log","updateReservation","cancelReservation","getReservationQrcode","recurringReservationApi","createRecurringReservation","getRecurringReservations","getRecurringReservation","getRecurringReservationByCode","updateRecurringReservation","updateFutureOnly","update_future_only","cancelRecurringReservation","cancelFutureOnly","userEmail","lang","cancel_future_only","user_email","getChildReservations","includePast","include_past","adminApi","login","username","password","formData","FormData","append","getAdmins","createAdmin","updateAdmin","deleteAdmin","getSettings","updateSettings","equipment","category","reservation","recurringReservation","admin","unsplash"],"sources":["D:/equipment-reservation-system/frontend/src/api/index.js"],"sourcesContent":["import axios from 'axios'\n\n// Unsplash API\nexport const unsplashApi = {\n  // 搜索图片\n  searchPhotos(query, page = 1, perPage = 10) {\n    return axios.get('/api/unsplash/search', {\n      params: {\n        query,\n        page,\n        per_page: perPage\n      }\n    })\n  },\n\n  // 获取随机图片\n  getRandomPhoto(query) {\n    return axios.get('/api/unsplash/random', {\n      params: { query }\n    })\n  }\n}\n\n// 设备API\nexport const equipmentApi = {\n  // 获取设备列表\n  getEquipments(params) {\n    return axios.get('/api/equipment', { params })\n  },\n\n  // 获取设备详情\n  getEquipment(id) {\n    return axios.get(`/api/equipment/${id}`)\n  },\n\n  // 获取设备类别\n  getCategories() {\n    return axios.get('/api/equipment/categories')\n  },\n\n  // 获取设备可用性\n  getAvailability(id, startDate, endDate) {\n    return axios.get(`/api/equipment/${id}/availability`, {\n      params: { start_date: startDate, end_date: endDate }\n    })\n  },\n\n  // 创建设备（管理员）\n  createEquipment(data) {\n    return axios.post('/api/equipment', data)\n  },\n\n  // 更新设备（管理员）\n  updateEquipment(id, data) {\n    return axios.put(`/api/equipment/${id}`, data)\n  },\n\n  // 删除设备（管理员）\n  deleteEquipment(id) {\n    return axios.delete(`/api/equipment/${id}`)\n  }\n}\n\n// 设备类别API\nexport const categoryApi = {\n  // 获取设备类别列表\n  getCategories(params) {\n    return axios.get('/api/equipment-categories', { params })\n  },\n\n  // 获取所有设备类别\n  getAllCategories() {\n    return axios.get('/api/equipment-categories/all')\n  },\n\n  // 获取设备类别详情\n  getCategory(id) {\n    return axios.get(`/api/equipment-categories/${id}`)\n  },\n\n  // 创建设备类别（管理员）\n  createCategory(data) {\n    return axios.post('/api/equipment-categories', data)\n  },\n\n  // 更新设备类别（管理员）\n  updateCategory(id, data) {\n    return axios.put(`/api/equipment-categories/${id}`, data)\n  },\n\n  // 删除设备类别（管理员）\n  deleteCategory(id) {\n    return axios.delete(`/api/equipment-categories/${id}`)\n  }\n}\n\n// 预定API\nexport const reservationApi = {\n  // 创建预定\n  createReservation(data) {\n    return axios.post('/api/reservation', data)\n  },\n\n  // 获取预定列表（管理员）\n  getReservations(params) {\n    return axios.get('/api/reservation', { params })\n  },\n\n  // 获取预定详情\n  getReservation(code) {\n    return axios.get(`/api/reservation/${code}`)\n  },\n\n  // 通过预定码或预约序号获取预定详情\n  getReservationByCode(code, reservationNumber = null) {\n    // 添加时间戳参数，防止缓存\n    const timestamp = new Date().getTime()\n\n    // 构建基本URL\n    let url = code.includes('?')\n      ? `${code}&_t=${timestamp}`\n      : `/api/reservation/code/${code}?_t=${timestamp}`\n\n    // 如果提供了预约序号，添加到URL参数中\n    if (reservationNumber) {\n      url += `&reservation_number=${reservationNumber}`\n      console.log(`添加预约序号参数: ${reservationNumber}`)\n    }\n\n    console.log(`获取预约详情URL: ${url}`)\n    return axios.get(url)\n  },\n\n  // 更新预定\n  updateReservation(code, data) {\n    return axios.put(`/api/reservation/code/${code}`, data)\n  },\n\n  // 取消预定\n  cancelReservation(code, data) {\n    return axios.post(`/api/reservation/cancel/code/${code}`, data)\n  },\n\n  // 获取预定二维码\n  getReservationQrcode(code) {\n    return axios.get(`/api/reservation/qrcode/${code}`)\n  }\n}\n\n// 循环预约API\nexport const recurringReservationApi = {\n  // 创建循环预约\n  createRecurringReservation(data) {\n    return axios.post('/api/recurring-reservation', data)\n  },\n\n  // 获取循环预约列表\n  getRecurringReservations(params) {\n    return axios.get('/api/recurring-reservation', { params })\n  },\n\n  // 获取循环预约详情\n  getRecurringReservation(id) {\n    return axios.get(`/api/recurring-reservation/${id}`)\n  },\n\n  // 通过预定码获取循环预约详情\n  getRecurringReservationByCode(code) {\n    return axios.get(`/api/recurring-reservation/code/${code}`)\n  },\n\n  // 更新循环预约\n  updateRecurringReservation(id, data, updateFutureOnly = 1) {\n    return axios.put(`/api/recurring-reservation/${id}`, data, {\n      params: { update_future_only: updateFutureOnly }\n    })\n  },\n\n  // 取消循环预约\n  cancelRecurringReservation(id, cancelFutureOnly = 1, userEmail = null, lang = 'zh_CN') {\n    return axios.post(`/api/recurring-reservation/cancel/${id}`, null, {\n      params: {\n        cancel_future_only: cancelFutureOnly,\n        user_email: userEmail,\n        lang: lang\n      }\n    })\n  },\n\n  // 获取循环预约的子预约\n  getChildReservations(id, includePast = 0) {\n    return axios.get(`/api/recurring-reservation/${id}/reservations`, {\n      params: { include_past: includePast }\n    })\n  }\n}\n\n// 管理员API\nexport const adminApi = {\n  // 管理员登录\n  login(username, password) {\n    const formData = new FormData()\n    formData.append('username', username)\n    formData.append('password', password)\n    return axios.post('/api/admin/login', formData)\n  },\n\n  // 获取管理员列表（超级管理员）\n  getAdmins(params) {\n    return axios.get('/api/admin', { params })\n  },\n\n  // 创建管理员（超级管理员）\n  createAdmin(data) {\n    return axios.post('/api/admin', data)\n  },\n\n  // 更新管理员\n  updateAdmin(id, data) {\n    return axios.put(`/api/admin/${id}`, data)\n  },\n\n  // 删除管理员（超级管理员）\n  deleteAdmin(id) {\n    return axios.delete(`/api/admin/${id}`)\n  },\n\n  // 获取系统设置\n  getSettings() {\n    return axios.get('/api/admin/settings')\n  },\n\n  // 更新系统设置\n  updateSettings(data) {\n    return axios.put('/api/admin/settings', data)\n  }\n}\n\nexport default {\n  equipment: equipmentApi,\n  category: categoryApi,\n  reservation: reservationApi,\n  recurringReservation: recurringReservationApi,\n  admin: adminApi,\n  unsplash: unsplashApi\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}