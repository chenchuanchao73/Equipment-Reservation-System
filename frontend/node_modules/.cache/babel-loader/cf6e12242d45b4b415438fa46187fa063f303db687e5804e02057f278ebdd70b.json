{"ast":null,"code":"import axios from 'axios';\nimport store from '@/store';\nimport router from '@/router';\nimport { Message } from 'element-ui';\n\n// 获取当前主机名和端口\nconst hostname = window.location.hostname;\nconsole.log('Current hostname:', hostname);\n\n// 动态设置API的baseURL\nlet apiBaseURL = '';\nif (hostname === 'localhost' || hostname === '127.0.0.1') {\n  // 本地开发环境\n  apiBaseURL = 'http://localhost:8000';\n} else {\n  // 局域网/生产环境：使用当前主机IP，但端口改为后端端口\n  // 这里假设前端和后端在同一台服务器上，只是端口不同\n  apiBaseURL = `http://${hostname}:8000`;\n}\nconsole.log('Generated API URL:', apiBaseURL);\n\n// 创建axios实例\nconst service = axios.create({\n  baseURL: apiBaseURL,\n  timeout: 10000\n});\nconsole.log('API Base URL:', service.defaults.baseURL);\n\n// 请求拦截器\nservice.interceptors.request.use(config => {\n  // 从localStorage获取token\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(response => {\n  return response.data;\n}, error => {\n  console.error('Response error:', error);\n  if (error.response) {\n    const {\n      status,\n      data\n    } = error.response;\n\n    // 处理不同的错误状态码\n    switch (status) {\n      case 400:\n        Message.error(data.detail || '请求参数错误');\n        break;\n      case 401:\n        Message.warning('您的会话已过期，请重新登录');\n        store.dispatch('logout');\n        router.push('/admin/login');\n        break;\n      case 403:\n        Message.error('没有权限访问该资源');\n        break;\n      case 404:\n        Message.error('请求的资源不存在');\n        break;\n      case 500:\n        Message.error('服务器内部错误');\n        break;\n      default:\n        Message.error(`请求失败: ${error.message}`);\n    }\n  } else {\n    Message.error('网络错误，请检查您的网络连接');\n  }\n  return Promise.reject(error);\n});\nexport default service;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}