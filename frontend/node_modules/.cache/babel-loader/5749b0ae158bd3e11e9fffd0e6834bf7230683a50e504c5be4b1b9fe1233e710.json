{"ast":null,"code":"import { reservationApi } from '@/api';\nimport { formatDate } from '@/utils/date';\nexport default {\n  name: 'ReservationDetail',\n  props: {\n    isAdmin: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      loading: true,\n      reservation: null,\n      cancelDialogVisible: false,\n      cancelling: false\n    };\n  },\n  computed: {\n    // 是否可以取消预定\n    canCancel() {\n      if (!this.reservation) return false;\n\n      // 只有确认状态的预定可以取消\n      return this.reservation.status === 'confirmed';\n    }\n  },\n  created() {\n    this.fetchReservation();\n  },\n  methods: {\n    // 获取预定详情\n    async fetchReservation() {\n      this.loading = true;\n      try {\n        const code = this.$route.params.code;\n        let response;\n        if (this.isAdmin) {\n          // 管理员查询\n          response = await reservationApi.getReservation(code);\n        } else {\n          // 用户查询\n          response = await reservationApi.getReservationByCode(code);\n        }\n        if (response.data.success) {\n          this.reservation = response.data.data;\n        } else {\n          this.$message.error(response.data.message || this.$t('reservation.notFound'));\n          this.reservation = null;\n        }\n      } catch (error) {\n        console.error('Failed to fetch reservation:', error);\n        this.$message.error(this.$t('common.error'));\n        this.reservation = null;\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 返回上一页\n    goBack() {\n      if (this.$route.query.from === 'admin') {\n        this.$router.push('/admin/reservations');\n      } else if (this.$route.query.from === 'query') {\n        this.$router.push('/reservation/query');\n      } else {\n        this.$router.go(-1);\n      }\n    },\n    // 格式化日期时间\n    formatDateTime(datetime) {\n      return formatDate(datetime);\n    },\n    // 获取状态类名\n    getStatusClass(status) {\n      const statusMap = {\n        confirmed: 'status-confirmed',\n        cancelled: 'status-cancelled',\n        completed: 'status-completed',\n        in_use: 'status-in-use',\n        expired: 'status-expired'\n      };\n      return statusMap[status] || 'status-unknown';\n    },\n    // 获取状态图标\n    getStatusIcon(status) {\n      const iconMap = {\n        confirmed: 'el-icon-check',\n        cancelled: 'el-icon-close',\n        completed: 'el-icon-success',\n        in_use: 'el-icon-time',\n        expired: 'el-icon-warning'\n      };\n      return iconMap[status] || 'el-icon-question';\n    },\n    // 获取状态文本\n    getStatusText(status) {\n      const statusMap = {\n        confirmed: this.$t('reservation.statusConfirmed'),\n        cancelled: this.$t('reservation.statusCancelled'),\n        completed: this.$t('reservation.statusCompleted'),\n        in_use: this.$t('reservation.statusInUse'),\n        expired: this.$t('reservation.statusExpired')\n      };\n      return statusMap[status] || this.$t('reservation.statusUnknown');\n    },\n    // 显示取消对话框\n    showCancelDialog() {\n      this.cancelDialogVisible = true;\n    },\n    // 取消预定\n    async cancelReservation() {\n      this.cancelling = true;\n      try {\n        const response = await reservationApi.cancelReservation(this.reservation.reservation_code, {\n          reservation_number: this.reservation.reservation_number\n        });\n        if (response.data.success) {\n          this.$message.success(this.$t('reservation.cancelSuccess'));\n          this.cancelDialogVisible = false;\n          // 重新获取预定信息\n          await this.fetchReservation();\n        } else {\n          this.$message.error(response.data.message || this.$t('reservation.cancelFailed'));\n        }\n      } catch (error) {\n        console.error('Failed to cancel reservation:', error);\n        this.$message.error(this.$t('reservation.cancelFailed'));\n      } finally {\n        this.cancelling = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["reservationApi","formatDate","name","props","isAdmin","type","Boolean","default","data","loading","reservation","cancelDialogVisible","cancelling","computed","canCancel","status","created","fetchReservation","methods","code","$route","params","response","getReservation","getReservationByCode","success","$message","error","message","$t","console","goBack","query","from","$router","push","go","formatDateTime","datetime","getStatusClass","statusMap","confirmed","cancelled","completed","in_use","expired","getStatusIcon","iconMap","getStatusText","showCancelDialog","cancelReservation","reservation_code","reservation_number"],"sources":["src/views/reservation/ReservationDetail.vue"],"sourcesContent":["<template>\n  <div class=\"reservation-detail\">\n    <div v-if=\"loading\" class=\"loading-container\">\n      <el-skeleton :rows=\"10\" animated />\n    </div>\n\n    <div v-else-if=\"!reservation\" class=\"error-container\">\n      <el-result\n        icon=\"error\"\n        :title=\"$t('error.errorMessage')\"\n        :sub-title=\"$t('reservation.reservationNotFound')\"\n      >\n        <template #extra>\n          <el-button type=\"primary\" @click=\"$router.push('/reservation/query')\">\n            {{ $t('reservation.query') }}\n          </el-button>\n        </template>\n      </el-result>\n    </div>\n\n    <div v-else>\n      <!-- 返回按钮 -->\n      <div class=\"back-link\">\n        <el-button icon=\"el-icon-arrow-left\" @click=\"goBack\">\n          {{ $t('common.back') }}\n        </el-button>\n      </div>\n\n      <h1 class=\"page-title\">{{ $t('reservation.detail') }}</h1>\n\n      <!-- 预定状态 -->\n      <div class=\"reservation-status-card\" :class=\"getStatusClass(reservation.status)\">\n        <div class=\"status-icon\">\n          <i :class=\"getStatusIcon(reservation.status)\"></i>\n        </div>\n        <div class=\"status-text\">\n          <h2>{{ getStatusText(reservation.status) }}</h2>\n          <p>{{ $t('reservation.code') }}: {{ reservation.reservation_code }}</p>\n        </div>\n      </div>\n\n      <!-- 预定详情 -->\n      <el-card shadow=\"never\" class=\"detail-card\">\n        <div slot=\"header\">\n          <span>{{ $t('reservation.detail') }}</span>\n        </div>\n\n        <el-descriptions :column=\"1\" border>\n          <el-descriptions-item :label=\"$t('reservation.equipmentName')\">\n            {{ reservation.equipment_name }}\n          </el-descriptions-item>\n\n          <el-descriptions-item :label=\"$t('equipment.category')\" v-if=\"reservation.equipment_category\">\n            {{ reservation.equipment_category }}\n          </el-descriptions-item>\n\n          <el-descriptions-item :label=\"$t('equipment.location')\" v-if=\"reservation.equipment_location\">\n            {{ reservation.equipment_location }}\n          </el-descriptions-item>\n\n          <el-descriptions-item :label=\"$t('reservation.startTime')\">\n            {{ formatDateTime(reservation.start_datetime) }}\n          </el-descriptions-item>\n\n          <el-descriptions-item :label=\"$t('reservation.endTime')\">\n            {{ formatDateTime(reservation.end_datetime) }}\n          </el-descriptions-item>\n\n          <el-descriptions-item :label=\"$t('reservation.purpose')\" v-if=\"reservation.purpose\">\n            {{ reservation.purpose }}\n          </el-descriptions-item>\n        </el-descriptions>\n      </el-card>\n\n      <!-- 用户信息 -->\n      <el-card shadow=\"never\" class=\"user-card\">\n        <div slot=\"header\">\n          <span>{{ $t('common.userInfo') }}</span>\n        </div>\n\n        <el-descriptions :column=\"1\" border>\n          <el-descriptions-item :label=\"$t('reservation.userName')\">\n            {{ reservation.user_name }}\n          </el-descriptions-item>\n\n          <el-descriptions-item :label=\"$t('reservation.userDepartment')\">\n            {{ reservation.user_department }}\n          </el-descriptions-item>\n\n          <el-descriptions-item :label=\"$t('reservation.userContact')\">\n            {{ reservation.user_contact }}\n          </el-descriptions-item>\n\n          <el-descriptions-item :label=\"$t('reservation.userEmail')\" v-if=\"reservation.user_email\">\n            {{ reservation.user_email }}\n          </el-descriptions-item>\n        </el-descriptions>\n      </el-card>\n\n      <!-- 操作按钮 -->\n      <div class=\"action-buttons\" v-if=\"canCancel\">\n        <el-button type=\"danger\" @click=\"showCancelDialog\" icon=\"el-icon-close\">\n          {{ $t('reservation.cancel') }}\n        </el-button>\n      </div>\n\n      <!-- 取消预定对话框 -->\n      <el-dialog\n        :title=\"$t('reservation.cancelConfirmation')\"\n        :visible.sync=\"cancelDialogVisible\"\n        width=\"400px\"\n      >\n        <p>{{ $t('reservation.cancelConfirmationMessage') }}</p>\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"cancelDialogVisible = false\">{{ $t('common.cancel') }}</el-button>\n          <el-button type=\"danger\" @click=\"cancelReservation\" :loading=\"cancelling\">\n            {{ $t('reservation.confirm') }}\n          </el-button>\n        </div>\n      </el-dialog>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { reservationApi } from '@/api'\nimport { formatDate } from '@/utils/date'\n\nexport default {\n  name: 'ReservationDetail',\n\n  props: {\n    isAdmin: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      loading: true,\n      reservation: null,\n      cancelDialogVisible: false,\n      cancelling: false\n    }\n  },\n\n  computed: {\n    // 是否可以取消预定\n    canCancel() {\n      if (!this.reservation) return false\n\n      // 只有确认状态的预定可以取消\n      return this.reservation.status === 'confirmed'\n    }\n  },\n\n  created() {\n    this.fetchReservation()\n  },\n\n  methods: {\n    // 获取预定详情\n    async fetchReservation() {\n      this.loading = true\n      try {\n        const code = this.$route.params.code\n        let response\n\n        if (this.isAdmin) {\n          // 管理员查询\n          response = await reservationApi.getReservation(code)\n        } else {\n          // 用户查询\n          response = await reservationApi.getReservationByCode(code)\n        }\n\n        if (response.data.success) {\n          this.reservation = response.data.data\n        } else {\n          this.$message.error(response.data.message || this.$t('reservation.notFound'))\n          this.reservation = null\n        }\n      } catch (error) {\n        console.error('Failed to fetch reservation:', error)\n        this.$message.error(this.$t('common.error'))\n        this.reservation = null\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // 返回上一页\n    goBack() {\n      if (this.$route.query.from === 'admin') {\n        this.$router.push('/admin/reservations')\n      } else if (this.$route.query.from === 'query') {\n        this.$router.push('/reservation/query')\n      } else {\n        this.$router.go(-1)\n      }\n    },\n\n    // 格式化日期时间\n    formatDateTime(datetime) {\n      return formatDate(datetime)\n    },\n\n    // 获取状态类名\n    getStatusClass(status) {\n      const statusMap = {\n        confirmed: 'status-confirmed',\n        cancelled: 'status-cancelled',\n        completed: 'status-completed',\n        in_use: 'status-in-use',\n        expired: 'status-expired'\n      }\n      return statusMap[status] || 'status-unknown'\n    },\n\n    // 获取状态图标\n    getStatusIcon(status) {\n      const iconMap = {\n        confirmed: 'el-icon-check',\n        cancelled: 'el-icon-close',\n        completed: 'el-icon-success',\n        in_use: 'el-icon-time',\n        expired: 'el-icon-warning'\n      }\n      return iconMap[status] || 'el-icon-question'\n    },\n\n    // 获取状态文本\n    getStatusText(status) {\n      const statusMap = {\n        confirmed: this.$t('reservation.statusConfirmed'),\n        cancelled: this.$t('reservation.statusCancelled'),\n        completed: this.$t('reservation.statusCompleted'),\n        in_use: this.$t('reservation.statusInUse'),\n        expired: this.$t('reservation.statusExpired')\n      }\n      return statusMap[status] || this.$t('reservation.statusUnknown')\n    },\n\n    // 显示取消对话框\n    showCancelDialog() {\n      this.cancelDialogVisible = true\n    },\n\n    // 取消预定\n    async cancelReservation() {\n      this.cancelling = true\n      try {\n        const response = await reservationApi.cancelReservation(\n          this.reservation.reservation_code,\n          { reservation_number: this.reservation.reservation_number }\n        )\n\n        if (response.data.success) {\n          this.$message.success(this.$t('reservation.cancelSuccess'))\n          this.cancelDialogVisible = false\n          // 重新获取预定信息\n          await this.fetchReservation()\n        } else {\n          this.$message.error(response.data.message || this.$t('reservation.cancelFailed'))\n        }\n      } catch (error) {\n        console.error('Failed to cancel reservation:', error)\n        this.$message.error(this.$t('reservation.cancelFailed'))\n      } finally {\n        this.cancelling = false\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.reservation-detail {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.page-title {\n  font-size: 24px;\n  margin-bottom: 20px;\n  color: #303133;\n}\n\n.back-link {\n  margin-bottom: 20px;\n}\n\n.loading-container {\n  padding: 40px 0;\n  text-align: center;\n}\n\n.error-container {\n  padding: 40px 0;\n}\n\n.reservation-status-card {\n  display: flex;\n  align-items: center;\n  padding: 20px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  color: white;\n}\n\n.status-icon {\n  font-size: 40px;\n  margin-right: 20px;\n}\n\n.status-text h2 {\n  margin: 0 0 10px 0;\n  font-size: 20px;\n}\n\n.status-text p {\n  margin: 0;\n  font-size: 16px;\n}\n\n.status-confirmed {\n  background-color: #67c23a;\n}\n\n.status-cancelled {\n  background-color: #f56c6c;\n}\n\n.status-completed {\n  background-color: #909399;\n}\n\n.status-in-use {\n  background-color: #409eff;\n}\n\n.status-expired {\n  background-color: #e6a23c;\n}\n\n.status-unknown {\n  background-color: #909399;\n}\n\n.detail-card, .user-card {\n  margin-bottom: 20px;\n}\n\n.action-buttons {\n  margin-top: 30px;\n  text-align: center;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}