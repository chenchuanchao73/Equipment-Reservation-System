{"ast":null,"code":"import { mapActions } from 'vuex';\nexport default {\n  name: 'AdminLogin',\n  data() {\n    return {\n      loading: false,\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          message: this.$t('reservation.requiredField'),\n          trigger: 'blur'\n        }, {\n          min: 3,\n          max: 20,\n          message: this.$t('common.lengthLimit', {\n            min: 3,\n            max: 20\n          }),\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: this.$t('reservation.requiredField'),\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 20,\n          message: this.$t('common.lengthLimit', {\n            min: 6,\n            max: 20\n          }),\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    ...mapActions(['login']),\n    handleLogin() {\n      this.$refs.loginForm.validate(async valid => {\n        if (!valid) {\n          return false;\n        }\n        this.loading = true;\n        try {\n          const success = await this.login({\n            username: this.loginForm.username,\n            password: this.loginForm.password\n          });\n          if (success) {\n            this.$message.success(this.$t('admin.loginSuccess'));\n\n            // 获取重定向URL\n            const redirect = this.$route.query.redirect || '/admin/dashboard';\n            // 使用 router.replace 而不是 push，避免导航历史问题\n            this.$router.replace({\n              path: redirect\n            });\n          } else {\n            this.$message.error(this.$t('admin.loginFailed'));\n          }\n        } catch (error) {\n          console.error('Login error:', error);\n          this.$message.error(this.$t('admin.loginFailed'));\n        } finally {\n          this.loading = false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["mapActions","name","data","loading","loginForm","username","password","loginRules","required","message","$t","trigger","min","max","methods","handleLogin","$refs","validate","valid","success","login","$message","redirect","$route","query","$router","replace","path","error","console"],"sources":["src/views/admin/AdminLogin.vue"],"sourcesContent":["<template>\n  <div class=\"admin-login\">\n    <div class=\"login-container\">\n      <div class=\"login-header\">\n        <img src=\"@/assets/logo.png\" alt=\"Logo\" class=\"login-logo\" />\n        <h1>{{ $t('admin.login') }}</h1>\n      </div>\n\n      <el-card shadow=\"never\" class=\"login-card\">\n        <el-form\n          ref=\"loginForm\"\n          :model=\"loginForm\"\n          :rules=\"loginRules\"\n          label-position=\"top\"\n          @submit.native.prevent=\"handleLogin\"\n        >\n          <el-form-item :label=\"$t('admin.username')\" prop=\"username\">\n            <el-input\n              v-model=\"loginForm.username\"\n              prefix-icon=\"el-icon-user\"\n              :placeholder=\"$t('admin.username')\"\n            ></el-input>\n          </el-form-item>\n\n          <el-form-item :label=\"$t('admin.password')\" prop=\"password\">\n            <el-input\n              v-model=\"loginForm.password\"\n              prefix-icon=\"el-icon-lock\"\n              type=\"password\"\n              :placeholder=\"$t('admin.password')\"\n              show-password\n            ></el-input>\n          </el-form-item>\n\n          <el-form-item>\n            <el-button\n              type=\"primary\"\n              native-type=\"submit\"\n              :loading=\"loading\"\n              style=\"width: 100%\"\n            >\n              {{ $t('admin.loginButton') }}\n            </el-button>\n          </el-form-item>\n        </el-form>\n      </el-card>\n\n      <div class=\"login-footer\">\n        <el-button type=\"text\" @click=\"$router.push('/')\">\n          {{ $t('common.back') }} {{ $t('nav.home') }}\n        </el-button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\n\nexport default {\n  name: 'AdminLogin',\n\n  data() {\n    return {\n      loading: false,\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginRules: {\n        username: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'blur' },\n          { min: 3, max: 20, message: this.$t('common.lengthLimit', { min: 3, max: 20 }), trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'blur' },\n          { min: 6, max: 20, message: this.$t('common.lengthLimit', { min: 6, max: 20 }), trigger: 'blur' }\n        ]\n      }\n    }\n  },\n\n  methods: {\n    ...mapActions(['login']),\n\n    handleLogin() {\n      this.$refs.loginForm.validate(async (valid) => {\n        if (!valid) {\n          return false\n        }\n\n        this.loading = true\n\n        try {\n          const success = await this.login({\n            username: this.loginForm.username,\n            password: this.loginForm.password\n          })\n\n          if (success) {\n            this.$message.success(this.$t('admin.loginSuccess'))\n\n            // 获取重定向URL\n            const redirect = this.$route.query.redirect || '/admin/dashboard'\n            // 使用 router.replace 而不是 push，避免导航历史问题\n            this.$router.replace({ path: redirect })\n          } else {\n            this.$message.error(this.$t('admin.loginFailed'))\n          }\n        } catch (error) {\n          console.error('Login error:', error)\n          this.$message.error(this.$t('admin.loginFailed'))\n        } finally {\n          this.loading = false\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.admin-login {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 80vh;\n  background-color: #f5f7fa;\n}\n\n.login-container {\n  width: 100%;\n  max-width: 400px;\n  padding: 20px;\n}\n\n.login-header {\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.login-logo {\n  height: 60px;\n  margin-bottom: 20px;\n}\n\n.login-header h1 {\n  margin: 0;\n  font-size: 24px;\n  color: #303133;\n}\n\n.login-card {\n  margin-bottom: 20px;\n}\n\n.login-footer {\n  text-align: center;\n}\n</style>\n"],"mappings":"AAyDA,SAAAA,UAAA;AAEA;EACAC,IAAA;EAEAC,KAAA;IACA;MACAC,OAAA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,UAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA,OAAAC,EAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAJ,OAAA,OAAAC,EAAA;YAAAE,GAAA;YAAAC,GAAA;UAAA;UAAAF,OAAA;QAAA,EACA;QACAL,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA,OAAAC,EAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAJ,OAAA,OAAAC,EAAA;YAAAE,GAAA;YAAAC,GAAA;UAAA;UAAAF,OAAA;QAAA;MAEA;IACA;EACA;EAEAG,OAAA;IACA,GAAAd,UAAA;IAEAe,YAAA;MACA,KAAAC,KAAA,CAAAZ,SAAA,CAAAa,QAAA,OAAAC,KAAA;QACA,KAAAA,KAAA;UACA;QACA;QAEA,KAAAf,OAAA;QAEA;UACA,MAAAgB,OAAA,cAAAC,KAAA;YACAf,QAAA,OAAAD,SAAA,CAAAC,QAAA;YACAC,QAAA,OAAAF,SAAA,CAAAE;UACA;UAEA,IAAAa,OAAA;YACA,KAAAE,QAAA,CAAAF,OAAA,MAAAT,EAAA;;YAEA;YACA,MAAAY,QAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAF,QAAA;YACA;YACA,KAAAG,OAAA,CAAAC,OAAA;cAAAC,IAAA,EAAAL;YAAA;UACA;YACA,KAAAD,QAAA,CAAAO,KAAA,MAAAlB,EAAA;UACA;QACA,SAAAkB,KAAA;UACAC,OAAA,CAAAD,KAAA,iBAAAA,KAAA;UACA,KAAAP,QAAA,CAAAO,KAAA,MAAAlB,EAAA;QACA;UACA,KAAAP,OAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}