{"ast":null,"code":"// import { Calendar } from '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport FullCalendar from '@fullcalendar/vue';\nimport { formatDate } from '@/utils/date';\nexport default {\n  name: 'CalendarView',\n  components: {\n    FullCalendar\n  },\n  data() {\n    return {\n      calendarOptions: {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        initialView: 'dayGridMonth',\n        headerToolbar: false,\n        // 我们使用自定义的头部控件\n        events: [],\n        // 将通过API加载\n        eventClick: this.handleEventClick,\n        eventDidMount: this.handleEventDidMount,\n        datesSet: this.handleDatesSet,\n        locale: this.$i18n.locale === 'zh-CN' ? 'zh-cn' : 'en',\n        firstDay: 1,\n        // 周一作为一周的第一天\n        allDaySlot: false,\n        // 不显示\"全天\"选项\n        slotMinTime: '00:00:00',\n        // 从0点开始\n        slotMaxTime: '24:00:00',\n        // 到24点结束\n        height: 'auto',\n        dayHeaderFormat: {\n          weekday: 'long',\n          month: 'numeric',\n          day: 'numeric',\n          omitCommas: true\n        },\n        // 显示完整日期\n        titleFormat: {\n          year: 'numeric',\n          month: 'long'\n        } // 标题格式\n      },\n      detailVisible: false,\n      selectedEvent: null,\n      loading: false,\n      currentViewTitle: ''\n    };\n  },\n  mounted() {\n    this.loadEvents();\n  },\n  methods: {\n    // 加载预约数据\n    async loadEvents() {\n      this.loading = true;\n      try {\n        const calendarApi = this.$refs.fullCalendar.getApi();\n        const start = this.formatDate(calendarApi.view.activeStart);\n        const end = this.formatDate(calendarApi.view.activeEnd);\n        const response = await this.$http.get('/api/reservations/calendar', {\n          params: {\n            start_date: start,\n            end_date: end\n          }\n        });\n        if (response.data.success) {\n          calendarApi.removeAllEvents();\n          calendarApi.addEventSource(response.data.events);\n        } else {\n          this.$message.error(response.data.message || this.$t('calendar.loadFailed'));\n        }\n      } catch (error) {\n        console.error('Failed to load calendar events:', error);\n        this.$message.error(this.$t('calendar.loadFailed'));\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 处理日期范围变化\n    handleDatesSet(dateInfo) {\n      // 更新当前视图标题\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      this.currentViewTitle = calendarApi.view.title;\n\n      // 加载事件数据\n      this.loadEvents();\n    },\n    // 处理事件点击\n    handleEventClick(info) {\n      this.selectedEvent = info.event;\n      this.detailVisible = true;\n    },\n    // 处理事件渲染\n    handleEventDidMount(info) {\n      // 为循环预约添加标记\n      if (info.event.extendedProps.isRecurring) {\n        const recurringIcon = document.createElement('span');\n        recurringIcon.className = 'recurring-icon';\n        recurringIcon.innerHTML = '<i class=\"el-icon-refresh-right\"></i>';\n        info.el.querySelector('.fc-event-title').appendChild(recurringIcon);\n      }\n    },\n    // 切换视图\n    changeView(viewName) {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.changeView(viewName);\n    },\n    // 跳转到今天\n    today() {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.today();\n    },\n    // 上一个时间段\n    prev() {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.prev();\n    },\n    // 下一个时间段\n    next() {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.next();\n    },\n    // 查看预约详情\n    viewReservationDetail(reservationNumber) {\n      this.$router.push(`/reservation/number/${reservationNumber}`);\n    },\n    // 查看循环预约\n    viewRecurringReservation(recurringReservationId) {\n      this.$router.push(`/recurring-reservation/${recurringReservationId}`);\n    },\n    // 格式化日期\n    formatDate(date) {\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    },\n    // 格式化日期时间\n    formatDateTime(date) {\n      return formatDate(date, 'YYYY-MM-DD HH:mm');\n    },\n    // 获取状态文本\n    getStatusText(status) {\n      const statusMap = {\n        'confirmed': this.$t('reservation.confirmed'),\n        'in_use': this.$t('reservation.inUse'),\n        'cancelled': this.$t('reservation.cancelled'),\n        'expired': this.$t('reservation.expired')\n      };\n      return statusMap[status] || status;\n    }\n  }\n};","map":{"version":3,"names":["dayGridPlugin","timeGridPlugin","interactionPlugin","FullCalendar","formatDate","name","components","data","calendarOptions","plugins","initialView","headerToolbar","events","eventClick","handleEventClick","eventDidMount","handleEventDidMount","datesSet","handleDatesSet","locale","$i18n","firstDay","allDaySlot","slotMinTime","slotMaxTime","height","dayHeaderFormat","weekday","month","day","omitCommas","titleFormat","year","detailVisible","selectedEvent","loading","currentViewTitle","mounted","loadEvents","methods","calendarApi","$refs","fullCalendar","getApi","start","view","activeStart","end","activeEnd","response","$http","get","params","start_date","end_date","success","removeAllEvents","addEventSource","$message","error","message","$t","console","dateInfo","title","info","event","extendedProps","isRecurring","recurringIcon","document","createElement","className","innerHTML","el","querySelector","appendChild","changeView","viewName","today","prev","next","viewReservationDetail","reservationNumber","$router","push","viewRecurringReservation","recurringReservationId","date","getFullYear","String","getMonth","padStart","getDate","formatDateTime","getStatusText","status","statusMap"],"sources":["src/views/calendar/CalendarView.vue"],"sourcesContent":["<template>\n  <div class=\"calendar-view\">\n    <div class=\"calendar-header\">\n      <el-row type=\"flex\" justify=\"space-between\" align=\"middle\">\n        <el-col :span=\"8\">\n          <h1>{{ $t('calendar.title') }}</h1>\n          <h2 class=\"calendar-current-date\">{{ currentViewTitle }}</h2>\n        </el-col>\n        <el-col :span=\"16\">\n          <div class=\"calendar-controls\">\n            <el-button-group>\n              <el-button size=\"small\" @click=\"changeView('dayGridMonth')\">{{ $t('calendar.month') }}</el-button>\n              <el-button size=\"small\" @click=\"changeView('timeGridWeek')\">{{ $t('calendar.week') }}</el-button>\n              <el-button size=\"small\" @click=\"changeView('timeGridDay')\">{{ $t('calendar.day') }}</el-button>\n            </el-button-group>\n            <el-button size=\"small\" @click=\"today\">{{ $t('calendar.today') }}</el-button>\n            <el-button-group>\n              <el-button size=\"small\" icon=\"el-icon-arrow-left\" @click=\"prev\"></el-button>\n              <el-button size=\"small\" icon=\"el-icon-arrow-right\" @click=\"next\"></el-button>\n            </el-button-group>\n          </div>\n        </el-col>\n      </el-row>\n    </div>\n\n    <FullCalendar\n      ref=\"fullCalendar\"\n      :options=\"calendarOptions\"\n    />\n\n    <!-- 预约详情弹窗 -->\n    <el-dialog :visible.sync=\"detailVisible\" width=\"500px\">\n      <div v-if=\"selectedEvent\">\n        <h3>{{ selectedEvent.title }}</h3>\n        <p><strong>{{ $t('reservation.startTime') }}:</strong> {{ formatDateTime(selectedEvent.start) }}</p>\n        <p><strong>{{ $t('reservation.endTime') }}:</strong> {{ formatDateTime(selectedEvent.end) }}</p>\n        <p><strong>{{ $t('reservation.status') }}:</strong> {{ getStatusText(selectedEvent.extendedProps.status) }}</p>\n        <p><strong>{{ $t('reservation.userName') }}:</strong> {{ selectedEvent.extendedProps.userName }}</p>\n        <p><strong>{{ $t('reservation.userDepartment') }}:</strong> {{ selectedEvent.extendedProps.userDepartment }}</p>\n\n        <!-- 循环预约提示 -->\n        <div v-if=\"selectedEvent.extendedProps.isRecurring\" class=\"recurring-notice\">\n          <el-alert\n            :title=\"$t('reservation.partOfRecurringReservation')\"\n            type=\"info\"\n            :closable=\"false\">\n          </el-alert>\n          <el-button\n            type=\"text\"\n            @click=\"viewRecurringReservation(selectedEvent.extendedProps.recurringReservationId)\">\n            {{ $t('reservation.viewRecurringReservation') }}\n          </el-button>\n        </div>\n\n        <div class=\"dialog-footer\">\n          <el-button @click=\"viewReservationDetail(selectedEvent.extendedProps.reservationNumber)\">\n            {{ $t('reservation.viewDetail') }}\n          </el-button>\n        </div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n// import { Calendar } from '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport FullCalendar from '@fullcalendar/vue';\nimport { formatDate } from '@/utils/date';\n\nexport default {\n  name: 'CalendarView',\n  components: {\n    FullCalendar\n  },\n  data() {\n    return {\n      calendarOptions: {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        initialView: 'dayGridMonth',\n        headerToolbar: false, // 我们使用自定义的头部控件\n        events: [], // 将通过API加载\n        eventClick: this.handleEventClick,\n        eventDidMount: this.handleEventDidMount,\n        datesSet: this.handleDatesSet,\n        locale: this.$i18n.locale === 'zh-CN' ? 'zh-cn' : 'en',\n        firstDay: 1, // 周一作为一周的第一天\n        allDaySlot: false, // 不显示\"全天\"选项\n        slotMinTime: '00:00:00', // 从0点开始\n        slotMaxTime: '24:00:00', // 到24点结束\n        height: 'auto',\n        dayHeaderFormat: { weekday: 'long', month: 'numeric', day: 'numeric', omitCommas: true }, // 显示完整日期\n        titleFormat: { year: 'numeric', month: 'long' } // 标题格式\n      },\n      detailVisible: false,\n      selectedEvent: null,\n      loading: false,\n      currentViewTitle: ''\n    };\n  },\n  mounted() {\n    this.loadEvents();\n  },\n  methods: {\n    // 加载预约数据\n    async loadEvents() {\n      this.loading = true;\n      try {\n        const calendarApi = this.$refs.fullCalendar.getApi();\n        const start = this.formatDate(calendarApi.view.activeStart);\n        const end = this.formatDate(calendarApi.view.activeEnd);\n\n        const response = await this.$http.get('/api/reservations/calendar', {\n          params: {\n            start_date: start,\n            end_date: end\n          }\n        });\n\n        if (response.data.success) {\n          calendarApi.removeAllEvents();\n          calendarApi.addEventSource(response.data.events);\n        } else {\n          this.$message.error(response.data.message || this.$t('calendar.loadFailed'));\n        }\n      } catch (error) {\n        console.error('Failed to load calendar events:', error);\n        this.$message.error(this.$t('calendar.loadFailed'));\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    // 处理日期范围变化\n    handleDatesSet(dateInfo) {\n      // 更新当前视图标题\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      this.currentViewTitle = calendarApi.view.title;\n\n      // 加载事件数据\n      this.loadEvents();\n    },\n\n    // 处理事件点击\n    handleEventClick(info) {\n      this.selectedEvent = info.event;\n      this.detailVisible = true;\n    },\n\n    // 处理事件渲染\n    handleEventDidMount(info) {\n      // 为循环预约添加标记\n      if (info.event.extendedProps.isRecurring) {\n        const recurringIcon = document.createElement('span');\n        recurringIcon.className = 'recurring-icon';\n        recurringIcon.innerHTML = '<i class=\"el-icon-refresh-right\"></i>';\n        info.el.querySelector('.fc-event-title').appendChild(recurringIcon);\n      }\n    },\n\n    // 切换视图\n    changeView(viewName) {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.changeView(viewName);\n    },\n\n    // 跳转到今天\n    today() {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.today();\n    },\n\n    // 上一个时间段\n    prev() {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.prev();\n    },\n\n    // 下一个时间段\n    next() {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.next();\n    },\n\n    // 查看预约详情\n    viewReservationDetail(reservationNumber) {\n      this.$router.push(`/reservation/number/${reservationNumber}`);\n    },\n\n    // 查看循环预约\n    viewRecurringReservation(recurringReservationId) {\n      this.$router.push(`/recurring-reservation/${recurringReservationId}`);\n    },\n\n    // 格式化日期\n    formatDate(date) {\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    },\n\n    // 格式化日期时间\n    formatDateTime(date) {\n      return formatDate(date, 'YYYY-MM-DD HH:mm');\n    },\n\n    // 获取状态文本\n    getStatusText(status) {\n      const statusMap = {\n        'confirmed': this.$t('reservation.confirmed'),\n        'in_use': this.$t('reservation.inUse'),\n        'cancelled': this.$t('reservation.cancelled'),\n        'expired': this.$t('reservation.expired')\n      };\n      return statusMap[status] || status;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.calendar-view {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.calendar-header {\n  margin-bottom: 20px;\n}\n\n.calendar-controls {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n}\n\n.recurring-notice {\n  margin: 15px 0;\n}\n\n.recurring-icon {\n  margin-left: 5px;\n  color: #ff9800;\n}\n\n/* 自定义事件样式 */\n:deep(.fc-event) {\n  cursor: pointer;\n}\n\n:deep(.fc-event-title) {\n  font-weight: bold;\n}\n</style>\n"],"mappings":"AAiEA;AACA,OAAAA,aAAA;AACA,OAAAC,cAAA;AACA,OAAAC,iBAAA;AACA,OAAAC,YAAA;AACA,SAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAH;EACA;EACAI,KAAA;IACA;MACAC,eAAA;QACAC,OAAA,GAAAT,aAAA,EAAAC,cAAA,EAAAC,iBAAA;QACAQ,WAAA;QACAC,aAAA;QAAA;QACAC,MAAA;QAAA;QACAC,UAAA,OAAAC,gBAAA;QACAC,aAAA,OAAAC,mBAAA;QACAC,QAAA,OAAAC,cAAA;QACAC,MAAA,OAAAC,KAAA,CAAAD,MAAA;QACAE,QAAA;QAAA;QACAC,UAAA;QAAA;QACAC,WAAA;QAAA;QACAC,WAAA;QAAA;QACAC,MAAA;QACAC,eAAA;UAAAC,OAAA;UAAAC,KAAA;UAAAC,GAAA;UAAAC,UAAA;QAAA;QAAA;QACAC,WAAA;UAAAC,IAAA;UAAAJ,KAAA;QAAA;MACA;MACAK,aAAA;MACAC,aAAA;MACAC,OAAA;MACAC,gBAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,UAAA;EACA;EACAC,OAAA;IACA;IACA,MAAAD,WAAA;MACA,KAAAH,OAAA;MACA;QACA,MAAAK,WAAA,QAAAC,KAAA,CAAAC,YAAA,CAAAC,MAAA;QACA,MAAAC,KAAA,QAAAxC,UAAA,CAAAoC,WAAA,CAAAK,IAAA,CAAAC,WAAA;QACA,MAAAC,GAAA,QAAA3C,UAAA,CAAAoC,WAAA,CAAAK,IAAA,CAAAG,SAAA;QAEA,MAAAC,QAAA,cAAAC,KAAA,CAAAC,GAAA;UACAC,MAAA;YACAC,UAAA,EAAAT,KAAA;YACAU,QAAA,EAAAP;UACA;QACA;QAEA,IAAAE,QAAA,CAAA1C,IAAA,CAAAgD,OAAA;UACAf,WAAA,CAAAgB,eAAA;UACAhB,WAAA,CAAAiB,cAAA,CAAAR,QAAA,CAAA1C,IAAA,CAAAK,MAAA;QACA;UACA,KAAA8C,QAAA,CAAAC,KAAA,CAAAV,QAAA,CAAA1C,IAAA,CAAAqD,OAAA,SAAAC,EAAA;QACA;MACA,SAAAF,KAAA;QACAG,OAAA,CAAAH,KAAA,oCAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA,MAAAE,EAAA;MACA;QACA,KAAA1B,OAAA;MACA;IACA;IAEA;IACAjB,eAAA6C,QAAA;MACA;MACA,MAAAvB,WAAA,QAAAC,KAAA,CAAAC,YAAA,CAAAC,MAAA;MACA,KAAAP,gBAAA,GAAAI,WAAA,CAAAK,IAAA,CAAAmB,KAAA;;MAEA;MACA,KAAA1B,UAAA;IACA;IAEA;IACAxB,iBAAAmD,IAAA;MACA,KAAA/B,aAAA,GAAA+B,IAAA,CAAAC,KAAA;MACA,KAAAjC,aAAA;IACA;IAEA;IACAjB,oBAAAiD,IAAA;MACA;MACA,IAAAA,IAAA,CAAAC,KAAA,CAAAC,aAAA,CAAAC,WAAA;QACA,MAAAC,aAAA,GAAAC,QAAA,CAAAC,aAAA;QACAF,aAAA,CAAAG,SAAA;QACAH,aAAA,CAAAI,SAAA;QACAR,IAAA,CAAAS,EAAA,CAAAC,aAAA,oBAAAC,WAAA,CAAAP,aAAA;MACA;IACA;IAEA;IACAQ,WAAAC,QAAA;MACA,MAAAtC,WAAA,QAAAC,KAAA,CAAAC,YAAA,CAAAC,MAAA;MACAH,WAAA,CAAAqC,UAAA,CAAAC,QAAA;IACA;IAEA;IACAC,MAAA;MACA,MAAAvC,WAAA,QAAAC,KAAA,CAAAC,YAAA,CAAAC,MAAA;MACAH,WAAA,CAAAuC,KAAA;IACA;IAEA;IACAC,KAAA;MACA,MAAAxC,WAAA,QAAAC,KAAA,CAAAC,YAAA,CAAAC,MAAA;MACAH,WAAA,CAAAwC,IAAA;IACA;IAEA;IACAC,KAAA;MACA,MAAAzC,WAAA,QAAAC,KAAA,CAAAC,YAAA,CAAAC,MAAA;MACAH,WAAA,CAAAyC,IAAA;IACA;IAEA;IACAC,sBAAAC,iBAAA;MACA,KAAAC,OAAA,CAAAC,IAAA,wBAAAF,iBAAA;IACA;IAEA;IACAG,yBAAAC,sBAAA;MACA,KAAAH,OAAA,CAAAC,IAAA,2BAAAE,sBAAA;IACA;IAEA;IACAnF,WAAAoF,IAAA;MACA,UAAAA,IAAA,CAAAC,WAAA,MAAAC,MAAA,CAAAF,IAAA,CAAAG,QAAA,QAAAC,QAAA,YAAAF,MAAA,CAAAF,IAAA,CAAAK,OAAA,IAAAD,QAAA;IACA;IAEA;IACAE,eAAAN,IAAA;MACA,OAAApF,UAAA,CAAAoF,IAAA;IACA;IAEA;IACAO,cAAAC,MAAA;MACA,MAAAC,SAAA;QACA,kBAAApC,EAAA;QACA,eAAAA,EAAA;QACA,kBAAAA,EAAA;QACA,gBAAAA,EAAA;MACA;MACA,OAAAoC,SAAA,CAAAD,MAAA,KAAAA,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}