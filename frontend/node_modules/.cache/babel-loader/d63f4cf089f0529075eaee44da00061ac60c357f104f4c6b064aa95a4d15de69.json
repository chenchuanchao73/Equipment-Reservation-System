{"ast":null,"code":"import { mapGetters } from 'vuex';\nimport { equipmentApi, categoryApi } from '@/api';\nimport RichTextEditor from '@/components/common/RichTextEditor.vue';\nimport axios from 'axios';\nexport default {\n  name: 'AdminEquipment',\n  components: {\n    RichTextEditor\n  },\n  data() {\n    return {\n      loading: false,\n      submitting: false,\n      equipments: [],\n      total: 0,\n      currentPage: 1,\n      pageSize: 10,\n      categories: [],\n      filter: {\n        category: '',\n        status: '',\n        search: ''\n      },\n      dialogVisible: false,\n      dialogType: 'add',\n      // 'add' or 'edit'\n      form: {\n        id: null,\n        name: '',\n        category: '',\n        model: '',\n        location: '',\n        status: 'available',\n        description: '',\n        user_guide: '',\n        video_tutorial: '',\n        image_path: '',\n        allow_simultaneous: false,\n        max_simultaneous: 1\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: this.$t('reservation.requiredField'),\n          trigger: 'blur'\n        }],\n        category: [{\n          required: true,\n          message: this.$t('reservation.requiredField'),\n          trigger: 'change'\n        }],\n        status: [{\n          required: true,\n          message: this.$t('reservation.requiredField'),\n          trigger: 'change'\n        }]\n      },\n      uploadDialogVisible: false,\n      currentEquipment: {},\n      imageUrl: '',\n      // 上传相关\n      uploadUrl: axios.defaults.baseURL + '/api/equipment/upload-image',\n      // 视频相关\n      videoType: 'youtube',\n      // 富文本编辑器选项\n      editorOptions: {\n        modules: {\n          toolbar: [['bold', 'italic', 'underline', 'strike'], ['blockquote', 'code-block'], [{\n            'header': 1\n          }, {\n            'header': 2\n          }], [{\n            'list': 'ordered'\n          }, {\n            'list': 'bullet'\n          }], [{\n            'script': 'sub'\n          }, {\n            'script': 'super'\n          }], [{\n            'indent': '-1'\n          }, {\n            'indent': '+1'\n          }], [{\n            'direction': 'rtl'\n          }], [{\n            'size': ['small', false, 'large', 'huge']\n          }], [{\n            'header': [1, 2, 3, 4, 5, 6, false]\n          }], [{\n            'color': []\n          }, {\n            'background': []\n          }], [{\n            'font': []\n          }], [{\n            'align': []\n          }], ['clean'], ['link', 'image', 'video']]\n        },\n        placeholder: '',\n        theme: 'snow'\n      }\n    };\n  },\n  computed: {\n    // 获取token\n    getToken() {\n      return localStorage.getItem('token') || '';\n    },\n    uploadHeaders() {\n      return {\n        Authorization: `Bearer ${localStorage.getItem('token') || ''}`\n      };\n    },\n    // 获取完整的图片URL\n    baseUrl() {\n      return axios.defaults.baseURL || 'http://localhost:8000';\n    }\n  },\n  created() {\n    this.fetchData();\n    this.fetchCategories();\n  },\n  methods: {\n    // 获取设备列表\n    async fetchData() {\n      try {\n        this.loading = true;\n        const params = {\n          page: this.currentPage,\n          limit: this.pageSize,\n          category: this.filter.category || undefined,\n          status: this.filter.status || undefined,\n          search: this.filter.search || undefined\n        };\n        const response = await equipmentApi.getEquipments(params);\n        this.equipments = response.data.items;\n        this.total = response.data.total;\n      } catch (error) {\n        console.error('获取设备列表失败:', error);\n        this.$message.error(this.$t('error.serverError'));\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 获取设备类别\n    async fetchCategories() {\n      try {\n        const response = await categoryApi.getAllCategories();\n        this.categories = response.data.map(item => item.name);\n      } catch (error) {\n        console.error('获取设备类别失败:', error);\n      }\n    },\n    // 处理筛选条件变化\n    handleFilterChange() {\n      this.currentPage = 1;\n      this.fetchData();\n    },\n    // 处理页码变化\n    handlePageChange(page) {\n      this.currentPage = page;\n      this.fetchData();\n    },\n    // 添加设备\n    handleAdd() {\n      this.dialogType = 'add';\n      this.form = {\n        id: null,\n        name: '',\n        category: '',\n        model: '',\n        location: '',\n        status: 'available',\n        description: '',\n        user_guide: '',\n        video_tutorial: '',\n        image_path: '',\n        allow_simultaneous: false,\n        max_simultaneous: 1\n      };\n      this.dialogVisible = true;\n    },\n    // 编辑设备\n    handleEdit(row) {\n      this.dialogType = 'edit';\n      this.form = {\n        ...row\n      };\n      this.dialogVisible = true;\n    },\n    // 删除设备\n    handleDelete(row) {\n      this.$confirm(this.$t('admin.confirmDeleteEquipment'), this.$t('common.warning'), {\n        confirmButtonText: this.$t('common.confirm'),\n        cancelButtonText: this.$t('common.cancel'),\n        type: 'warning'\n      }).then(async () => {\n        try {\n          this.loading = true;\n          await equipmentApi.deleteEquipment(row.id);\n          this.$message.success(this.$t('admin.equipmentDeleted'));\n          this.fetchData();\n        } catch (error) {\n          console.error('删除设备失败:', error);\n          this.$message.error(this.$t('error.serverError'));\n        } finally {\n          this.loading = false;\n        }\n      }).catch(() => {\n        // 取消删除，不做任何处理\n      });\n    },\n    // 上传设备图片\n    handleUploadImage(row) {\n      this.currentEquipment = row;\n      this.imageUrl = row.image_path || '';\n      this.uploadDialogVisible = true;\n    },\n    // 提交表单\n    submitForm() {\n      this.$refs.form.validate(async valid => {\n        if (!valid) return;\n        try {\n          this.submitting = true;\n          if (this.dialogType === 'add') {\n            // 创建设备\n            const response = await equipmentApi.createEquipment(this.form);\n            this.$message.success(this.$t('admin.equipmentAdded'));\n          } else {\n            // 更新设备\n            const response = await equipmentApi.updateEquipment(this.form.id, this.form);\n            this.$message.success(this.$t('admin.equipmentUpdated'));\n          }\n          this.dialogVisible = false;\n          this.fetchData();\n        } catch (error) {\n          console.error('保存设备失败:', error);\n          this.$message.error(this.$t('error.serverError'));\n        } finally {\n          this.submitting = false;\n        }\n      });\n    },\n    // 重置表单\n    resetForm() {\n      if (this.$refs.form) {\n        this.$refs.form.resetFields();\n      }\n    },\n    // 处理视频类型变化\n    handleVideoTypeChange() {\n      // 如果已经有视频URL，则根据新的视频类型进行转换\n      if (this.form.video_tutorial) {\n        // 提取视频ID\n        let videoId = '';\n\n        // 尝试从当前的URL中提取视频ID\n        if (this.form.video_tutorial.includes('youtube.com') || this.form.video_tutorial.includes('youtu.be')) {\n          // 从 YouTube URL 提取视频ID\n          const match = this.form.video_tutorial.match(/(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/ ]{11})/);\n          if (match && match[1]) {\n            videoId = match[1];\n          }\n        } else if (this.form.video_tutorial.includes('bilibili.com')) {\n          // 从 Bilibili URL 提取视频ID\n          const match = this.form.video_tutorial.match(/bilibili\\.com\\/video\\/([^\\/?]+)/);\n          if (match && match[1]) {\n            videoId = match[1].replace('BV', '');\n          }\n        }\n\n        // 如果成功提取到视频ID，则根据新的视频类型生成URL\n        if (videoId) {\n          switch (this.videoType) {\n            case 'youtube':\n              this.form.video_tutorial = `https://www.youtube.com/embed/${videoId}`;\n              break;\n            case 'bilibili':\n              this.form.video_tutorial = `https://player.bilibili.com/player.html?bvid=BV${videoId}`;\n              break;\n            default:\n              // 其他类型不做处理\n              break;\n          }\n        }\n      }\n    },\n    // 获取完整的图片URL\n    getFullImageUrl(url) {\n      if (!url) return '';\n\n      // 如果已经是完整URL，直接返回\n      if (url.startsWith('http://') || url.startsWith('https://')) {\n        return url;\n      }\n\n      // 如果是相对路径，添加基础URL\n      if (url.startsWith('/')) {\n        return this.baseUrl + url;\n      }\n\n      // 其他情况，添加基础URL和斜杠\n      return this.baseUrl + '/' + url;\n    },\n    // 触发手动上传\n    triggerManualUpload() {\n      this.$refs.manualFileInput.click();\n    },\n    // 处理手动文件选择\n    async handleManualFileChange(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n\n      // 验证文件\n      const isImage = file.type.startsWith('image/');\n      const isLt8M = file.size / 1024 / 1024 < 8;\n      if (!isImage) {\n        this.$message.error(this.$t('admin.imageTypeError'));\n        return;\n      }\n      if (!isLt8M) {\n        this.$message.error(this.$t('admin.imageSizeError').replace('2MB', '8MB'));\n        return;\n      }\n\n      // 创建 FormData\n      const formData = new FormData();\n      formData.append('file', file);\n      try {\n        this.loading = true;\n\n        // 直接使用 axios 发送请求\n        const response = await axios.post(this.uploadUrl, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${localStorage.getItem('token') || ''}`\n          }\n        });\n\n        // 处理成功响应\n        this.form.image_path = response.data.data.image_url;\n        this.$message.success(this.$t('admin.imageUploadSuccess'));\n      } catch (error) {\n        console.error('手动上传图片失败:', error);\n        console.log('文件信息:', {\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          lastModified: file.lastModified\n        });\n\n        // 尝试获取更详细的错误信息\n        let errorMessage = this.$t('admin.imageUploadError');\n        if (error.response && error.response.data) {\n          console.error('错误响应数据:', error.response.data);\n          if (error.response.data.detail) {\n            errorMessage += ': ' + error.response.data.detail;\n          }\n        }\n        this.$message.error(errorMessage);\n      } finally {\n        this.loading = false;\n        // 清空文件输入框，允许再次选择同一文件\n        this.$refs.manualFileInput.value = '';\n      }\n    },\n    // 触发对话框手动上传\n    triggerDialogManualUpload() {\n      this.$refs.dialogManualFileInput.click();\n    },\n    // 处理图片加载失败\n    handleImageLoadError(row) {\n      console.log('图片加载失败，使用默认图片', row);\n      // 如果图片加载失败，将image_path设置为空，这样会显示默认图片\n      if (row && row.image_path) {\n        // 在Vue中安全地更新对象属性\n        this.$set(row, 'image_path', '');\n      }\n    },\n    // 处理对话框手动文件选择\n    async handleDialogManualFileChange(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n\n      // 验证文件\n      const isImage = file.type.startsWith('image/');\n      const isLt8M = file.size / 1024 / 1024 < 8;\n      if (!isImage) {\n        this.$message.error(this.$t('admin.imageTypeError'));\n        return;\n      }\n      if (!isLt8M) {\n        this.$message.error(this.$t('admin.imageSizeError').replace('2MB', '8MB'));\n        return;\n      }\n\n      // 创建 FormData\n      const formData = new FormData();\n      formData.append('file', file);\n      if (this.currentEquipment.id) {\n        formData.append('equipment_id', this.currentEquipment.id);\n      }\n      try {\n        this.loading = true;\n\n        // 直接使用 axios 发送请求\n        const response = await axios.post(this.uploadUrl, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${localStorage.getItem('token') || ''}`\n          }\n        });\n\n        // 处理成功响应\n        this.imageUrl = response.data.data.image_url;\n        this.currentEquipment.image_path = response.data.data.image_url;\n\n        // 更新设备列表中的图片URL\n        const index = this.equipments.findIndex(item => item.id === this.currentEquipment.id);\n        if (index !== -1) {\n          this.$set(this.equipments, index, {\n            ...this.currentEquipment\n          });\n        }\n        this.$message.success(this.$t('admin.imageUploadSuccess'));\n\n        // 关闭对话框\n        setTimeout(() => {\n          this.uploadDialogVisible = false;\n        }, 1500);\n      } catch (error) {\n        console.error('手动上传图片失败:', error);\n        console.log('文件信息:', {\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          lastModified: file.lastModified\n        });\n\n        // 尝试获取更详细的错误信息\n        let errorMessage = this.$t('admin.imageUploadError');\n        if (error.response && error.response.data) {\n          console.error('错误响应数据:', error.response.data);\n          if (error.response.data.detail) {\n            errorMessage += ': ' + error.response.data.detail;\n          }\n        }\n        this.$message.error(errorMessage);\n      } finally {\n        this.loading = false;\n        // 清空文件输入框，允许再次选择同一文件\n        this.$refs.dialogManualFileInput.value = '';\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","equipmentApi","categoryApi","RichTextEditor","axios","name","components","data","loading","submitting","equipments","total","currentPage","pageSize","categories","filter","category","status","search","dialogVisible","dialogType","form","id","model","location","description","user_guide","video_tutorial","image_path","allow_simultaneous","max_simultaneous","rules","required","message","$t","trigger","uploadDialogVisible","currentEquipment","imageUrl","uploadUrl","defaults","baseURL","videoType","editorOptions","modules","toolbar","placeholder","theme","computed","getToken","localStorage","getItem","uploadHeaders","Authorization","baseUrl","created","fetchData","fetchCategories","methods","params","page","limit","undefined","response","getEquipments","items","error","console","$message","getAllCategories","map","item","handleFilterChange","handlePageChange","handleAdd","handleEdit","row","handleDelete","$confirm","confirmButtonText","cancelButtonText","type","then","deleteEquipment","success","catch","handleUploadImage","submitForm","$refs","validate","valid","createEquipment","updateEquipment","resetForm","resetFields","handleVideoTypeChange","videoId","includes","match","replace","getFullImageUrl","url","startsWith","triggerManualUpload","manualFileInput","click","handleManualFileChange","event","file","target","files","isImage","isLt8M","size","formData","FormData","append","post","headers","image_url","log","lastModified","errorMessage","detail","value","triggerDialogManualUpload","dialogManualFileInput","handleImageLoadError","$set","handleDialogManualFileChange","index","findIndex","setTimeout"],"sources":["src/views/admin/AdminEquipment.vue"],"sourcesContent":["<template>\n  <div class=\"admin-equipment\">\n    <div class=\"page-header\">\n      <h2>设备管理</h2>\n      <div class=\"page-actions\">\n        <el-button\n          type=\"primary\"\n          icon=\"el-icon-plus\"\n          @click=\"handleAdd\"\n        >\n          添加设备\n        </el-button>\n      </div>\n    </div>\n\n    <!-- 搜索和筛选 -->\n    <el-card class=\"filter-card\">\n      <el-form :inline=\"true\" :model=\"filter\" class=\"filter-form\">\n        <el-form-item :label=\"$t('equipment.category')\">\n          <el-select\n            v-model=\"filter.category\"\n            :placeholder=\"$t('equipment.allCategories')\"\n            clearable\n            @change=\"handleFilterChange\"\n          >\n            <el-option\n              v-for=\"category in categories\"\n              :key=\"category\"\n              :label=\"category\"\n              :value=\"category\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item :label=\"$t('equipment.status')\">\n          <el-select\n            v-model=\"filter.status\"\n            :placeholder=\"$t('equipment.allStatus')\"\n            clearable\n            @change=\"handleFilterChange\"\n          >\n            <el-option\n              :label=\"$t('equipment.available')\"\n              value=\"available\"\n            ></el-option>\n            <el-option\n              :label=\"$t('equipment.maintenance')\"\n              value=\"maintenance\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item>\n          <el-input\n            v-model=\"filter.search\"\n            :placeholder=\"$t('equipment.searchPlaceholder')\"\n            clearable\n            @keyup.enter.native=\"handleFilterChange\"\n          >\n            <el-button\n              slot=\"append\"\n              icon=\"el-icon-search\"\n              @click=\"handleFilterChange\"\n            ></el-button>\n          </el-input>\n        </el-form-item>\n      </el-form>\n    </el-card>\n\n    <!-- 设备列表 -->\n    <el-table\n      v-loading=\"loading\"\n      :data=\"equipments\"\n      border\n      stripe\n      style=\"width: 100%; margin-top: 20px;\"\n      header-align=\"center\"\n      cell-class-name=\"text-center\"\n    >\n      <el-table-column\n        prop=\"id\"\n        label=\"ID\"\n        width=\"80\"\n      ></el-table-column>\n\n      <el-table-column\n        prop=\"name\"\n        label=\"设备名称\"\n        width=\"120\"\n      ></el-table-column>\n\n      <el-table-column\n        prop=\"category\"\n        label=\"设备类别\"\n        width=\"120\"\n      ></el-table-column>\n\n      <el-table-column\n        prop=\"location\"\n        label=\"设备位置\"\n        width=\"100\"\n      ></el-table-column>\n\n      <el-table-column\n        prop=\"description\"\n        label=\"设备描述\"\n        min-width=\"150\"\n      >\n        <template slot-scope=\"scope\">\n          {{ scope.row.description || '无' }}\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        prop=\"status\"\n        label=\"设备状态\"\n        width=\"100\"\n      >\n        <template slot-scope=\"scope\">\n          <el-tag\n            :type=\"scope.row.status === 'available' ? 'success' : 'warning'\"\n            size=\"small\"\n          >\n            {{ scope.row.status === 'available' ? '可用' : '维护中' }}\n          </el-tag>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        label=\"可同时预定\"\n        width=\"110\"\n        align=\"center\"\n      >\n        <template slot-scope=\"scope\">\n          <el-tag\n            :type=\"scope.row.allow_simultaneous ? 'success' : 'info'\"\n            size=\"small\"\n          >\n            {{ scope.row.allow_simultaneous ? `支持(${scope.row.max_simultaneous}人)` : '不支持' }}\n          </el-tag>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        label=\"设备图片\"\n        width=\"100\"\n        align=\"center\"\n      >\n        <template slot-scope=\"scope\">\n          <div class=\"equipment-image-container\">\n            <img :src=\"scope.row.image_path ? getFullImageUrl(scope.row.image_path) : require('@/assets/upload.png')\" class=\"equipment-image\">\n          </div>\n        </template>\n      </el-table-column>\n\n      <el-table-column\n        label=\"操作\"\n        width=\"200\"\n      >\n        <template slot-scope=\"scope\">\n          <el-button\n            type=\"text\"\n            size=\"small\"\n            @click=\"handleEdit(scope.row)\"\n          >\n            编辑\n          </el-button>\n\n          <el-button\n            v-if=\"scope.row.image_path\"\n            type=\"text\"\n            size=\"small\"\n            @click=\"handleUploadImage(scope.row)\"\n          >\n            更换图片\n          </el-button>\n\n          <el-button\n            type=\"text\"\n            size=\"small\"\n            class=\"danger-button\"\n            @click=\"handleDelete(scope.row)\"\n          >\n            删除\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 分页 -->\n    <div class=\"pagination-container\">\n      <el-pagination\n        background\n        layout=\"total, prev, pager, next\"\n        :total=\"total\"\n        :page-size=\"pageSize\"\n        :current-page.sync=\"currentPage\"\n        @current-change=\"handlePageChange\"\n      ></el-pagination>\n    </div>\n\n    <!-- 添加/编辑设备对话框 -->\n    <el-dialog\n      :title=\"dialogType === 'add' ? '添加设备' : '编辑设备'\"\n      :visible.sync=\"dialogVisible\"\n      width=\"50%\"\n      @close=\"resetForm\"\n    >\n      <el-form\n        ref=\"form\"\n        :model=\"form\"\n        :rules=\"rules\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"设备名称\" prop=\"name\">\n          <el-input v-model=\"form.name\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"设备类别\" prop=\"category\">\n          <el-select\n            v-model=\"form.category\"\n            filterable\n            allow-create\n            default-first-option\n            style=\"width: 100%\"\n          >\n            <el-option\n              v-for=\"category in categories\"\n              :key=\"category\"\n              :label=\"category\"\n              :value=\"category\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n\n        <el-form-item label=\"设备型号\" prop=\"model\">\n          <el-input v-model=\"form.model\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"设备位置\" prop=\"location\">\n          <el-input v-model=\"form.location\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"设备状态\" prop=\"status\">\n          <el-radio-group v-model=\"form.status\">\n            <el-radio label=\"available\">可用</el-radio>\n            <el-radio label=\"maintenance\">维护中</el-radio>\n          </el-radio-group>\n        </el-form-item>\n\n        <el-form-item label=\"可同时预定\" prop=\"allow_simultaneous\">\n          <el-switch\n            v-model=\"form.allow_simultaneous\"\n            active-text=\"启用\"\n            inactive-text=\"禁用\"\n          ></el-switch>\n          \n          <div v-if=\"form.allow_simultaneous\" style=\"margin-top: 10px;\">\n            <el-form-item label=\"最大预定人数\" prop=\"max_simultaneous\">\n              <el-input-number \n                v-model=\"form.max_simultaneous\" \n                :min=\"1\" \n                :max=\"20\"\n                size=\"small\"\n              ></el-input-number>\n              <div class=\"form-tip\">设置可同时预定的最大人数</div>\n            </el-form-item>\n          </div>\n        </el-form-item>\n\n        <el-form-item label=\"设备描述\" prop=\"description\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"form.description\"\n            :rows=\"4\"\n          ></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"使用指南\" prop=\"user_guide\">\n          <rich-text-editor\n            v-model=\"form.user_guide\"\n            placeholder=\"请输入设备的详细使用步骤、注意事项等信息...\"\n          ></rich-text-editor>\n        </el-form-item>\n\n        <el-form-item label=\"视频教程\" prop=\"video_tutorial\">\n          <el-input\n            v-model=\"form.video_tutorial\"\n            placeholder=\"请输入视频链接，支持YouTube、Bilibili等平台\"\n          >\n            <template slot=\"prepend\">\n              <el-select\n                v-model=\"videoType\"\n                style=\"width: 120px;\"\n                @change=\"handleVideoTypeChange\"\n              >\n                <el-option label=\"YouTube\" value=\"youtube\"></el-option>\n                <el-option label=\"Bilibili\" value=\"bilibili\"></el-option>\n                <el-option label=\"其他\" value=\"other\"></el-option>\n              </el-select>\n            </template>\n          </el-input>\n          <div class=\"video-tip\">输入视频链接后可以在设备详情页面查看视频教程</div>\n        </el-form-item>\n\n        <el-form-item label=\"设备图片\">\n          <div class=\"equipment-image-container\">\n            <img v-if=\"form.image_path\" :src=\"getFullImageUrl(form.image_path)\" class=\"equipment-image\">\n            <img v-else :src=\"require('@/assets/upload.png')\" class=\"equipment-image default-equipment-image\">\n          </div>\n          <div class=\"image-tip\">建议尺寸：800x600像素，最大8MB</div>\n          <div class=\"manual-upload\">\n            <el-button size=\"small\" type=\"primary\" @click=\"triggerManualUpload\">上传图片</el-button>\n            <input\n              ref=\"manualFileInput\"\n              type=\"file\"\n              accept=\"image/*\"\n              style=\"display: none;\"\n              @change=\"handleManualFileChange\"\n            >\n          </div>\n        </el-form-item>\n      </el-form>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitForm\" :loading=\"submitting\">保存</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 上传图片对话框 -->\n    <el-dialog\n      title=\"上传设备图片\"\n      :visible.sync=\"uploadDialogVisible\"\n      width=\"30%\"\n    >\n      <div class=\"equipment-image-container\">\n        <img v-if=\"imageUrl\" :src=\"getFullImageUrl(imageUrl)\" class=\"equipment-image\">\n        <img v-else :src=\"require('@/assets/upload.png')\" class=\"equipment-image default-equipment-image\">\n      </div>\n      <div class=\"image-tip\">建议尺寸：800x600像素，最大8MB</div>\n      <div class=\"manual-upload\">\n        <el-button size=\"small\" type=\"primary\" @click=\"triggerDialogManualUpload\">上传图片</el-button>\n        <input\n          ref=\"dialogManualFileInput\"\n          type=\"file\"\n          accept=\"image/*\"\n          style=\"display: none;\"\n          @change=\"handleDialogManualFileChange\"\n        >\n      </div>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"uploadDialogVisible = false\">取消</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport { equipmentApi, categoryApi } from '@/api'\nimport RichTextEditor from '@/components/common/RichTextEditor.vue'\nimport axios from 'axios'\n\nexport default {\n  name: 'AdminEquipment',\n\n  components: {\n    RichTextEditor\n  },\n\n  data() {\n    return {\n      loading: false,\n      submitting: false,\n      equipments: [],\n      total: 0,\n      currentPage: 1,\n      pageSize: 10,\n      categories: [],\n      filter: {\n        category: '',\n        status: '',\n        search: ''\n      },\n\n      dialogVisible: false,\n      dialogType: 'add', // 'add' or 'edit'\n      form: {\n        id: null,\n        name: '',\n        category: '',\n        model: '',\n        location: '',\n        status: 'available',\n        description: '',\n        user_guide: '',\n        video_tutorial: '',\n        image_path: '',\n        allow_simultaneous: false,\n        max_simultaneous: 1\n      },\n      rules: {\n        name: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'blur' }\n        ],\n        category: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'change' }\n        ],\n        status: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'change' }\n        ]\n      },\n\n      uploadDialogVisible: false,\n      currentEquipment: {},\n      imageUrl: '',\n\n      // 上传相关\n      uploadUrl: axios.defaults.baseURL + '/api/equipment/upload-image',\n\n      // 视频相关\n      videoType: 'youtube',\n\n      // 富文本编辑器选项\n      editorOptions: {\n        modules: {\n          toolbar: [\n            ['bold', 'italic', 'underline', 'strike'],\n            ['blockquote', 'code-block'],\n            [{ 'header': 1 }, { 'header': 2 }],\n            [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n            [{ 'script': 'sub' }, { 'script': 'super' }],\n            [{ 'indent': '-1' }, { 'indent': '+1' }],\n            [{ 'direction': 'rtl' }],\n            [{ 'size': ['small', false, 'large', 'huge'] }],\n            [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n            [{ 'color': [] }, { 'background': [] }],\n            [{ 'font': [] }],\n            [{ 'align': [] }],\n            ['clean'],\n            ['link', 'image', 'video']\n          ]\n        },\n        placeholder: '',\n        theme: 'snow'\n      },\n    }\n  },\n\n  computed: {\n    // 获取token\n    getToken() {\n      return localStorage.getItem('token') || ''\n    },\n\n    uploadHeaders() {\n      return {\n        Authorization: `Bearer ${localStorage.getItem('token') || ''}`\n      }\n    },\n\n    // 获取完整的图片URL\n    baseUrl() {\n      return axios.defaults.baseURL || 'http://localhost:8000';\n    }\n  },\n\n  created() {\n    this.fetchData()\n    this.fetchCategories()\n  },\n\n  methods: {\n    // 获取设备列表\n    async fetchData() {\n      try {\n        this.loading = true\n\n        const params = {\n          page: this.currentPage,\n          limit: this.pageSize,\n          category: this.filter.category || undefined,\n          status: this.filter.status || undefined,\n          search: this.filter.search || undefined\n        }\n\n        const response = await equipmentApi.getEquipments(params)\n        this.equipments = response.data.items\n        this.total = response.data.total\n      } catch (error) {\n        console.error('获取设备列表失败:', error)\n        this.$message.error(this.$t('error.serverError'))\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // 获取设备类别\n    async fetchCategories() {\n      try {\n        const response = await categoryApi.getAllCategories()\n        this.categories = response.data.map(item => item.name)\n      } catch (error) {\n        console.error('获取设备类别失败:', error)\n      }\n    },\n\n    // 处理筛选条件变化\n    handleFilterChange() {\n      this.currentPage = 1\n      this.fetchData()\n    },\n\n    // 处理页码变化\n    handlePageChange(page) {\n      this.currentPage = page\n      this.fetchData()\n    },\n\n    // 添加设备\n    handleAdd() {\n      this.dialogType = 'add'\n      this.form = {\n        id: null,\n        name: '',\n        category: '',\n        model: '',\n        location: '',\n        status: 'available',\n        description: '',\n        user_guide: '',\n        video_tutorial: '',\n        image_path: '',\n        allow_simultaneous: false,\n        max_simultaneous: 1\n      }\n      this.dialogVisible = true\n    },\n\n    // 编辑设备\n    handleEdit(row) {\n      this.dialogType = 'edit'\n      this.form = { ...row }\n      this.dialogVisible = true\n    },\n\n    // 删除设备\n    handleDelete(row) {\n      this.$confirm(\n        this.$t('admin.confirmDeleteEquipment'),\n        this.$t('common.warning'),\n        {\n          confirmButtonText: this.$t('common.confirm'),\n          cancelButtonText: this.$t('common.cancel'),\n          type: 'warning'\n        }\n      ).then(async () => {\n        try {\n          this.loading = true\n\n          await equipmentApi.deleteEquipment(row.id)\n\n          this.$message.success(this.$t('admin.equipmentDeleted'))\n          this.fetchData()\n        } catch (error) {\n          console.error('删除设备失败:', error)\n          this.$message.error(this.$t('error.serverError'))\n        } finally {\n          this.loading = false\n        }\n      }).catch(() => {\n        // 取消删除，不做任何处理\n      })\n    },\n\n    // 上传设备图片\n    handleUploadImage(row) {\n      this.currentEquipment = row\n      this.imageUrl = row.image_path || ''\n      this.uploadDialogVisible = true\n    },\n\n    // 提交表单\n    submitForm() {\n      this.$refs.form.validate(async valid => {\n        if (!valid) return\n\n        try {\n          this.submitting = true\n\n          if (this.dialogType === 'add') {\n            // 创建设备\n            const response = await equipmentApi.createEquipment(this.form)\n            this.$message.success(this.$t('admin.equipmentAdded'))\n          } else {\n            // 更新设备\n            const response = await equipmentApi.updateEquipment(this.form.id, this.form)\n            this.$message.success(this.$t('admin.equipmentUpdated'))\n          }\n\n          this.dialogVisible = false\n          this.fetchData()\n        } catch (error) {\n          console.error('保存设备失败:', error)\n          this.$message.error(this.$t('error.serverError'))\n        } finally {\n          this.submitting = false\n        }\n      })\n    },\n\n    // 重置表单\n    resetForm() {\n      if (this.$refs.form) {\n        this.$refs.form.resetFields()\n      }\n    },\n\n    // 处理视频类型变化\n    handleVideoTypeChange() {\n      // 如果已经有视频URL，则根据新的视频类型进行转换\n      if (this.form.video_tutorial) {\n        // 提取视频ID\n        let videoId = ''\n\n        // 尝试从当前的URL中提取视频ID\n        if (this.form.video_tutorial.includes('youtube.com') || this.form.video_tutorial.includes('youtu.be')) {\n          // 从 YouTube URL 提取视频ID\n          const match = this.form.video_tutorial.match(/(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/ ]{11})/)\n          if (match && match[1]) {\n            videoId = match[1]\n          }\n        } else if (this.form.video_tutorial.includes('bilibili.com')) {\n          // 从 Bilibili URL 提取视频ID\n          const match = this.form.video_tutorial.match(/bilibili\\.com\\/video\\/([^\\/?]+)/)\n          if (match && match[1]) {\n            videoId = match[1].replace('BV', '')\n          }\n        }\n\n        // 如果成功提取到视频ID，则根据新的视频类型生成URL\n        if (videoId) {\n          switch (this.videoType) {\n            case 'youtube':\n              this.form.video_tutorial = `https://www.youtube.com/embed/${videoId}`\n              break\n            case 'bilibili':\n              this.form.video_tutorial = `https://player.bilibili.com/player.html?bvid=BV${videoId}`\n              break\n            default:\n              // 其他类型不做处理\n              break\n          }\n        }\n      }\n    },\n\n    // 获取完整的图片URL\n    getFullImageUrl(url) {\n      if (!url) return '';\n\n      // 如果已经是完整URL，直接返回\n      if (url.startsWith('http://') || url.startsWith('https://')) {\n        return url;\n      }\n\n      // 如果是相对路径，添加基础URL\n      if (url.startsWith('/')) {\n        return this.baseUrl + url;\n      }\n\n      // 其他情况，添加基础URL和斜杠\n      return this.baseUrl + '/' + url;\n    },\n\n    // 触发手动上传\n    triggerManualUpload() {\n      this.$refs.manualFileInput.click()\n    },\n\n    // 处理手动文件选择\n    async handleManualFileChange(event) {\n      const file = event.target.files[0]\n      if (!file) return\n\n      // 验证文件\n      const isImage = file.type.startsWith('image/')\n      const isLt8M = file.size / 1024 / 1024 < 8\n\n      if (!isImage) {\n        this.$message.error(this.$t('admin.imageTypeError'))\n        return\n      }\n\n      if (!isLt8M) {\n        this.$message.error(this.$t('admin.imageSizeError').replace('2MB', '8MB'))\n        return\n      }\n\n      // 创建 FormData\n      const formData = new FormData()\n      formData.append('file', file)\n\n      try {\n        this.loading = true\n\n        // 直接使用 axios 发送请求\n        const response = await axios.post(this.uploadUrl, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${localStorage.getItem('token') || ''}`\n          }\n        })\n\n        // 处理成功响应\n        this.form.image_path = response.data.data.image_url\n        this.$message.success(this.$t('admin.imageUploadSuccess'))\n      } catch (error) {\n        console.error('手动上传图片失败:', error)\n        console.log('文件信息:', {\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          lastModified: file.lastModified\n        })\n\n        // 尝试获取更详细的错误信息\n        let errorMessage = this.$t('admin.imageUploadError')\n        if (error.response && error.response.data) {\n          console.error('错误响应数据:', error.response.data)\n          if (error.response.data.detail) {\n            errorMessage += ': ' + error.response.data.detail\n          }\n        }\n\n        this.$message.error(errorMessage)\n      } finally {\n        this.loading = false\n        // 清空文件输入框，允许再次选择同一文件\n        this.$refs.manualFileInput.value = ''\n      }\n    },\n\n    // 触发对话框手动上传\n    triggerDialogManualUpload() {\n      this.$refs.dialogManualFileInput.click()\n    },\n\n    // 处理图片加载失败\n    handleImageLoadError(row) {\n      console.log('图片加载失败，使用默认图片', row)\n      // 如果图片加载失败，将image_path设置为空，这样会显示默认图片\n      if (row && row.image_path) {\n        // 在Vue中安全地更新对象属性\n        this.$set(row, 'image_path', '')\n      }\n    },\n\n    // 处理对话框手动文件选择\n    async handleDialogManualFileChange(event) {\n      const file = event.target.files[0]\n      if (!file) return\n\n      // 验证文件\n      const isImage = file.type.startsWith('image/')\n      const isLt8M = file.size / 1024 / 1024 < 8\n\n      if (!isImage) {\n        this.$message.error(this.$t('admin.imageTypeError'))\n        return\n      }\n\n      if (!isLt8M) {\n        this.$message.error(this.$t('admin.imageSizeError').replace('2MB', '8MB'))\n        return\n      }\n\n      // 创建 FormData\n      const formData = new FormData()\n      formData.append('file', file)\n      if (this.currentEquipment.id) {\n        formData.append('equipment_id', this.currentEquipment.id)\n      }\n\n      try {\n        this.loading = true\n\n        // 直接使用 axios 发送请求\n        const response = await axios.post(this.uploadUrl, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Bearer ${localStorage.getItem('token') || ''}`\n          }\n        })\n\n        // 处理成功响应\n        this.imageUrl = response.data.data.image_url\n        this.currentEquipment.image_path = response.data.data.image_url\n\n        // 更新设备列表中的图片URL\n        const index = this.equipments.findIndex(item => item.id === this.currentEquipment.id)\n        if (index !== -1) {\n          this.$set(this.equipments, index, { ...this.currentEquipment })\n        }\n\n        this.$message.success(this.$t('admin.imageUploadSuccess'))\n\n        // 关闭对话框\n        setTimeout(() => {\n          this.uploadDialogVisible = false\n        }, 1500)\n      } catch (error) {\n        console.error('手动上传图片失败:', error)\n        console.log('文件信息:', {\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          lastModified: file.lastModified\n        })\n\n        // 尝试获取更详细的错误信息\n        let errorMessage = this.$t('admin.imageUploadError')\n        if (error.response && error.response.data) {\n          console.error('错误响应数据:', error.response.data)\n          if (error.response.data.detail) {\n            errorMessage += ': ' + error.response.data.detail\n          }\n        }\n\n        this.$message.error(errorMessage)\n      } finally {\n        this.loading = false\n        // 清空文件输入框，允许再次选择同一文件\n        this.$refs.dialogManualFileInput.value = ''\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.admin-equipment {\n  padding: 20px;\n  width: 100%;\n  max-width: 100%;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 15px 20px;\n  background-color: #FFFFFF;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.05);\n}\n\n.page-actions {\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\n.page-header h2 {\n  margin: 0;\n  font-size: 20px;\n}\n\n.filter-card {\n  margin-bottom: 20px;\n}\n\n.filter-form .el-form-item {\n  margin-bottom: 0;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  text-align: right;\n}\n\n.quill-editor {\n  height: 300px;\n  margin-bottom: 10px;\n}\n\n.editor-tip {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 5px;\n}\n\n.danger-button {\n  color: #F56C6C;\n}\n\n.equipment-image-container {\n  text-align: center;\n  border: 1px dashed #d9d9d9;\n  border-radius: 6px;\n  width: 300px;\n  height: 225px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n}\n\n.equipment-image {\n  max-width: 100%;\n  max-height: 100%;\n  object-fit: contain;\n}\n\n.default-equipment-image {\n  opacity: 0.6;\n  width: 60px;\n  height: 60px;\n}\n\n.image-tip {\n  text-align: center;\n  font-size: 12px;\n  color: #909399;\n  margin-top: 10px;\n}\n\n.manual-upload {\n  text-align: center;\n  margin-top: 10px;\n}\n\n.video-tip {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 5px;\n}\n\n.form-tip {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 5px;\n}\n\n.clickable-image {\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.clickable-image:hover {\n  transform: scale(1.05);\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.preview-image {\n  cursor: zoom-in;\n  transition: all 0.3s;\n}\n\n.preview-image:hover {\n  transform: scale(1.05);\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\n.default-image {\n  cursor: default;\n  opacity: 0.7;\n  transition: all 0.3s;\n}\n\n.default-image:hover {\n  opacity: 1;\n}\n\n.text-center {\n  text-align: center !important;\n}\n\n@media (max-width: 768px) {\n  .admin-equipment {\n    padding: 10px;\n  }\n\n  .filter-form {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .filter-form .el-form-item {\n    margin-right: 0;\n    margin-bottom: 10px;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}