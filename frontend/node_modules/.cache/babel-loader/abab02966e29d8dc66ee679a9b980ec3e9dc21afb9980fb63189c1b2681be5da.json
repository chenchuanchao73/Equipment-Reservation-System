{"ast":null,"code":"import { mapGetters } from 'vuex';\nimport axios from 'axios';\nexport default {\n  name: 'RichTextEditor',\n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    showTip: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      content: this.value,\n      editorOptions: {\n        modules: {\n          toolbar: {\n            container: [['bold', 'italic', 'underline', 'strike'], ['blockquote', 'code-block'], [{\n              'header': 1\n            }, {\n              'header': 2\n            }], [{\n              'list': 'ordered'\n            }, {\n              'list': 'bullet'\n            }], [{\n              'script': 'sub'\n            }, {\n              'script': 'super'\n            }], [{\n              'indent': '-1'\n            }, {\n              'indent': '+1'\n            }], [{\n              'direction': 'rtl'\n            }], [{\n              'size': ['small', false, 'large', 'huge']\n            }], [{\n              'header': [1, 2, 3, 4, 5, 6, false]\n            }], [{\n              'color': []\n            }, {\n              'background': []\n            }], [{\n              'font': []\n            }], [{\n              'align': []\n            }], ['clean'], ['link', 'image', 'video']],\n            handlers: {\n              'image': this.imageHandler\n            }\n          }\n        },\n        placeholder: this.placeholder,\n        theme: 'snow'\n      }\n    };\n  },\n  computed: {\n    ...mapGetters(['getToken'])\n  },\n  watch: {\n    value(newVal) {\n      if (newVal !== this.content) {\n        this.content = newVal;\n      }\n    }\n  },\n  methods: {\n    onChange() {\n      this.$emit('input', this.content);\n      this.$emit('change', this.content);\n    },\n    imageHandler() {\n      const input = document.createElement('input');\n      input.setAttribute('type', 'file');\n      input.setAttribute('accept', 'image/*');\n      input.click();\n      input.onchange = async () => {\n        const file = input.files[0];\n        if (!file) return;\n\n        // 检查文件类型\n        if (!file.type.startsWith('image/')) {\n          this.$message.error(this.$t('admin.imageTypeError'));\n          return;\n        }\n\n        // 检查文件大小（限制为5MB）\n        if (file.size > 5 * 1024 * 1024) {\n          this.$message.error(this.$t('admin.imageSizeError'));\n          return;\n        }\n        try {\n          // 创建FormData\n          const formData = new FormData();\n          formData.append('file', file);\n\n          // 显示上传中提示\n          const loading = this.$loading({\n            lock: true,\n            text: this.$t('common.uploading'),\n            spinner: 'el-icon-loading',\n            background: 'rgba(0, 0, 0, 0.7)'\n          });\n\n          // 发送上传请求\n          const response = await axios.post('/api/upload/editor-image', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'Authorization': `Bearer ${this.getToken}`\n            }\n          });\n\n          // 关闭上传中提示\n          loading.close();\n\n          // 获取图片URL\n          const url = response.data.url;\n\n          // 获取编辑器实例\n          const quill = this.$refs.quillEditor.quill;\n\n          // 获取当前光标位置\n          const range = quill.getSelection();\n\n          // 在光标位置插入图片\n          quill.insertEmbed(range.index, 'image', url);\n\n          // 将光标移动到图片后面\n          quill.setSelection(range.index + 1);\n\n          // 显示上传成功提示\n          this.$message.success(this.$t('admin.imageUploadSuccess'));\n        } catch (error) {\n          console.error('上传图片失败:', error);\n          this.$message.error(this.$t('admin.imageUploadError'));\n        }\n      };\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","axios","name","props","value","type","String","default","placeholder","showTip","Boolean","data","content","editorOptions","modules","toolbar","container","handlers","imageHandler","theme","computed","watch","newVal","methods","onChange","$emit","input","document","createElement","setAttribute","click","onchange","file","files","startsWith","$message","error","$t","size","formData","FormData","append","loading","$loading","lock","text","spinner","background","response","post","headers","getToken","close","url","quill","$refs","quillEditor","range","getSelection","insertEmbed","index","setSelection","success","console"],"sources":["src/components/common/RichTextEditor.vue"],"sourcesContent":["<template>\n  <div class=\"rich-text-editor\">\n    <quill-editor\n      v-model=\"content\"\n      :options=\"editorOptions\"\n      :placeholder=\"placeholder\"\n      @change=\"onChange\"\n    ></quill-editor>\n    <div v-if=\"showTip\" class=\"editor-tip\">{{ $t('admin.richTextEditorTip') }}</div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport axios from 'axios'\n\nexport default {\n  name: 'RichTextEditor',\n  \n  props: {\n    value: {\n      type: String,\n      default: ''\n    },\n    placeholder: {\n      type: String,\n      default: ''\n    },\n    showTip: {\n      type: Boolean,\n      default: true\n    }\n  },\n  \n  data() {\n    return {\n      content: this.value,\n      editorOptions: {\n        modules: {\n          toolbar: {\n            container: [\n              ['bold', 'italic', 'underline', 'strike'],\n              ['blockquote', 'code-block'],\n              [{ 'header': 1 }, { 'header': 2 }],\n              [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n              [{ 'script': 'sub' }, { 'script': 'super' }],\n              [{ 'indent': '-1' }, { 'indent': '+1' }],\n              [{ 'direction': 'rtl' }],\n              [{ 'size': ['small', false, 'large', 'huge'] }],\n              [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n              [{ 'color': [] }, { 'background': [] }],\n              [{ 'font': [] }],\n              [{ 'align': [] }],\n              ['clean'],\n              ['link', 'image', 'video']\n            ],\n            handlers: {\n              'image': this.imageHandler\n            }\n          }\n        },\n        placeholder: this.placeholder,\n        theme: 'snow'\n      }\n    }\n  },\n  \n  computed: {\n    ...mapGetters(['getToken'])\n  },\n  \n  watch: {\n    value(newVal) {\n      if (newVal !== this.content) {\n        this.content = newVal\n      }\n    }\n  },\n  \n  methods: {\n    onChange() {\n      this.$emit('input', this.content)\n      this.$emit('change', this.content)\n    },\n    \n    imageHandler() {\n      const input = document.createElement('input')\n      input.setAttribute('type', 'file')\n      input.setAttribute('accept', 'image/*')\n      input.click()\n      \n      input.onchange = async () => {\n        const file = input.files[0]\n        if (!file) return\n        \n        // 检查文件类型\n        if (!file.type.startsWith('image/')) {\n          this.$message.error(this.$t('admin.imageTypeError'))\n          return\n        }\n        \n        // 检查文件大小（限制为5MB）\n        if (file.size > 5 * 1024 * 1024) {\n          this.$message.error(this.$t('admin.imageSizeError'))\n          return\n        }\n        \n        try {\n          // 创建FormData\n          const formData = new FormData()\n          formData.append('file', file)\n          \n          // 显示上传中提示\n          const loading = this.$loading({\n            lock: true,\n            text: this.$t('common.uploading'),\n            spinner: 'el-icon-loading',\n            background: 'rgba(0, 0, 0, 0.7)'\n          })\n          \n          // 发送上传请求\n          const response = await axios.post('/api/upload/editor-image', formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data',\n              'Authorization': `Bearer ${this.getToken}`\n            }\n          })\n          \n          // 关闭上传中提示\n          loading.close()\n          \n          // 获取图片URL\n          const url = response.data.url\n          \n          // 获取编辑器实例\n          const quill = this.$refs.quillEditor.quill\n          \n          // 获取当前光标位置\n          const range = quill.getSelection()\n          \n          // 在光标位置插入图片\n          quill.insertEmbed(range.index, 'image', url)\n          \n          // 将光标移动到图片后面\n          quill.setSelection(range.index + 1)\n          \n          // 显示上传成功提示\n          this.$message.success(this.$t('admin.imageUploadSuccess'))\n        } catch (error) {\n          console.error('上传图片失败:', error)\n          this.$message.error(this.$t('admin.imageUploadError'))\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.rich-text-editor {\n  width: 100%;\n}\n\n.quill-editor {\n  height: 300px;\n  margin-bottom: 10px;\n}\n\n.editor-tip {\n  font-size: 12px;\n  color: #909399;\n  margin-top: 5px;\n}\n</style>\n"],"mappings":"AAaA,SAAAA,UAAA;AACA,OAAAC,KAAA;AAEA;EACAC,IAAA;EAEAC,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,WAAA;MACAH,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAE,OAAA;MACAJ,IAAA,EAAAK,OAAA;MACAH,OAAA;IACA;EACA;EAEAI,KAAA;IACA;MACAC,OAAA,OAAAR,KAAA;MACAS,aAAA;QACAC,OAAA;UACAC,OAAA;YACAC,SAAA,GACA,2CACA,8BACA;cAAA;YAAA;cAAA;YAAA,IACA;cAAA;YAAA;cAAA;YAAA,IACA;cAAA;YAAA;cAAA;YAAA,IACA;cAAA;YAAA;cAAA;YAAA,IACA;cAAA;YAAA,IACA;cAAA;YAAA,IACA;cAAA;YAAA,IACA;cAAA;YAAA;cAAA;YAAA,IACA;cAAA;YAAA,IACA;cAAA;YAAA,IACA,WACA,2BACA;YACAC,QAAA;cACA,cAAAC;YACA;UACA;QACA;QACAV,WAAA,OAAAA,WAAA;QACAW,KAAA;MACA;IACA;EACA;EAEAC,QAAA;IACA,GAAApB,UAAA;EACA;EAEAqB,KAAA;IACAjB,MAAAkB,MAAA;MACA,IAAAA,MAAA,UAAAV,OAAA;QACA,KAAAA,OAAA,GAAAU,MAAA;MACA;IACA;EACA;EAEAC,OAAA;IACAC,SAAA;MACA,KAAAC,KAAA,eAAAb,OAAA;MACA,KAAAa,KAAA,gBAAAb,OAAA;IACA;IAEAM,aAAA;MACA,MAAAQ,KAAA,GAAAC,QAAA,CAAAC,aAAA;MACAF,KAAA,CAAAG,YAAA;MACAH,KAAA,CAAAG,YAAA;MACAH,KAAA,CAAAI,KAAA;MAEAJ,KAAA,CAAAK,QAAA;QACA,MAAAC,IAAA,GAAAN,KAAA,CAAAO,KAAA;QACA,KAAAD,IAAA;;QAEA;QACA,KAAAA,IAAA,CAAA3B,IAAA,CAAA6B,UAAA;UACA,KAAAC,QAAA,CAAAC,KAAA,MAAAC,EAAA;UACA;QACA;;QAEA;QACA,IAAAL,IAAA,CAAAM,IAAA;UACA,KAAAH,QAAA,CAAAC,KAAA,MAAAC,EAAA;UACA;QACA;QAEA;UACA;UACA,MAAAE,QAAA,OAAAC,QAAA;UACAD,QAAA,CAAAE,MAAA,SAAAT,IAAA;;UAEA;UACA,MAAAU,OAAA,QAAAC,QAAA;YACAC,IAAA;YACAC,IAAA,OAAAR,EAAA;YACAS,OAAA;YACAC,UAAA;UACA;;UAEA;UACA,MAAAC,QAAA,SAAA/C,KAAA,CAAAgD,IAAA,6BAAAV,QAAA;YACAW,OAAA;cACA;cACA,gCAAAC,QAAA;YACA;UACA;;UAEA;UACAT,OAAA,CAAAU,KAAA;;UAEA;UACA,MAAAC,GAAA,GAAAL,QAAA,CAAArC,IAAA,CAAA0C,GAAA;;UAEA;UACA,MAAAC,KAAA,QAAAC,KAAA,CAAAC,WAAA,CAAAF,KAAA;;UAEA;UACA,MAAAG,KAAA,GAAAH,KAAA,CAAAI,YAAA;;UAEA;UACAJ,KAAA,CAAAK,WAAA,CAAAF,KAAA,CAAAG,KAAA,WAAAP,GAAA;;UAEA;UACAC,KAAA,CAAAO,YAAA,CAAAJ,KAAA,CAAAG,KAAA;;UAEA;UACA,KAAAzB,QAAA,CAAA2B,OAAA,MAAAzB,EAAA;QACA,SAAAD,KAAA;UACA2B,OAAA,CAAA3B,KAAA,YAAAA,KAAA;UACA,KAAAD,QAAA,CAAAC,KAAA,MAAAC,EAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}