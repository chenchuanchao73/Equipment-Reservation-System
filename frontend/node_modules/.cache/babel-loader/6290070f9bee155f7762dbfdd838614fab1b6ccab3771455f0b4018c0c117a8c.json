{"ast":null,"code":"import { reservationApi } from '@/api';\nexport default {\n  name: 'ReservationQuery',\n  data() {\n    return {\n      loading: false,\n      showInstructions: true,\n      notFound: false,\n      queryForm: {\n        reservationCode: '',\n        userContact: ''\n      },\n      queryRules: {\n        reservationCode: [{\n          required: true,\n          message: this.$t('reservation.requiredField'),\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 20,\n          message: this.$t('common.lengthLimit', {\n            min: 6,\n            max: 20\n          }),\n          trigger: 'blur'\n        }],\n        userContact: [{\n          required: true,\n          message: this.$t('reservation.requiredField'),\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    // 如果URL中有预定码参数，自动填充\n    const code = this.$route.query.code;\n    if (code) {\n      this.queryForm.reservationCode = code;\n    }\n  },\n  methods: {\n    handleQuery() {\n      this.$refs.queryForm.validate(async valid => {\n        if (!valid) {\n          return false;\n        }\n        this.loading = true;\n        this.showInstructions = false;\n        this.notFound = false;\n        try {\n          const response = await reservationApi.getReservation(this.queryForm.reservationCode);\n          if (response.data.success) {\n            // 导航到预定详情页\n            this.$router.push(`/reservation/${this.queryForm.reservationCode}`);\n          } else {\n            this.notFound = true;\n          }\n        } catch (error) {\n          console.error('Failed to query reservation:', error);\n          this.notFound = true;\n        } finally {\n          this.loading = false;\n        }\n      });\n    },\n    resetForm() {\n      this.$refs.queryForm.resetFields();\n      this.notFound = false;\n      this.showInstructions = true;\n    }\n  }\n};","map":{"version":3,"names":["reservationApi","name","data","loading","showInstructions","notFound","queryForm","reservationCode","userContact","queryRules","required","message","$t","trigger","min","max","created","code","$route","query","methods","handleQuery","$refs","validate","valid","response","getReservation","success","$router","push","error","console","resetForm","resetFields"],"sources":["src/views/reservation/ReservationQuery.vue"],"sourcesContent":["<template>\n  <div class=\"reservation-query\">\n    <h1 class=\"page-title\">{{ $t('reservation.query') }}</h1>\n\n    <!-- 选项卡切换公开查询和个人预约管理 -->\n    <el-tabs v-model=\"activeTab\" @tab-click=\"handleTabClick\">\n      <el-tab-pane :label=\"$t('reservation.publicQuery')\" name=\"public\">\n        <!-- 公开查询表单 -->\n        <el-form\n          ref=\"publicQueryForm\"\n          :model=\"publicQueryForm\"\n          label-position=\"top\"\n          @submit.native.prevent=\"handlePublicQuery\"\n        >\n          <el-form-item :label=\"$t('equipment.category')\">\n            <el-select\n              v-model=\"publicQueryForm.category\"\n              :placeholder=\"$t('equipment.allCategories')\"\n              clearable\n              style=\"width: 100%\"\n              @change=\"handlePublicQuery\"\n            >\n              <el-option\n                v-for=\"category in categories\"\n                :key=\"category\"\n                :label=\"category\"\n                :value=\"category\"\n              ></el-option>\n            </el-select>\n          </el-form-item>\n\n          <el-form-item :label=\"$t('reservation.dateRange')\">\n            <el-date-picker\n              v-model=\"publicQueryForm.dateRange\"\n              type=\"daterange\"\n              range-separator=\"-\"\n              :start-placeholder=\"$t('reservation.startDate')\"\n              :end-placeholder=\"$t('reservation.endDate')\"\n              style=\"width: 100%\"\n              @change=\"handlePublicQuery\"\n            ></el-date-picker>\n          </el-form-item>\n\n          <el-form-item>\n            <el-button\n              type=\"primary\"\n              native-type=\"submit\"\n              :loading=\"publicLoading\"\n              style=\"width: 100%\"\n            >\n              {{ $t('reservation.queryButton') }}\n            </el-button>\n          </el-form-item>\n        </el-form>\n      </el-tab-pane>\n\n      <el-tab-pane :label=\"$t('reservation.personalManagement')\" name=\"personal\">\n        <!-- 个人预约管理表单 -->\n        <el-form\n          ref=\"personalQueryForm\"\n          :model=\"personalQueryForm\"\n          :rules=\"personalQueryRules\"\n          label-position=\"top\"\n          @submit.native.prevent=\"handlePersonalQuery\"\n        >\n          <el-form-item :label=\"$t('reservation.code')\" prop=\"reservationCode\">\n            <el-input\n              v-model=\"personalQueryForm.reservationCode\"\n              :placeholder=\"$t('reservation.queryPlaceholder')\"\n              clearable\n            ></el-input>\n          </el-form-item>\n\n          <el-form-item :label=\"$t('reservation.userContact')\" prop=\"userContact\">\n            <el-input\n              v-model=\"personalQueryForm.userContact\"\n              :placeholder=\"$t('reservation.contactPlaceholder')\"\n              clearable\n            ></el-input>\n          </el-form-item>\n\n          <el-form-item>\n            <el-button\n              type=\"primary\"\n              native-type=\"submit\"\n              :loading=\"personalLoading\"\n              style=\"width: 100%\"\n            >\n              {{ $t('reservation.queryButton') }}\n            </el-button>\n          </el-form-item>\n        </el-form>\n      </el-tab-pane>\n    </el-tabs>\n\n    <!-- 公开查询结果 -->\n    <div v-if=\"activeTab === 'public' && publicReservations.length > 0\" class=\"query-results\">\n      <el-card shadow=\"never\" class=\"result-card\">\n        <div slot=\"header\">\n          <span>{{ $t('reservation.queryResults') }}</span>\n        </div>\n\n        <el-table\n          :data=\"publicReservations\"\n          style=\"width: 100%\"\n          :default-sort=\"{ prop: 'start_datetime', order: 'ascending' }\"\n          v-loading=\"publicLoading\"\n        >\n          <el-table-column\n            prop=\"equipment_name\"\n            :label=\"$t('equipment.name')\"\n            min-width=\"120\"\n          ></el-table-column>\n\n          <el-table-column\n            prop=\"start_datetime\"\n            :label=\"$t('reservation.startTime')\"\n            min-width=\"160\"\n            :formatter=\"formatDateTime\"\n            sortable\n          ></el-table-column>\n\n          <el-table-column\n            prop=\"end_datetime\"\n            :label=\"$t('reservation.endTime')\"\n            min-width=\"160\"\n            :formatter=\"formatDateTime\"\n            sortable\n          ></el-table-column>\n\n          <el-table-column\n            prop=\"status\"\n            :label=\"$t('reservation.status')\"\n            width=\"100\"\n          >\n            <template slot-scope=\"scope\">\n              <el-tag\n                :type=\"scope.row.status === 'confirmed' ? 'success' : 'info'\"\n                size=\"small\"\n              >\n                {{ scope.row.status === 'confirmed' ? $t('reservation.confirmed') : $t('reservation.cancelled') }}\n              </el-tag>\n            </template>\n          </el-table-column>\n        </el-table>\n      </el-card>\n    </div>\n\n    <!-- 无公开查询结果提示 -->\n    <div v-if=\"activeTab === 'public' && publicQuerySubmitted && publicReservations.length === 0\" class=\"no-results-card\">\n      <el-card shadow=\"never\">\n        <el-result\n          icon=\"info\"\n          :title=\"$t('reservation.noReservationsFound')\"\n          :sub-title=\"$t('reservation.tryDifferentCriteria')\"\n        ></el-result>\n      </el-card>\n    </div>\n\n    <!-- 个人预约管理说明 -->\n    <div v-if=\"activeTab === 'personal' && showInstructions\" class=\"instructions-card\">\n      <el-card shadow=\"never\">\n        <div slot=\"header\">\n          <span>{{ $t('common.instructions') }}</span>\n        </div>\n\n        <div class=\"instructions-content\">\n          <p>{{ $t('reservation.queryInstructions') }}</p>\n          <ul>\n            <li>{{ $t('reservation.queryInstruction1') }}</li>\n            <li>{{ $t('reservation.queryInstruction2') }}</li>\n            <li>{{ $t('reservation.queryInstruction3') }}</li>\n          </ul>\n        </div>\n      </el-card>\n    </div>\n\n    <!-- 个人预约未找到提示 -->\n    <div v-if=\"activeTab === 'personal' && notFound\" class=\"not-found-card\">\n      <el-card shadow=\"never\">\n        <el-result\n          icon=\"error\"\n          :title=\"$t('reservation.reservationNotFound')\"\n          :sub-title=\"$t('reservation.checkCodeAndContact')\"\n        ></el-result>\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { reservationApi } from '@/api'\n\nexport default {\n  name: 'ReservationQuery',\n\n  data() {\n    return {\n      loading: false,\n      showInstructions: true,\n      notFound: false,\n\n      queryForm: {\n        reservationCode: '',\n        userContact: ''\n      },\n\n      queryRules: {\n        reservationCode: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'blur' },\n          { min: 6, max: 20, message: this.$t('common.lengthLimit', { min: 6, max: 20 }), trigger: 'blur' }\n        ],\n        userContact: [\n          { required: true, message: this.$t('reservation.requiredField'), trigger: 'blur' }\n        ]\n      }\n    }\n  },\n\n  created() {\n    // 如果URL中有预定码参数，自动填充\n    const code = this.$route.query.code\n    if (code) {\n      this.queryForm.reservationCode = code\n    }\n  },\n\n  methods: {\n    handleQuery() {\n      this.$refs.queryForm.validate(async (valid) => {\n        if (!valid) {\n          return false\n        }\n\n        this.loading = true\n        this.showInstructions = false\n        this.notFound = false\n\n        try {\n          const response = await reservationApi.getReservation(this.queryForm.reservationCode)\n\n          if (response.data.success) {\n            // 导航到预定详情页\n            this.$router.push(`/reservation/${this.queryForm.reservationCode}`)\n          } else {\n            this.notFound = true\n          }\n        } catch (error) {\n          console.error('Failed to query reservation:', error)\n          this.notFound = true\n        } finally {\n          this.loading = false\n        }\n      })\n    },\n\n    resetForm() {\n      this.$refs.queryForm.resetFields()\n      this.notFound = false\n      this.showInstructions = true\n    }\n  }\n}\n</script>\n\n<style scoped>\n.reservation-query {\n  max-width: 600px;\n  margin: 0 auto;\n}\n\n.page-title {\n  margin-bottom: 20px;\n  font-size: 24px;\n  color: #303133;\n}\n\n.query-card {\n  margin-bottom: 20px;\n}\n\n.instructions-card,\n.not-found-card {\n  margin-top: 30px;\n}\n\n.instructions-content {\n  color: #606266;\n}\n\n.instructions-content p {\n  margin-top: 0;\n}\n\n.instructions-content ul {\n  padding-left: 20px;\n}\n\n.instructions-content li {\n  margin-bottom: 10px;\n}\n</style>\n"],"mappings":"AA+LA,SAAAA,cAAA;AAEA;EACAC,IAAA;EAEAC,KAAA;IACA;MACAC,OAAA;MACAC,gBAAA;MACAC,QAAA;MAEAC,SAAA;QACAC,eAAA;QACAC,WAAA;MACA;MAEAC,UAAA;QACAF,eAAA,GACA;UAAAG,QAAA;UAAAC,OAAA,OAAAC,EAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAJ,OAAA,OAAAC,EAAA;YAAAE,GAAA;YAAAC,GAAA;UAAA;UAAAF,OAAA;QAAA,EACA;QACAL,WAAA,GACA;UAAAE,QAAA;UAAAC,OAAA,OAAAC,EAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EAEAG,QAAA;IACA;IACA,MAAAC,IAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAF,IAAA;IACA,IAAAA,IAAA;MACA,KAAAX,SAAA,CAAAC,eAAA,GAAAU,IAAA;IACA;EACA;EAEAG,OAAA;IACAC,YAAA;MACA,KAAAC,KAAA,CAAAhB,SAAA,CAAAiB,QAAA,OAAAC,KAAA;QACA,KAAAA,KAAA;UACA;QACA;QAEA,KAAArB,OAAA;QACA,KAAAC,gBAAA;QACA,KAAAC,QAAA;QAEA;UACA,MAAAoB,QAAA,SAAAzB,cAAA,CAAA0B,cAAA,MAAApB,SAAA,CAAAC,eAAA;UAEA,IAAAkB,QAAA,CAAAvB,IAAA,CAAAyB,OAAA;YACA;YACA,KAAAC,OAAA,CAAAC,IAAA,sBAAAvB,SAAA,CAAAC,eAAA;UACA;YACA,KAAAF,QAAA;UACA;QACA,SAAAyB,KAAA;UACAC,OAAA,CAAAD,KAAA,iCAAAA,KAAA;UACA,KAAAzB,QAAA;QACA;UACA,KAAAF,OAAA;QACA;MACA;IACA;IAEA6B,UAAA;MACA,KAAAV,KAAA,CAAAhB,SAAA,CAAA2B,WAAA;MACA,KAAA5B,QAAA;MACA,KAAAD,gBAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}