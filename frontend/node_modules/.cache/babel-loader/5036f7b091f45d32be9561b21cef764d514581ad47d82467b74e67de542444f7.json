{"ast":null,"code":"// import { Calendar } from '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport FullCalendar from '@fullcalendar/vue';\nimport { formatDate } from '@/utils/date';\nimport reservationApi from '@/api/reservation';\nexport default {\n  name: 'CalendarView',\n  components: {\n    FullCalendar\n  },\n  data() {\n    return {\n      calendarOptions: {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        initialView: 'dayGridMonth',\n        headerToolbar: false,\n        // 我们使用自定义的头部控件\n        events: [],\n        // 将通过API加载\n        eventClick: this.handleEventClick,\n        eventDidMount: this.handleEventDidMount,\n        datesSet: this.handleDatesSet,\n        locale: this.$i18n.locale === 'zh-CN' ? 'zh-cn' : 'en',\n        firstDay: 1,\n        // 周一作为一周的第一天\n        allDaySlot: false,\n        // 不显示\"全天\"选项\n        slotMinTime: '00:00:00',\n        // 从0点开始\n        slotMaxTime: '24:00:00',\n        // 到24点结束\n        height: 'auto',\n        nowIndicator: true,\n        // 显示当前时间指示器\n        slotLabelFormat: {\n          hour: '2-digit',\n          minute: '2-digit',\n          hour12: false // 使用24小时制\n        },\n        slotEventOverlap: false,\n        // 禁止事件重叠\n        eventTimeFormat: {\n          // 统一时间格式\n          hour: '2-digit',\n          minute: '2-digit',\n          hour12: false\n        },\n        titleFormat: {\n          year: 'numeric',\n          month: 'long'\n        },\n        // 标题格式\n        views: {\n          dayGridMonth: {\n            dayHeaderFormat: {\n              weekday: 'long'\n            },\n            // 月视图只显示星期几\n            fixedWeekCount: false,\n            // 根据当月天数动态调整行数\n            showNonCurrentDates: false // 隐藏不属于当前月份的日期\n          },\n          timeGridWeek: {\n            dayHeaderFormat: {\n              weekday: 'long',\n              month: 'numeric',\n              day: 'numeric',\n              omitCommas: true\n            } // 周视图显示完整日期\n          },\n          timeGridDay: {\n            dayHeaderFormat: {\n              weekday: 'long',\n              month: 'numeric',\n              day: 'numeric',\n              omitCommas: true\n            },\n            // 日视图显示完整日期\n            slotEventOverlap: false,\n            // 日视图特别禁止事件重叠\n            eventMaxStack: 4,\n            // 最多显示4个事件，超过则显示\"+更多\"\n            moreLinkClick: 'popover' // 点击\"+更多\"时显示弹窗\n          }\n        },\n        locales: {\n          'zh-cn': {\n            week: {\n              dow: 1,\n              // 周一作为一周的第一天\n              doy: 4 // 一年中第一周必须包含1月4日\n            },\n            buttonText: {\n              today: '今天',\n              month: '月',\n              week: '周',\n              day: '日'\n            },\n            weekText: '周',\n            allDayText: '全天',\n            moreLinkText: '更多',\n            noEventsText: '没有事件'\n          },\n          'en': {\n            week: {\n              dow: 1,\n              // 周一作为一周的第一天\n              doy: 4 // 一年中第一周必须包含1月4日\n            },\n            buttonText: {\n              today: 'Today',\n              month: 'Month',\n              week: 'Week',\n              day: 'Day'\n            },\n            weekText: 'W',\n            allDayText: 'All day',\n            moreLinkText: 'more',\n            noEventsText: 'No events'\n          }\n        }\n      },\n      detailVisible: false,\n      selectedEvent: null,\n      loading: false,\n      currentViewTitle: '',\n      cancelDialogVisible: false,\n      cancelling: false,\n      cancelForm: {\n        reservationCode: ''\n      },\n      cancelRules: {\n        reservationCode: [{\n          required: true,\n          message: this.$t('reservation.codeOrContactRequired'),\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted() {\n    this.loadEvents();\n  },\n  beforeDestroy() {\n    // 清除资源\n  },\n  watch: {\n    // 监听语言变化\n    '$i18n.locale': {\n      handler(newLocale) {\n        if (this.$refs.fullCalendar) {\n          const calendarApi = this.$refs.fullCalendar.getApi();\n          calendarApi.setOption('locale', newLocale === 'zh-CN' ? 'zh-cn' : 'en');\n          this.currentViewTitle = calendarApi.view.title;\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    // 加载预约数据\n    async loadEvents() {\n      this.loading = true;\n      try {\n        const calendarApi = this.$refs.fullCalendar.getApi();\n        const start = this.formatDate(calendarApi.view.activeStart);\n        const end = this.formatDate(calendarApi.view.activeEnd);\n        const response = await this.$http.get('/api/reservations/calendar', {\n          params: {\n            start_date: start,\n            end_date: end\n          }\n        });\n        if (response.data.success) {\n          calendarApi.removeAllEvents();\n          calendarApi.addEventSource(response.data.events);\n        } else {\n          this.$message.error(response.data.message || this.$t('calendar.loadFailed'));\n        }\n      } catch (error) {\n        console.error('Failed to load calendar events:', error);\n        this.$message.error(this.$t('calendar.loadFailed'));\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 处理日期范围变化\n    handleDatesSet() {\n      // 更新当前视图标题\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      this.currentViewTitle = calendarApi.view.title;\n\n      // 加载事件数据\n      this.loadEvents();\n    },\n    // 处理事件点击\n    handleEventClick(info) {\n      this.selectedEvent = info.event;\n      this.detailVisible = true;\n    },\n    // 处理事件渲染\n    handleEventDidMount(info) {\n      // 获取事件状态\n      const status = info.event.extendedProps.status;\n\n      // 根据状态设置事件颜色（适用于所有视图）\n      if (status) {\n        if (status === 'confirmed') {\n          info.el.style.backgroundColor = 'rgba(103, 194, 58, 0.7)'; // 已确认 - 半透明绿色\n          info.el.style.borderColor = 'rgba(103, 194, 58, 0.9)';\n        } else if (status === 'in_use') {\n          info.el.style.backgroundColor = 'rgba(64, 158, 255, 0.7)'; // 使用中 - 半透明蓝色\n          info.el.style.borderColor = 'rgba(64, 158, 255, 0.9)';\n        }\n      }\n\n      // 添加鼠标悬停工具提示\n      this.addEventTooltip(info);\n\n      // 为循环预约添加标记 - 适用于所有视图\n      if (info.event.extendedProps.isRecurring) {\n        // 月视图的处理方式\n        if (info.view.type === 'dayGridMonth') {\n          const recurringIcon = document.createElement('span');\n          recurringIcon.className = 'recurring-icon';\n          recurringIcon.innerHTML = '<i class=\"el-icon-refresh-right\"></i>';\n          const titleEl = info.el.querySelector('.fc-event-title');\n          if (titleEl) {\n            titleEl.appendChild(recurringIcon);\n          }\n        }\n        // 周视图和日视图的处理方式\n        else if (info.view.type === 'timeGridWeek' || info.view.type === 'timeGridDay') {\n          // 为事件添加循环图标标记\n          const recurringIcon = document.createElement('span');\n          recurringIcon.className = 'recurring-icon-timegrid';\n          recurringIcon.innerHTML = '<i class=\"el-icon-refresh-right\"></i>';\n\n          // 添加到自定义内容中\n          const eventContent = info.el.querySelector('.custom-event-content');\n          if (eventContent) {\n            eventContent.appendChild(recurringIcon);\n          } else {\n            // 如果还没有自定义内容，添加到事件主体\n            const mainContent = info.el.querySelector('.fc-event-main');\n            if (mainContent) {\n              mainContent.appendChild(recurringIcon);\n            }\n          }\n        }\n      }\n\n      // 在月视图中修改时间格式为24小时制\n      if (info.view.type === 'dayGridMonth') {\n        const timeEl = info.el.querySelector('.fc-event-time');\n        if (timeEl && info.event.start) {\n          // 使用24小时制格式化时间\n          const formattedTime = info.event.start.toLocaleTimeString('zh-CN', {\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: false\n          });\n          timeEl.textContent = formattedTime;\n        }\n      }\n\n      // 在周视图和日视图中自定义事件内容\n      if (info.view.type === 'timeGridWeek' || info.view.type === 'timeGridDay') {\n        // 清除默认内容\n        const eventContent = info.el.querySelector('.fc-event-main');\n        if (eventContent) {\n          // 创建自定义内容\n          const customContent = document.createElement('div');\n          customContent.className = 'custom-event-content';\n\n          // 设备名称\n          const title = document.createElement('div');\n          title.className = 'event-title';\n          title.textContent = info.event.title;\n          customContent.appendChild(title);\n\n          // 使用人\n          const user = document.createElement('div');\n          user.className = 'event-user';\n          user.textContent = info.event.extendedProps.userName || '';\n          customContent.appendChild(user);\n\n          // 时间\n          const time = document.createElement('div');\n          time.className = 'event-time';\n          const startTime = info.event.start ? info.event.start.toLocaleTimeString('zh-CN', {\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: false\n          }) : '';\n          const endTime = info.event.end ? info.event.end.toLocaleTimeString('zh-CN', {\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: false\n          }) : '';\n          time.textContent = `${startTime}-${endTime}`;\n          customContent.appendChild(time);\n\n          // 替换内容\n          eventContent.innerHTML = '';\n          eventContent.appendChild(customContent);\n\n          // 为循环预约添加图标\n          if (info.event.extendedProps.isRecurring) {\n            const recurringIcon = document.createElement('span');\n            recurringIcon.className = 'recurring-icon-timegrid';\n            recurringIcon.innerHTML = '<i class=\"el-icon-refresh-right\"></i>';\n            eventContent.appendChild(recurringIcon);\n          }\n        }\n      }\n    },\n    // 切换视图\n    changeView(viewName) {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.changeView(viewName);\n    },\n    // 跳转到今天\n    today() {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.today();\n    },\n    // 上一个时间段\n    prev() {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.prev();\n    },\n    // 下一个时间段\n    next() {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.next();\n    },\n    // 获取状态标签类型\n    getStatusTagType(status) {\n      const statusMap = {\n        'confirmed': 'success',\n        'in_use': 'primary',\n        'cancelled': 'info',\n        'expired': 'danger'\n      };\n      return statusMap[status] || 'info';\n    },\n    // 格式化日期\n    formatDate(date) {\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    },\n    // 格式化日期时间\n    formatDateTime(date) {\n      return formatDate(date, 'YYYY-MM-DD HH:mm');\n    },\n    // 获取状态文本\n    getStatusText(status) {\n      const statusMap = {\n        'confirmed': this.$t('reservation.confirmed'),\n        'in_use': this.$t('reservation.inUse'),\n        'cancelled': this.$t('reservation.cancelled'),\n        'expired': this.$t('reservation.expired')\n      };\n      return statusMap[status] || status;\n    },\n    // 添加事件工具提示\n    addEventTooltip(info) {\n      // 获取事件信息\n      const event = info.event;\n      const props = event.extendedProps;\n\n      // 计算事件持续时间（分钟）\n      const start = event.start;\n      const end = event.end;\n      const durationMs = end - start;\n      const durationMinutes = Math.round(durationMs / (1000 * 60));\n\n      // 为短时间预约添加特殊标记（30分钟或更短）\n      if (durationMinutes <= 30) {\n        // 添加短时间预约的类\n        info.el.classList.add('very-short-duration-event');\n\n        // 获取当前视图类型\n        const calendarApi = this.$refs.fullCalendar.getApi();\n        const viewType = calendarApi.view.type;\n\n        // 简化显示内容，只保留最重要的信息\n        const titleEl = info.el.querySelector('.fc-event-title');\n        const timeEl = info.el.querySelector('.fc-event-time');\n        if (titleEl) {\n          // 只显示设备名称（取第一个单词，通常是设备名称）\n          const shortTitle = `${event.title.split(' ')[0]}`;\n          titleEl.textContent = shortTitle;\n\n          // 在日视图中，确保文字清晰可见\n          if (viewType === 'timeGridDay') {\n            // 调整主容器样式\n            const mainEl = info.el.querySelector('.fc-event-main');\n            if (mainEl) {\n              mainEl.style.display = 'flex';\n              mainEl.style.flexDirection = 'row';\n              mainEl.style.alignItems = 'center';\n              mainEl.style.justifyContent = 'center';\n              mainEl.style.padding = '2px';\n            }\n\n            // 调整时间显示\n            if (timeEl) {\n              timeEl.style.marginRight = '4px';\n              timeEl.style.fontWeight = 'bold';\n              timeEl.style.fontSize = '1em';\n            }\n\n            // 确保标题显示清晰\n            if (titleEl) {\n              titleEl.style.fontWeight = 'bold';\n              titleEl.style.fontSize = '1em';\n\n              // 如果是非常短的预约（小于20分钟），只显示设备名称\n              if (durationMinutes < 20) {\n                const shortTitle = `${event.title.split(' ')[0]}`;\n                titleEl.textContent = shortTitle;\n              } else {\n                // 否则显示设备名称和用户名\n                const shortTitle = `${event.title.split(' ')[0]} ${props.userName ? props.userName.split(' ')[0] : ''}`;\n                titleEl.textContent = shortTitle;\n              }\n            }\n          }\n        }\n      }\n\n      // 设置title属性（原生浏览器工具提示）\n      const tooltipText = `${event.title}\\n${props.userName || ''}\\n${this.formatDateTime(start)} - ${this.formatDateTime(end)}\\n${this.getStatusText(props.status)}\\n${props.reservationNumber}`;\n      info.el.setAttribute('title', tooltipText);\n    },\n    // 显示取消预约对话框\n    showCancelDialog() {\n      this.cancelForm.reservationCode = '';\n      this.cancelDialogVisible = true;\n    },\n    // 取消预约\n    async cancelReservation() {\n      try {\n        // 验证表单\n        await this.$refs.cancelForm.validate();\n\n        // 检查输入的预约码是否与当前预约码匹配\n        if (this.cancelForm.reservationCode !== this.selectedEvent.extendedProps.reservationCode) {\n          this.$message.error(this.$t('reservation.checkCodeAndContact'));\n          return;\n        }\n        this.cancelling = true;\n\n        // 准备请求数据\n        const data = {\n          reservation_number: this.selectedEvent.extendedProps.reservationNumber || null,\n          lang: this.$i18n.locale\n        };\n\n        // 调用取消预约API\n        const response = await reservationApi.cancelReservation(this.selectedEvent.extendedProps.reservationCode, data);\n        if (response.data.success) {\n          this.$message.success(this.$t('reservation.cancelSuccess'));\n          this.cancelDialogVisible = false;\n\n          // 关闭预约详情弹窗\n          this.detailVisible = false;\n\n          // 重新加载日历事件\n          this.loadEvents();\n        } else {\n          this.$message.error(response.data.message || this.$t('reservation.cancelFailed'));\n        }\n      } catch (error) {\n        console.error('Failed to cancel reservation:', error);\n        this.$message.error(this.$t('error.serverError'));\n      } finally {\n        this.cancelling = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["dayGridPlugin","timeGridPlugin","interactionPlugin","FullCalendar","formatDate","reservationApi","name","components","data","calendarOptions","plugins","initialView","headerToolbar","events","eventClick","handleEventClick","eventDidMount","handleEventDidMount","datesSet","handleDatesSet","locale","$i18n","firstDay","allDaySlot","slotMinTime","slotMaxTime","height","nowIndicator","slotLabelFormat","hour","minute","hour12","slotEventOverlap","eventTimeFormat","titleFormat","year","month","views","dayGridMonth","dayHeaderFormat","weekday","fixedWeekCount","showNonCurrentDates","timeGridWeek","day","omitCommas","timeGridDay","eventMaxStack","moreLinkClick","locales","week","dow","doy","buttonText","today","weekText","allDayText","moreLinkText","noEventsText","detailVisible","selectedEvent","loading","currentViewTitle","cancelDialogVisible","cancelling","cancelForm","reservationCode","cancelRules","required","message","$t","trigger","mounted","loadEvents","beforeDestroy","watch","handler","newLocale","$refs","fullCalendar","calendarApi","getApi","setOption","view","title","immediate","methods","start","activeStart","end","activeEnd","response","$http","get","params","start_date","end_date","success","removeAllEvents","addEventSource","$message","error","console","info","event","status","extendedProps","el","style","backgroundColor","borderColor","addEventTooltip","isRecurring","type","recurringIcon","document","createElement","className","innerHTML","titleEl","querySelector","appendChild","eventContent","mainContent","timeEl","formattedTime","toLocaleTimeString","textContent","customContent","user","userName","time","startTime","endTime","changeView","viewName","prev","next","getStatusTagType","statusMap","date","getFullYear","String","getMonth","padStart","getDate","formatDateTime","getStatusText","props","durationMs","durationMinutes","Math","round","classList","add","viewType","shortTitle","split","mainEl","display","flexDirection","alignItems","justifyContent","padding","marginRight","fontWeight","fontSize","tooltipText","reservationNumber","setAttribute","showCancelDialog","cancelReservation","validate","reservation_number","lang"],"sources":["src/views/calendar/CalendarView.vue"],"sourcesContent":["<template>\n  <div class=\"calendar-view\">\n    <div class=\"calendar-header\">\n      <el-row type=\"flex\" justify=\"space-between\" align=\"middle\">\n        <el-col :span=\"8\">\n          <h1>{{ $t('calendar.title') }}</h1>\n          <h2 class=\"calendar-current-date\">{{ currentViewTitle }}</h2>\n        </el-col>\n        <el-col :span=\"16\">\n          <div class=\"calendar-controls\">\n            <el-button-group>\n              <el-button size=\"small\" @click=\"changeView('dayGridMonth')\">{{ $t('calendar.month') }}</el-button>\n              <el-button size=\"small\" @click=\"changeView('timeGridWeek')\">{{ $t('calendar.week') }}</el-button>\n              <el-button size=\"small\" @click=\"changeView('timeGridDay')\">{{ $t('calendar.day') }}</el-button>\n            </el-button-group>\n            <el-button size=\"small\" @click=\"today\">{{ $t('calendar.today') }}</el-button>\n            <el-button-group>\n              <el-button size=\"small\" icon=\"el-icon-arrow-left\" @click=\"prev\"></el-button>\n              <el-button size=\"small\" icon=\"el-icon-arrow-right\" @click=\"next\"></el-button>\n            </el-button-group>\n          </div>\n        </el-col>\n      </el-row>\n    </div>\n\n    <FullCalendar\n      ref=\"fullCalendar\"\n      :options=\"calendarOptions\"\n    />\n\n    <!-- 预约详情弹窗 -->\n    <el-dialog :visible.sync=\"detailVisible\" width=\"400px\" :title=\"$t('calendar.reservationInfo')\">\n      <div v-if=\"selectedEvent\" class=\"event-detail-card\">\n        <div class=\"event-header\" :class=\"'status-' + selectedEvent.extendedProps.status\">\n          <h3>{{ selectedEvent.title }}</h3>\n          <el-tag size=\"small\" :type=\"getStatusTagType(selectedEvent.extendedProps.status)\">\n            {{ getStatusText(selectedEvent.extendedProps.status) }}\n          </el-tag>\n        </div>\n\n        <div class=\"event-info\">\n          <div class=\"info-item time-info\">\n            <i class=\"el-icon-time\"></i>\n            <span class=\"time-display\">{{ formatDateTime(selectedEvent.start) }} - {{ formatDateTime(selectedEvent.end) }}</span>\n          </div>\n\n          <div class=\"info-item\">\n            <i class=\"el-icon-user\"></i>\n            <span>{{ selectedEvent.extendedProps.userName }} ({{ selectedEvent.extendedProps.userDepartment }})</span>\n          </div>\n\n          <div class=\"info-item\" v-if=\"selectedEvent.extendedProps.userEmail\">\n            <i class=\"el-icon-message\"></i>\n            <span>{{ selectedEvent.extendedProps.userEmail }}</span>\n          </div>\n        </div>\n\n        <!-- 循环预约提示 -->\n        <div v-if=\"selectedEvent.extendedProps.isRecurring\" class=\"recurring-notice\">\n          <el-alert\n            :title=\"$t('reservation.partOfRecurringReservation')\"\n            type=\"info\"\n            :closable=\"false\">\n          </el-alert>\n        </div>\n\n        <!-- 取消预约/提前归还按钮 -->\n        <div class=\"action-buttons\">\n          <el-button\n            type=\"danger\"\n            @click=\"showCancelDialog\"\n          >\n            {{ selectedEvent.extendedProps.status === 'in_use' ? $t('reservation.earlyReturn') : $t('reservation.cancelReservation') }}\n          </el-button>\n        </div>\n      </div>\n    </el-dialog>\n\n    <!-- 取消预约/提前归还对话框 -->\n    <el-dialog\n      :title=\"selectedEvent && selectedEvent.extendedProps.status === 'in_use' ? $t('reservation.earlyReturn') : $t('reservation.cancelReservation')\"\n      :visible.sync=\"cancelDialogVisible\"\n      width=\"400px\"\n    >\n      <div class=\"cancel-content\">\n        <p>{{ selectedEvent && selectedEvent.extendedProps.status === 'in_use' ? $t('reservation.confirmEarlyReturn') : $t('reservation.confirmCancel') }}</p>\n\n        <el-form ref=\"cancelForm\" :model=\"cancelForm\" :rules=\"cancelRules\" label-position=\"top\">\n          <el-form-item :label=\"$t('reservation.code')\" prop=\"reservationCode\">\n            <el-input\n              v-model=\"cancelForm.reservationCode\"\n              :placeholder=\"$t('reservation.queryPlaceholder')\"\n            ></el-input>\n          </el-form-item>\n        </el-form>\n      </div>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"cancelDialogVisible = false\">{{ $t('common.cancel') }}</el-button>\n        <el-button type=\"danger\" :loading=\"cancelling\" @click=\"cancelReservation\">{{ $t('common.confirm') }}</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n// import { Calendar } from '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport FullCalendar from '@fullcalendar/vue';\nimport { formatDate } from '@/utils/date';\nimport reservationApi from '@/api/reservation';\n\nexport default {\n  name: 'CalendarView',\n  components: {\n    FullCalendar\n  },\n  data() {\n    return {\n      calendarOptions: {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        initialView: 'dayGridMonth',\n        headerToolbar: false, // 我们使用自定义的头部控件\n        events: [], // 将通过API加载\n        eventClick: this.handleEventClick,\n        eventDidMount: this.handleEventDidMount,\n        datesSet: this.handleDatesSet,\n        locale: this.$i18n.locale === 'zh-CN' ? 'zh-cn' : 'en',\n        firstDay: 1, // 周一作为一周的第一天\n        allDaySlot: false, // 不显示\"全天\"选项\n        slotMinTime: '00:00:00', // 从0点开始\n        slotMaxTime: '24:00:00', // 到24点结束\n        height: 'auto',\n        nowIndicator: true, // 显示当前时间指示器\n        slotLabelFormat: {\n          hour: '2-digit',\n          minute: '2-digit',\n          hour12: false // 使用24小时制\n        },\n        slotEventOverlap: false, // 禁止事件重叠\n        eventTimeFormat: { // 统一时间格式\n          hour: '2-digit',\n          minute: '2-digit',\n          hour12: false\n        },\n        titleFormat: { year: 'numeric', month: 'long' }, // 标题格式\n        views: {\n          dayGridMonth: {\n            dayHeaderFormat: { weekday: 'long' }, // 月视图只显示星期几\n            fixedWeekCount: false, // 根据当月天数动态调整行数\n            showNonCurrentDates: false // 隐藏不属于当前月份的日期\n          },\n          timeGridWeek: {\n            dayHeaderFormat: { weekday: 'long', month: 'numeric', day: 'numeric', omitCommas: true } // 周视图显示完整日期\n          },\n          timeGridDay: {\n            dayHeaderFormat: { weekday: 'long', month: 'numeric', day: 'numeric', omitCommas: true }, // 日视图显示完整日期\n            slotEventOverlap: false, // 日视图特别禁止事件重叠\n            eventMaxStack: 4, // 最多显示4个事件，超过则显示\"+更多\"\n            moreLinkClick: 'popover' // 点击\"+更多\"时显示弹窗\n          }\n        },\n        locales: {\n          'zh-cn': {\n            week: {\n              dow: 1, // 周一作为一周的第一天\n              doy: 4  // 一年中第一周必须包含1月4日\n            },\n            buttonText: {\n              today: '今天',\n              month: '月',\n              week: '周',\n              day: '日'\n            },\n            weekText: '周',\n            allDayText: '全天',\n            moreLinkText: '更多',\n            noEventsText: '没有事件'\n          },\n          'en': {\n            week: {\n              dow: 1, // 周一作为一周的第一天\n              doy: 4  // 一年中第一周必须包含1月4日\n            },\n            buttonText: {\n              today: 'Today',\n              month: 'Month',\n              week: 'Week',\n              day: 'Day'\n            },\n            weekText: 'W',\n            allDayText: 'All day',\n            moreLinkText: 'more',\n            noEventsText: 'No events'\n          }\n        }\n      },\n      detailVisible: false,\n      selectedEvent: null,\n      loading: false,\n      currentViewTitle: '',\n      cancelDialogVisible: false,\n      cancelling: false,\n      cancelForm: {\n        reservationCode: ''\n      },\n      cancelRules: {\n        reservationCode: [\n          { required: true, message: this.$t('reservation.codeOrContactRequired'), trigger: 'blur' }\n        ]\n      },\n\n    };\n  },\n  mounted() {\n    this.loadEvents();\n  },\n\n  beforeDestroy() {\n    // 清除资源\n  },\n  watch: {\n    // 监听语言变化\n    '$i18n.locale': {\n      handler(newLocale) {\n        if (this.$refs.fullCalendar) {\n          const calendarApi = this.$refs.fullCalendar.getApi();\n          calendarApi.setOption('locale', newLocale === 'zh-CN' ? 'zh-cn' : 'en');\n          this.currentViewTitle = calendarApi.view.title;\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    // 加载预约数据\n    async loadEvents() {\n      this.loading = true;\n      try {\n        const calendarApi = this.$refs.fullCalendar.getApi();\n        const start = this.formatDate(calendarApi.view.activeStart);\n        const end = this.formatDate(calendarApi.view.activeEnd);\n\n        const response = await this.$http.get('/api/reservations/calendar', {\n          params: {\n            start_date: start,\n            end_date: end\n          }\n        });\n\n        if (response.data.success) {\n          calendarApi.removeAllEvents();\n          calendarApi.addEventSource(response.data.events);\n        } else {\n          this.$message.error(response.data.message || this.$t('calendar.loadFailed'));\n        }\n      } catch (error) {\n        console.error('Failed to load calendar events:', error);\n        this.$message.error(this.$t('calendar.loadFailed'));\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    // 处理日期范围变化\n    handleDatesSet() {\n      // 更新当前视图标题\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      this.currentViewTitle = calendarApi.view.title;\n\n      // 加载事件数据\n      this.loadEvents();\n    },\n\n    // 处理事件点击\n    handleEventClick(info) {\n      this.selectedEvent = info.event;\n      this.detailVisible = true;\n    },\n\n    // 处理事件渲染\n    handleEventDidMount(info) {\n      // 获取事件状态\n      const status = info.event.extendedProps.status;\n\n      // 根据状态设置事件颜色（适用于所有视图）\n      if (status) {\n        if (status === 'confirmed') {\n          info.el.style.backgroundColor = 'rgba(103, 194, 58, 0.7)'; // 已确认 - 半透明绿色\n          info.el.style.borderColor = 'rgba(103, 194, 58, 0.9)';\n        } else if (status === 'in_use') {\n          info.el.style.backgroundColor = 'rgba(64, 158, 255, 0.7)'; // 使用中 - 半透明蓝色\n          info.el.style.borderColor = 'rgba(64, 158, 255, 0.9)';\n        }\n      }\n\n      // 添加鼠标悬停工具提示\n      this.addEventTooltip(info);\n\n      // 为循环预约添加标记 - 适用于所有视图\n      if (info.event.extendedProps.isRecurring) {\n        // 月视图的处理方式\n        if (info.view.type === 'dayGridMonth') {\n          const recurringIcon = document.createElement('span');\n          recurringIcon.className = 'recurring-icon';\n          recurringIcon.innerHTML = '<i class=\"el-icon-refresh-right\"></i>';\n          const titleEl = info.el.querySelector('.fc-event-title');\n          if (titleEl) {\n            titleEl.appendChild(recurringIcon);\n          }\n        }\n        // 周视图和日视图的处理方式\n        else if (info.view.type === 'timeGridWeek' || info.view.type === 'timeGridDay') {\n          // 为事件添加循环图标标记\n          const recurringIcon = document.createElement('span');\n          recurringIcon.className = 'recurring-icon-timegrid';\n          recurringIcon.innerHTML = '<i class=\"el-icon-refresh-right\"></i>';\n\n          // 添加到自定义内容中\n          const eventContent = info.el.querySelector('.custom-event-content');\n          if (eventContent) {\n            eventContent.appendChild(recurringIcon);\n          } else {\n            // 如果还没有自定义内容，添加到事件主体\n            const mainContent = info.el.querySelector('.fc-event-main');\n            if (mainContent) {\n              mainContent.appendChild(recurringIcon);\n            }\n          }\n        }\n      }\n\n      // 在月视图中修改时间格式为24小时制\n      if (info.view.type === 'dayGridMonth') {\n        const timeEl = info.el.querySelector('.fc-event-time');\n        if (timeEl && info.event.start) {\n          // 使用24小时制格式化时间\n          const formattedTime = info.event.start.toLocaleTimeString('zh-CN', {\n            hour: '2-digit',\n            minute: '2-digit',\n            hour12: false\n          });\n          timeEl.textContent = formattedTime;\n        }\n      }\n\n      // 在周视图和日视图中自定义事件内容\n      if (info.view.type === 'timeGridWeek' || info.view.type === 'timeGridDay') {\n        // 清除默认内容\n        const eventContent = info.el.querySelector('.fc-event-main');\n        if (eventContent) {\n          // 创建自定义内容\n          const customContent = document.createElement('div');\n          customContent.className = 'custom-event-content';\n\n          // 设备名称\n          const title = document.createElement('div');\n          title.className = 'event-title';\n          title.textContent = info.event.title;\n          customContent.appendChild(title);\n\n          // 使用人\n          const user = document.createElement('div');\n          user.className = 'event-user';\n          user.textContent = info.event.extendedProps.userName || '';\n          customContent.appendChild(user);\n\n          // 时间\n          const time = document.createElement('div');\n          time.className = 'event-time';\n          const startTime = info.event.start ? info.event.start.toLocaleTimeString('zh-CN', {hour: '2-digit', minute:'2-digit', hour12: false}) : '';\n          const endTime = info.event.end ? info.event.end.toLocaleTimeString('zh-CN', {hour: '2-digit', minute:'2-digit', hour12: false}) : '';\n          time.textContent = `${startTime}-${endTime}`;\n          customContent.appendChild(time);\n\n          // 替换内容\n          eventContent.innerHTML = '';\n          eventContent.appendChild(customContent);\n\n          // 为循环预约添加图标\n          if (info.event.extendedProps.isRecurring) {\n            const recurringIcon = document.createElement('span');\n            recurringIcon.className = 'recurring-icon-timegrid';\n            recurringIcon.innerHTML = '<i class=\"el-icon-refresh-right\"></i>';\n            eventContent.appendChild(recurringIcon);\n          }\n        }\n      }\n    },\n\n    // 切换视图\n    changeView(viewName) {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.changeView(viewName);\n    },\n\n    // 跳转到今天\n    today() {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.today();\n    },\n\n    // 上一个时间段\n    prev() {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.prev();\n    },\n\n    // 下一个时间段\n    next() {\n      const calendarApi = this.$refs.fullCalendar.getApi();\n      calendarApi.next();\n    },\n\n    // 获取状态标签类型\n    getStatusTagType(status) {\n      const statusMap = {\n        'confirmed': 'success',\n        'in_use': 'primary',\n        'cancelled': 'info',\n        'expired': 'danger'\n      };\n      return statusMap[status] || 'info';\n    },\n\n    // 格式化日期\n    formatDate(date) {\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\n    },\n\n    // 格式化日期时间\n    formatDateTime(date) {\n      return formatDate(date, 'YYYY-MM-DD HH:mm');\n    },\n\n    // 获取状态文本\n    getStatusText(status) {\n      const statusMap = {\n        'confirmed': this.$t('reservation.confirmed'),\n        'in_use': this.$t('reservation.inUse'),\n        'cancelled': this.$t('reservation.cancelled'),\n        'expired': this.$t('reservation.expired')\n      };\n      return statusMap[status] || status;\n    },\n\n    // 添加事件工具提示\n    addEventTooltip(info) {\n      // 获取事件信息\n      const event = info.event;\n      const props = event.extendedProps;\n\n      // 计算事件持续时间（分钟）\n      const start = event.start;\n      const end = event.end;\n      const durationMs = end - start;\n      const durationMinutes = Math.round(durationMs / (1000 * 60));\n\n      // 为短时间预约添加特殊标记（30分钟或更短）\n      if (durationMinutes <= 30) {\n        // 添加短时间预约的类\n        info.el.classList.add('very-short-duration-event');\n\n        // 获取当前视图类型\n        const calendarApi = this.$refs.fullCalendar.getApi();\n        const viewType = calendarApi.view.type;\n\n        // 简化显示内容，只保留最重要的信息\n        const titleEl = info.el.querySelector('.fc-event-title');\n        const timeEl = info.el.querySelector('.fc-event-time');\n\n        if (titleEl) {\n          // 只显示设备名称（取第一个单词，通常是设备名称）\n          const shortTitle = `${event.title.split(' ')[0]}`;\n          titleEl.textContent = shortTitle;\n\n          // 在日视图中，确保文字清晰可见\n          if (viewType === 'timeGridDay') {\n            // 调整主容器样式\n            const mainEl = info.el.querySelector('.fc-event-main');\n            if (mainEl) {\n              mainEl.style.display = 'flex';\n              mainEl.style.flexDirection = 'row';\n              mainEl.style.alignItems = 'center';\n              mainEl.style.justifyContent = 'center';\n              mainEl.style.padding = '2px';\n            }\n\n            // 调整时间显示\n            if (timeEl) {\n              timeEl.style.marginRight = '4px';\n              timeEl.style.fontWeight = 'bold';\n              timeEl.style.fontSize = '1em';\n            }\n\n            // 确保标题显示清晰\n            if (titleEl) {\n              titleEl.style.fontWeight = 'bold';\n              titleEl.style.fontSize = '1em';\n\n              // 如果是非常短的预约（小于20分钟），只显示设备名称\n              if (durationMinutes < 20) {\n                const shortTitle = `${event.title.split(' ')[0]}`;\n                titleEl.textContent = shortTitle;\n              } else {\n                // 否则显示设备名称和用户名\n                const shortTitle = `${event.title.split(' ')[0]} ${props.userName ? props.userName.split(' ')[0] : ''}`;\n                titleEl.textContent = shortTitle;\n              }\n            }\n          }\n        }\n      }\n\n      // 设置title属性（原生浏览器工具提示）\n      const tooltipText = `${event.title}\\n${props.userName || ''}\\n${this.formatDateTime(start)} - ${this.formatDateTime(end)}\\n${this.getStatusText(props.status)}\\n${props.reservationNumber}`;\n      info.el.setAttribute('title', tooltipText);\n    },\n\n    // 显示取消预约对话框\n    showCancelDialog() {\n      this.cancelForm.reservationCode = '';\n      this.cancelDialogVisible = true;\n    },\n\n    // 取消预约\n    async cancelReservation() {\n      try {\n        // 验证表单\n        await this.$refs.cancelForm.validate();\n\n        // 检查输入的预约码是否与当前预约码匹配\n        if (this.cancelForm.reservationCode !== this.selectedEvent.extendedProps.reservationCode) {\n          this.$message.error(this.$t('reservation.checkCodeAndContact'));\n          return;\n        }\n\n        this.cancelling = true;\n\n        // 准备请求数据\n        const data = {\n          reservation_number: this.selectedEvent.extendedProps.reservationNumber || null,\n          lang: this.$i18n.locale\n        };\n\n        // 调用取消预约API\n        const response = await reservationApi.cancelReservation(this.selectedEvent.extendedProps.reservationCode, data);\n\n        if (response.data.success) {\n          this.$message.success(this.$t('reservation.cancelSuccess'));\n          this.cancelDialogVisible = false;\n\n          // 关闭预约详情弹窗\n          this.detailVisible = false;\n\n          // 重新加载日历事件\n          this.loadEvents();\n        } else {\n          this.$message.error(response.data.message || this.$t('reservation.cancelFailed'));\n        }\n      } catch (error) {\n        console.error('Failed to cancel reservation:', error);\n        this.$message.error(this.$t('error.serverError'));\n      } finally {\n        this.cancelling = false;\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.calendar-view {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.calendar-header {\n  margin-bottom: 20px;\n}\n\n.calendar-current-date {\n  font-size: 1.2rem;\n  color: #606266;\n  margin-top: 5px;\n  font-weight: normal;\n}\n\n.calendar-controls {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n}\n\n.recurring-notice {\n  margin: 15px 0;\n}\n\n.action-buttons {\n  margin-top: 15px;\n  display: flex;\n  justify-content: flex-end;\n}\n\n.cancel-content {\n  padding: 10px 0;\n}\n\n.recurring-icon {\n  margin-left: 5px;\n  color: #ff9800;\n}\n\n/* 周视图和日视图中的循环预约图标 */\n:deep(.recurring-icon-timegrid) {\n  position: absolute;\n  top: 2px;\n  right: 2px;\n  color: rgba(255, 255, 255, 0.9);\n  font-size: 12px;\n  z-index: 2;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-radius: 50%;\n  width: 16px;\n  height: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  pointer-events: none; /* 确保图标不会影响点击事件 */\n}\n\n/* 自定义事件样式 */\n:deep(.fc-event) {\n  cursor: pointer;\n}\n\n:deep(.fc-event-title) {\n  font-weight: bold;\n}\n\n/* 隐藏月视图中的点 */\n:deep(.fc-daygrid-event-dot) {\n  display: none !important;\n}\n\n/* 月视图中的事件内容居中显示 */\n:deep(.fc-daygrid-event) {\n  display: flex !important;\n  flex-direction: row !important;\n  align-items: center !important;\n  justify-content: center !important;\n  text-align: center !important;\n  padding: 2px 4px !important;\n  white-space: nowrap !important;\n}\n\n:deep(.fc-daygrid-event-harness) {\n  margin-top: 2px !important;\n}\n\n:deep(.fc-daygrid-event .fc-event-main) {\n  width: 100% !important;\n  text-align: center !important;\n  display: flex !important;\n  justify-content: center !important;\n  align-items: center !important;\n}\n\n:deep(.fc-daygrid-event .fc-event-time) {\n  font-weight: bold !important;\n  margin-right: 4px !important;\n  text-align: center !important;\n  display: inline !important;\n}\n\n:deep(.fc-daygrid-event .fc-event-title) {\n  display: inline !important;\n  text-align: center !important;\n}\n\n/* 日期头部样式 */\n:deep(.fc-col-header-cell) {\n  background-color: #f5f7fa;\n  padding: 8px 0;\n}\n\n:deep(.fc-col-header-cell-cushion) {\n  font-weight: bold;\n  color: #303133;\n  text-decoration: none;\n  padding: 4px;\n}\n\n/* 时间格子样式 */\n:deep(.fc-timegrid-slot) {\n  height: 40px;\n}\n\n/* 设置事件的最小高度 */\n:deep(.fc-timegrid-event) {\n  min-height: 40px !important; /* 确保短时间预约有足够的显示空间 */\n}\n\n/* 今天高亮 - 使用突出边框而非背景色 */\n:deep(.fc-day-today) {\n  background-color: transparent !important; /* 移除背景色 */\n  position: relative !important;\n}\n\n/* 为月视图中的今天添加突出边框 */\n:deep(.fc-daygrid-day.fc-day-today::after) {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border: 1px solid #006eff !important; /* 红色细线边框 */\n  pointer-events: none; /* 确保边框不会影响点击事件 */\n  z-index: 1; /* 确保边框在内容之上 */\n}\n\n/* 月视图中今天的日期数字加粗显示 */\n:deep(.fc-day-today .fc-daygrid-day-number) {\n  font-weight: bold !important;\n  color: #006eff !important; /* 红色文字 */\n}\n\n/* 周视图和日视图中今天的列头样式 */\n:deep(.fc-timeGridWeek-view .fc-col-header-cell.fc-day-today),\n:deep(.fc-timeGridDay-view .fc-col-header-cell.fc-day-today) {\n  background-color: transparent !important;\n}\n\n/* 周视图和日视图中今天的列头文字样式 */\n:deep(.fc-timeGridWeek-view .fc-col-header-cell.fc-day-today .fc-col-header-cell-cushion),\n:deep(.fc-timeGridDay-view .fc-col-header-cell.fc-day-today .fc-col-header-cell-cushion) {\n  font-weight: bold !important;\n  color: #006eff !important; /* 红色文字 */\n}\n\n/* 周视图中今天的时间轴列样式 */\n:deep(.fc-timeGridWeek-view .fc-timegrid-col.fc-day-today) {\n  background-color: transparent !important;\n  position: relative !important;\n}\n\n/* 为周视图中今天的时间轴添加红色细线边框 */\n:deep(.fc-timeGridWeek-view .fc-timegrid-col.fc-day-today::after) {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border-top: 1px solid #006eff !important;\n  border-left: 1px solid #006eff !important;\n  border-right: 1px solid #006eff !important;\n  border-bottom: 1px solid #006eff !important;\n  pointer-events: none;\n  z-index: 1;\n}\n\n/* 日视图中今天的时间轴列样式 */\n:deep(.fc-timeGridDay-view .fc-timegrid-col.fc-day-today) {\n  background-color: transparent !important;\n  /* 日视图不需要边框 */\n}\n\n/* 周末颜色 */\n:deep(.fc-day-sat), :deep(.fc-day-sun) {\n  background-color: #ffffff;\n}\n\n/* 周末表头文字颜色 - 红色 */\n:deep(.fc-col-header-cell.fc-day-sat), :deep(.fc-col-header-cell.fc-day-sun) {\n  color: #ff0000;\n}\n\n:deep(.fc-col-header-cell.fc-day-sat .fc-col-header-cell-cushion),\n:deep(.fc-col-header-cell.fc-day-sun .fc-col-header-cell-cushion) {\n  color: #ff0000;\n}\n\n/* 月视图中周末日期数字颜色 - 红色 */\n:deep(.fc-daygrid-day.fc-day-sat .fc-daygrid-day-number),\n:deep(.fc-daygrid-day.fc-day-sun .fc-daygrid-day-number) {\n  color: #ff0000;\n}\n\n/* 工作日颜色 */\n:deep(.fc-day-mon), :deep(.fc-day-tue), :deep(.fc-day-wed), :deep(.fc-day-thu), :deep(.fc-day-fri) {\n  background-color: #ffffff;\n}\n\n/* 预约详情弹窗样式 */\n.event-detail-card {\n  border-radius: 4px;\n  overflow: hidden;\n}\n\n.event-header {\n  padding: 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.event-header h3 {\n  margin: 0;\n  font-size: 18px;\n}\n\n.status-confirmed {\n  background-color: #f0f9eb;\n  border-left: 4px solid #67c23a;\n}\n\n.status-in_use {\n  background-color: #ecf5ff;\n  border-left: 4px solid #409eff;\n}\n\n.status-cancelled {\n  background-color: #f4f4f5;\n  border-left: 4px solid #909399;\n}\n\n.status-expired {\n  background-color: #fef0f0;\n  border-left: 4px solid #f56c6c;\n}\n\n.event-info {\n  padding: 0 15px 15px;\n}\n\n.info-item {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.info-item i {\n  margin-right: 10px;\n  color: #909399;\n}\n\n.time-info {\n  margin-bottom: 15px;\n}\n\n.time-display {\n  font-size: 16px;\n  font-weight: bold;\n  color: #303133;\n}\n\n/* 周视图和日视图中的事件内容样式 */\n:deep(.custom-event-content) {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  padding: 2px;\n  text-align: center;\n  overflow: hidden;\n}\n\n/* 当事件宽度较窄时的样式调整 */\n:deep(.fc-timegrid-col-events .custom-event-content) {\n  font-size: 0.9em;\n  line-height: 1.1;\n}\n\n/* 修复日视图和周视图中事件宽度问题 - 允许并排显示 */\n:deep(.fc-timegrid-event-harness) {\n  /* 移除强制宽度，允许事件并排显示 */\n  border-radius: 3px !important;\n}\n\n:deep(.fc-timegrid-event) {\n  border-radius: 3px !important;\n  margin: 1px !important;\n  padding: 2px !important;\n}\n\n/* 确保事件内容在较窄的事件中也能正常显示 */\n:deep(.fc-timegrid-event .fc-event-main) {\n  padding: 2px !important;\n}\n\n:deep(.fc-timeGridDay-view .fc-timegrid-event) {\n  /* 移除强制宽度，允许事件并排显示 */\n  width: auto !important;\n  max-width: none !important;\n  margin: 1px 2px !important;\n  border-radius: 3px !important;\n  box-sizing: border-box !important;\n}\n\n/* 修复日视图中的列宽度 */\n:deep(.fc-timeGridDay-view .fc-timegrid-col) {\n  width: 100% !important;\n  max-width: 100% !important;\n}\n\n:deep(.fc-timeGridDay-view .fc-timegrid-col-frame) {\n  width: 100% !important;\n  max-width: 100% !important;\n}\n\n/* 日视图中的事件容器 */\n:deep(.fc-timeGridDay-view .fc-timegrid-col-events) {\n  display: flex !important;\n  flex-direction: column !important;\n}\n\n/* 日视图中的事件容器组 */\n:deep(.fc-timeGridDay-view .fc-timegrid-event-harness-inset) {\n  margin-left: 0 !important;\n  margin-right: 0 !important;\n  width: auto !important;\n  flex: 1 !important;\n}\n\n/* 日视图中的事件 */\n:deep(.fc-timeGridDay-view .fc-timegrid-event) {\n  flex: 1 !important;\n  min-width: 0 !important;\n}\n\n/* 日视图中的事件内容 */\n:deep(.fc-timeGridDay-view .custom-event-content) {\n  padding: 2px !important;\n  font-size: 0.9em !important;\n  line-height: 1.1 !important;\n}\n\n/* 日视图中的事件容器 */\n:deep(.fc-timeGridDay-view .fc-timegrid-event-harness) {\n  margin: 0 1px !important;\n}\n\n/* 日视图中的事件 */\n:deep(.fc-timeGridDay-view .fc-timegrid-event) {\n  margin: 1px !important;\n  border-radius: 3px !important;\n}\n\n/* 日视图中的更多链接 */\n:deep(.fc-timeGridDay-view .fc-daygrid-more-link) {\n  font-size: 12px !important;\n  font-weight: bold !important;\n  color: #409eff !important;\n  background-color: rgba(64, 158, 255, 0.1) !important;\n  border-radius: 3px !important;\n  padding: 2px 4px !important;\n  margin: 1px !important;\n  text-align: center !important;\n}\n\n/* 日视图中的弹出窗口 */\n:deep(.fc-timeGridDay-view .fc-popover) {\n  border-radius: 4px !important;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1) !important;\n  border: 1px solid #ebeef5 !important;\n}\n\n/* 短时间预约的特殊样式（30分钟或更短） */\n:deep(.very-short-duration-event) {\n  min-height: 30px !important; /* 确保最小高度 */\n  font-weight: bold !important; /* 加粗文字 */\n  border-width: 2px !important; /* 加粗边框 */\n  z-index: 6 !important; /* 更高层级 */\n  overflow: visible !important; /* 允许内容溢出 */\n  height: auto !important; /* 自动调整高度 */\n}\n\n/* 短时间预约的标题样式 */\n:deep(.very-short-duration-event .fc-event-title) {\n  font-size: 0.9em !important; /* 稍微缩小字体 */\n  line-height: 1.2 !important; /* 减小行高 */\n  padding: 2px !important; /* 减小内边距 */\n  text-align: center !important; /* 文字居中 */\n  white-space: nowrap !important; /* 不允许文字换行 */\n  overflow: hidden !important; /* 隐藏溢出内容 */\n  text-overflow: ellipsis !important; /* 显示省略号 */\n  font-weight: bold !important; /* 加粗文字 */\n}\n\n/* 确保时间显示清晰 */\n:deep(.very-short-duration-event .fc-event-time) {\n  font-size: 0.85em !important;\n  font-weight: bold !important;\n  padding: 2px !important;\n  text-align: center !important;\n}\n\n/* 日视图中的短时间预约 */\n:deep(.fc-timeGridDay-view .very-short-duration-event) {\n  min-height: 30px !important; /* 增加最小高度 */\n  margin-top: 2px !important;\n  margin-bottom: 2px !important;\n  height: auto !important; /* 自动调整高度 */\n  padding: 2px !important; /* 增加内边距 */\n  border-width: 2px !important; /* 加粗边框 */\n}\n\n/* 日视图中的短时间预约内容 */\n:deep(.fc-timeGridDay-view .very-short-duration-event .fc-event-main) {\n  padding: 2px !important; /* 增加内边距 */\n  display: flex !important;\n  flex-direction: row !important; /* 水平排列 */\n  justify-content: center !important;\n  align-items: center !important;\n  height: 100% !important;\n}\n\n/* 日视图中的短时间预约时间和标题 */\n:deep(.fc-timeGridDay-view .very-short-duration-event .fc-event-time),\n:deep(.fc-timeGridDay-view .very-short-duration-event .fc-event-title) {\n  display: inline-block !important;\n  padding: 0 3px !important; /* 增加内边距 */\n  margin: 0 !important;\n  line-height: 1.2 !important; /* 增加行高 */\n  font-size: 1em !important; /* 增加字体大小 */\n  font-weight: bold !important; /* 加粗文字 */\n  text-shadow: 0px 0px 1px rgba(0, 0, 0, 0.5) !important; /* 添加文字阴影，增加可读性 */\n}\n\n/* 周视图中的短时间预约 */\n:deep(.fc-timeGridWeek-view .very-short-duration-event) {\n  min-height: 30px !important;\n  margin-top: 1px !important;\n  margin-bottom: 1px !important;\n}\n\n/* 周视图中的短时间预约内容 */\n:deep(.fc-timeGridWeek-view .very-short-duration-event .fc-event-main) {\n  padding: 1px !important;\n  display: flex !important;\n  flex-direction: column !important; /* 垂直排列 */\n  justify-content: center !important;\n  align-items: center !important;\n}\n\n:deep(.event-title) {\n  font-weight: bold;\n  margin-bottom: 2px;\n  font-size: 12px;\n  line-height: 1.1;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 100%;\n  color: #000; /* 黑色标题 */\n}\n\n:deep(.event-user) {\n  font-size: 11px;\n  color: #333; /* 深灰色用户名 */\n  margin-bottom: 2px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 100%;\n}\n\n:deep(.event-time) {\n  font-size: 11px;\n  font-weight: bold;\n  color: #333; /* 深灰色时间 */\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 100%;\n}\n\n/* 当事件宽度足够大时的样式 */\n:deep(.fc-timegrid-event-harness-inset .event-title) {\n  font-size: 14px;\n  margin-bottom: 4px;\n  color: #000; /* 黑色标题 */\n}\n\n:deep(.fc-timegrid-event-harness-inset .event-user) {\n  font-size: 13px;\n  margin-bottom: 4px;\n  color: #333; /* 深灰色用户名 */\n}\n\n:deep(.fc-timegrid-event-harness-inset .event-time) {\n  font-size: 13px;\n  color: #333; /* 深灰色时间 */\n}\n\n/* 当前时间指示器样式 */\n:deep(.fc-timegrid-now-indicator-line) {\n  border-color: #ff0000; /* 红色线条 */\n  border-width: 0.1px; /* 加粗线条 */\n  z-index: 10; /* 确保在事件上方显示 */\n}\n\n:deep(.fc-timegrid-now-indicator-arrow) {\n  border-color: #ff0000; /* 红色箭头 */\n  border-width: 50px 5px 0 0; /* 加大箭头 */\n}\n\n\n</style>\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}