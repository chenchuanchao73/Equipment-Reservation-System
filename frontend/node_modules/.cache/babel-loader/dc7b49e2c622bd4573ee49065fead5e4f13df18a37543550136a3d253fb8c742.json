{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c('div', {\n    staticClass: \"equipment-detail\"\n  }, [_vm.loading ? _c('div', {\n    staticClass: \"loading-container\"\n  }, [_c('el-skeleton', {\n    attrs: {\n      \"rows\": 10,\n      \"animated\": \"\"\n    }\n  })], 1) : !_vm.equipment ? _c('div', {\n    staticClass: \"error-container\"\n  }, [_c('el-result', {\n    attrs: {\n      \"icon\": \"error\",\n      \"title\": _vm.$t('error.errorMessage'),\n      \"sub-title\": _vm.$t('equipment.notFound')\n    },\n    scopedSlots: _vm._u([{\n      key: \"extra\",\n      fn: function () {\n        return [_c('el-button', {\n          attrs: {\n            \"type\": \"primary\"\n          },\n          on: {\n            \"click\": function ($event) {\n              return _vm.$router.push('/equipment');\n            }\n          }\n        }, [_vm._v(\" \" + _vm._s(_vm.$t('equipment.list')) + \" \")])];\n      },\n      proxy: true\n    }])\n  })], 1) : _c('div', [_c('div', {\n    staticClass: \"back-link\"\n  }, [_c('el-button', {\n    attrs: {\n      \"icon\": \"el-icon-arrow-left\"\n    },\n    on: {\n      \"click\": function ($event) {\n        return _vm.$router.push('/equipment');\n      }\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t('common.back')) + \" \")])], 1), _c('el-row', {\n    attrs: {\n      \"gutter\": 20\n    }\n  }, [_c('el-col', {\n    attrs: {\n      \"xs\": 24,\n      \"sm\": 24,\n      \"md\": 10,\n      \"lg\": 8\n    }\n  }, [_c('el-card', {\n    staticClass: \"image-card\",\n    attrs: {\n      \"shadow\": \"never\"\n    }\n  }, [_c('div', {\n    staticClass: \"equipment-image-container\"\n  }, [_c('img', {\n    staticClass: \"equipment-image\",\n    attrs: {\n      \"src\": _vm.equipment.image_path ? _vm.getFullImageUrl(_vm.equipment.image_path) : require('@/assets/upload.png'),\n      \"alt\": _vm.equipment.name\n    }\n  })])])], 1), _c('el-col', {\n    attrs: {\n      \"xs\": 24,\n      \"sm\": 24,\n      \"md\": 14,\n      \"lg\": 16\n    }\n  }, [_c('el-card', {\n    staticClass: \"info-card\",\n    attrs: {\n      \"shadow\": \"never\"\n    }\n  }, [_c('div', {\n    staticClass: \"equipment-header\"\n  }, [_c('h1', {\n    staticClass: \"equipment-name\"\n  }, [_vm._v(_vm._s(_vm.equipment.name))]), _c('el-tag', {\n    attrs: {\n      \"type\": _vm.equipment.status === 'available' ? 'success' : 'warning',\n      \"size\": \"medium\"\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.equipment.status === 'available' ? _vm.$t('equipment.available') : _vm.$t('equipment.maintenance')) + \" \")])], 1), _c('el-divider'), _c('el-descriptions', {\n    attrs: {\n      \"column\": 1,\n      \"border\": \"\"\n    }\n  }, [_c('el-descriptions-item', {\n    attrs: {\n      \"label\": _vm.$t('equipment.category')\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.equipment.category) + \" \")]), _vm.equipment.model ? _c('el-descriptions-item', {\n    attrs: {\n      \"label\": _vm.$t('equipment.model')\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.equipment.model) + \" \")]) : _vm._e(), _vm.equipment.location ? _c('el-descriptions-item', {\n    attrs: {\n      \"label\": _vm.$t('equipment.location')\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.equipment.location) + \" \")]) : _vm._e(), _vm.equipment.description ? _c('el-descriptions-item', {\n    attrs: {\n      \"label\": _vm.$t('equipment.description')\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.equipment.description) + \" \")]) : _vm._e(), _vm.equipment.user_guide ? _c('el-descriptions-item', {\n    attrs: {\n      \"label\": _vm.$t('equipment.userGuide')\n    }\n  }, [_c('div', {\n    staticClass: \"user-guide-content rich-text-content\",\n    domProps: {\n      \"innerHTML\": _vm._s(_vm.equipment.user_guide)\n    }\n  })]) : _vm._e(), _vm.equipment.video_tutorial ? _c('el-descriptions-item', {\n    attrs: {\n      \"label\": _vm.$t('equipment.videoTutorial')\n    }\n  }, [_c('div', {\n    staticClass: \"video-container\"\n  }, [_c('iframe', {\n    attrs: {\n      \"src\": _vm.equipment.video_tutorial,\n      \"frameborder\": \"0\",\n      \"allow\": \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n      \"allowfullscreen\": \"\"\n    }\n  })])]) : _vm._e()], 1), _c('div', {\n    staticClass: \"action-buttons\"\n  }, [_c('el-button', {\n    attrs: {\n      \"type\": \"primary\",\n      \"size\": \"large\",\n      \"disabled\": _vm.equipment.status !== 'available'\n    },\n    on: {\n      \"click\": _vm.reserveEquipment\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t('equipment.reserve')) + \" \")]), _c('el-button', {\n    attrs: {\n      \"type\": \"success\",\n      \"size\": \"large\",\n      \"disabled\": _vm.equipment.status !== 'available'\n    },\n    on: {\n      \"click\": _vm.recurringReserveEquipment\n    }\n  }, [_vm._v(\" \" + _vm._s(_vm.$t('reservation.createRecurringReservation')) + \" \")])], 1)], 1)], 1)], 1), _c('el-card', {\n    staticClass: \"reservations-card\",\n    attrs: {\n      \"shadow\": \"never\"\n    }\n  }, [_c('div', {\n    staticClass: \"reservations-header\",\n    attrs: {\n      \"slot\": \"header\"\n    },\n    slot: \"header\"\n  }, [_c('span', [_vm._v(_vm._s(_vm.$t('equipment.currentReservations')))]), _c('el-date-picker', {\n    attrs: {\n      \"type\": \"daterange\",\n      \"range-separator\": \"→\",\n      \"start-placeholder\": _vm.$t('reservation.startTime'),\n      \"end-placeholder\": _vm.$t('reservation.endTime'),\n      \"picker-options\": _vm.pickerOptions,\n      \"size\": \"small\"\n    },\n    on: {\n      \"change\": _vm.fetchReservations\n    },\n    model: {\n      value: _vm.dateRange,\n      callback: function ($$v) {\n        _vm.dateRange = $$v;\n      },\n      expression: \"dateRange\"\n    }\n  })], 1), _vm.loadingReservations ? _c('div', {\n    staticClass: \"loading-container\"\n  }, [_c('el-skeleton', {\n    attrs: {\n      \"rows\": 3,\n      \"animated\": \"\"\n    }\n  })], 1) : _vm.reservations.length === 0 ? _c('div', {\n    staticClass: \"empty-reservations\"\n  }, [_c('el-empty', {\n    attrs: {\n      \"description\": _vm.$t('equipment.noReservations')\n    }\n  })], 1) : _c('div', {\n    staticClass: \"reservations-list\"\n  }, [_c('el-timeline', _vm._l(_vm.reservations, function (reservation) {\n    return _c('el-timeline-item', {\n      key: reservation.id,\n      attrs: {\n        \"timestamp\": _vm.formatDateTime(reservation.start_datetime) + ' → ' + _vm.formatDateTime(reservation.end_datetime),\n        \"type\": _vm.getTimelineItemType(reservation)\n      }\n    }, [_c('el-card', {\n      staticClass: \"reservation-card\"\n    }, [_c('div', {\n      staticClass: \"reservation-info\"\n    }, [_c('div', {\n      staticClass: \"reservation-user\"\n    }, [_c('span', {\n      staticClass: \"user-name\"\n    }, [_vm._v(_vm._s(reservation.user_name))]), _c('span', {\n      staticClass: \"user-department\"\n    }, [_vm._v(_vm._s(reservation.user_department))])]), reservation.purpose ? _c('div', {\n      staticClass: \"reservation-purpose\"\n    }, [_c('strong', [_vm._v(_vm._s(_vm.$t('reservation.purpose')) + \":\")]), _vm._v(\" \" + _vm._s(reservation.purpose) + \" \")]) : _vm._e(), _c('div', {\n      staticClass: \"reservation-status\"\n    }, [_c('el-tag', {\n      attrs: {\n        \"size\": \"small\",\n        \"type\": _vm.getStatusTagType(reservation)\n      }\n    }, [_vm._v(\" \" + _vm._s(_vm.getStatusText(reservation)) + \" \")])], 1)])])], 1);\n  }), 1)], 1)])], 1)]);\n};\nvar staticRenderFns = [];\nexport { render, staticRenderFns };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}