{"ast":null,"code":"import { reservationApi } from '@/api';\nexport default {\n  name: 'AdminReservationDetail',\n  data() {\n    return {\n      loading: false,\n      submitting: false,\n      reservation: null,\n      cancelDialogVisible: false\n    };\n  },\n  created() {\n    this.fetchReservation();\n  },\n  methods: {\n    async fetchReservation() {\n      this.loading = true;\n      try {\n        const code = this.$route.params.code;\n        const response = await reservationApi.getReservationByCode(code);\n        console.log('API Response:', response);\n        if (response.data && response.data.success) {\n          this.reservation = response.data.data;\n          console.log('Reservation data:', this.reservation);\n        } else {\n          const errorMsg = response.data ? response.data.message : this.$t('reservation.reservationNotFound');\n          this.$message.error(errorMsg);\n          this.reservation = null;\n        }\n      } catch (error) {\n        console.error('Failed to fetch reservation:', error);\n        this.$message.error(this.$t('error.serverError'));\n        this.reservation = null;\n      } finally {\n        this.loading = false;\n      }\n    },\n    formatDateTime(dateString) {\n      if (!dateString) return '-';\n      const date = new Date(dateString);\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;\n    },\n    handleCancel() {\n      this.cancelDialogVisible = true;\n    },\n    async confirmCancel() {\n      this.submitting = true;\n      try {\n        const response = await reservationApi.cancelReservation(this.reservation.reservation_code);\n        console.log('Cancel response:', response);\n        if (response.data && response.data.success) {\n          this.$message.success(this.$t('reservation.cancelSuccess'));\n          this.cancelDialogVisible = false;\n\n          // 重新获取预定信息\n          this.fetchReservation();\n        } else {\n          const errorMsg = response.data ? response.data.message : this.$t('reservation.cancelFailed');\n          this.$message.error(errorMsg);\n        }\n      } catch (error) {\n        console.error('Failed to cancel reservation:', error);\n        this.$message.error(this.$t('error.serverError'));\n      } finally {\n        this.submitting = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["reservationApi","name","data","loading","submitting","reservation","cancelDialogVisible","created","fetchReservation","methods","code","$route","params","response","getReservationByCode","console","log","success","errorMsg","message","$t","$message","error","formatDateTime","dateString","date","Date","getFullYear","String","getMonth","padStart","getDate","getHours","getMinutes","handleCancel","confirmCancel","cancelReservation","reservation_code"],"sources":["src/views/admin/AdminReservationDetail.vue"],"sourcesContent":["<template>\n  <div class=\"admin-reservation-detail\">\n    <div class=\"page-header\">\n      <h1 class=\"page-title\">{{ $t('reservation.detail') }}</h1>\n      <el-button @click=\"$router.push('/admin/reservation')\" icon=\"el-icon-back\">\n        {{ $t('common.back') }}\n      </el-button>\n    </div>\n\n    <div v-if=\"loading\" class=\"loading-container\">\n      <el-skeleton :rows=\"10\" animated />\n    </div>\n\n    <el-card v-else-if=\"!reservation\" class=\"error-card\">\n      <div class=\"error-message\">\n        <i class=\"el-icon-warning-outline\"></i>\n        <p>{{ $t('reservation.reservationNotFound') }}</p>\n      </div>\n      <el-button type=\"primary\" @click=\"$router.push('/admin/reservation')\">\n        {{ $t('common.back') }}\n      </el-button>\n    </el-card>\n\n    <div v-else>\n      <!-- 预定详情卡片 -->\n      <el-card shadow=\"hover\" class=\"detail-card\">\n        <div slot=\"header\" class=\"card-header\">\n          <span>{{ $t('reservation.detail') }}</span>\n          <el-tag :type=\"reservation.status === 'confirmed' ? 'success' : 'info'\">\n            {{ reservation.status === 'confirmed' ? $t('reservation.confirmed') : $t('reservation.cancelled') }}\n          </el-tag>\n        </div>\n\n        <el-descriptions :column=\"2\" border>\n          <el-descriptions-item :label=\"$t('reservation.code')\">\n            {{ reservation.reservation_code }}\n          </el-descriptions-item>\n\n          <el-descriptions-item :label=\"$t('reservation.status')\">\n            <el-tag :type=\"reservation.status === 'confirmed' ? 'success' : 'info'\">\n              {{ reservation.status === 'confirmed' ? $t('reservation.confirmed') : $t('reservation.cancelled') }}\n            </el-tag>\n          </el-descriptions-item>\n\n          <el-descriptions-item :label=\"$t('reservation.equipmentName')\">\n            <router-link :to=\"`/equipment/${reservation.equipment_id}`\">\n              {{ reservation.equipment_name }}\n            </router-link>\n          </el-descriptions-item>\n\n          <el-descriptions-item :label=\"$t('common.createTime')\">\n            {{ formatDateTime(reservation.created_at) }}\n          </el-descriptions-item>\n\n          <el-descriptions-item :label=\"$t('reservation.startTime')\">\n            {{ formatDateTime(reservation.start_datetime) }}\n          </el-descriptions-item>\n\n          <el-descriptions-item :label=\"$t('reservation.endTime')\">\n            {{ formatDateTime(reservation.end_datetime) }}\n          </el-descriptions-item>\n\n          <el-descriptions-item :label=\"$t('reservation.userName')\">\n            {{ reservation.user_name }}\n          </el-descriptions-item>\n\n          <el-descriptions-item :label=\"$t('reservation.userDepartment')\">\n            {{ reservation.user_department }}\n          </el-descriptions-item>\n\n          <el-descriptions-item :label=\"$t('reservation.userContact')\">\n            {{ reservation.user_contact }}\n          </el-descriptions-item>\n\n          <el-descriptions-item :label=\"$t('reservation.userEmail')\">\n            {{ reservation.user_email || '-' }}\n          </el-descriptions-item>\n\n          <el-descriptions-item :label=\"$t('reservation.purpose')\" :span=\"2\">\n            {{ reservation.purpose || '-' }}\n          </el-descriptions-item>\n        </el-descriptions>\n\n        <div class=\"actions\" v-if=\"reservation.status === 'confirmed'\">\n          <el-button type=\"danger\" @click=\"handleCancel\">\n            {{ $t('reservation.cancelReservation') }}\n          </el-button>\n        </div>\n      </el-card>\n    </div>\n\n    <!-- 取消预定确认对话框 -->\n    <el-dialog\n      :title=\"$t('common.warning')\"\n      :visible.sync=\"cancelDialogVisible\"\n      width=\"30%\"\n    >\n      <span>{{ $t('reservation.confirmCancel') }}</span>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"cancelDialogVisible = false\">{{ $t('common.cancel') }}</el-button>\n        <el-button type=\"danger\" @click=\"confirmCancel\" :loading=\"submitting\">{{ $t('common.confirm') }}</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { reservationApi } from '@/api'\n\nexport default {\n  name: 'AdminReservationDetail',\n\n  data() {\n    return {\n      loading: false,\n      submitting: false,\n      reservation: null,\n      cancelDialogVisible: false\n    }\n  },\n\n  created() {\n    this.fetchReservation()\n  },\n\n  methods: {\n    async fetchReservation() {\n      this.loading = true\n\n      try {\n        const code = this.$route.params.code\n        const response = await reservationApi.getReservationByCode(code)\n\n        console.log('API Response:', response)\n\n        if (response.data && response.data.success) {\n          this.reservation = response.data.data\n          console.log('Reservation data:', this.reservation)\n        } else {\n          const errorMsg = response.data ? response.data.message : this.$t('reservation.reservationNotFound')\n          this.$message.error(errorMsg)\n          this.reservation = null\n        }\n      } catch (error) {\n        console.error('Failed to fetch reservation:', error)\n        this.$message.error(this.$t('error.serverError'))\n        this.reservation = null\n      } finally {\n        this.loading = false\n      }\n    },\n\n    formatDateTime(dateString) {\n      if (!dateString) return '-'\n\n      const date = new Date(dateString)\n      return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`\n    },\n\n    handleCancel() {\n      this.cancelDialogVisible = true\n    },\n\n    async confirmCancel() {\n      this.submitting = true\n\n      try {\n        const response = await reservationApi.cancelReservation(this.reservation.reservation_code)\n\n        console.log('Cancel response:', response)\n\n        if (response.data && response.data.success) {\n          this.$message.success(this.$t('reservation.cancelSuccess'))\n          this.cancelDialogVisible = false\n\n          // 重新获取预定信息\n          this.fetchReservation()\n        } else {\n          const errorMsg = response.data ? response.data.message : this.$t('reservation.cancelFailed')\n          this.$message.error(errorMsg)\n        }\n      } catch (error) {\n        console.error('Failed to cancel reservation:', error)\n        this.$message.error(this.$t('error.serverError'))\n      } finally {\n        this.submitting = false\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.admin-reservation-detail {\n  padding: 20px;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.page-title {\n  margin: 0;\n  font-size: 24px;\n  color: #303133;\n}\n\n.loading-container {\n  padding: 40px 0;\n}\n\n.error-card {\n  text-align: center;\n  padding: 40px 0;\n}\n\n.error-message {\n  margin-bottom: 20px;\n}\n\n.error-message i {\n  font-size: 48px;\n  color: #E6A23C;\n  margin-bottom: 10px;\n}\n\n.error-message p {\n  font-size: 18px;\n  color: #606266;\n}\n\n.detail-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.actions {\n  margin-top: 20px;\n  text-align: right;\n}\n\n@media (max-width: 768px) {\n  .el-descriptions-item {\n    width: 100%;\n  }\n}\n</style>\n"],"mappings":"AA2GA,SAAAA,cAAA;AAEA;EACAC,IAAA;EAEAC,KAAA;IACA;MACAC,OAAA;MACAC,UAAA;MACAC,WAAA;MACAC,mBAAA;IACA;EACA;EAEAC,QAAA;IACA,KAAAC,gBAAA;EACA;EAEAC,OAAA;IACA,MAAAD,iBAAA;MACA,KAAAL,OAAA;MAEA;QACA,MAAAO,IAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAF,IAAA;QACA,MAAAG,QAAA,SAAAb,cAAA,CAAAc,oBAAA,CAAAJ,IAAA;QAEAK,OAAA,CAAAC,GAAA,kBAAAH,QAAA;QAEA,IAAAA,QAAA,CAAAX,IAAA,IAAAW,QAAA,CAAAX,IAAA,CAAAe,OAAA;UACA,KAAAZ,WAAA,GAAAQ,QAAA,CAAAX,IAAA,CAAAA,IAAA;UACAa,OAAA,CAAAC,GAAA,2BAAAX,WAAA;QACA;UACA,MAAAa,QAAA,GAAAL,QAAA,CAAAX,IAAA,GAAAW,QAAA,CAAAX,IAAA,CAAAiB,OAAA,QAAAC,EAAA;UACA,KAAAC,QAAA,CAAAC,KAAA,CAAAJ,QAAA;UACA,KAAAb,WAAA;QACA;MACA,SAAAiB,KAAA;QACAP,OAAA,CAAAO,KAAA,iCAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA,MAAAF,EAAA;QACA,KAAAf,WAAA;MACA;QACA,KAAAF,OAAA;MACA;IACA;IAEAoB,eAAAC,UAAA;MACA,KAAAA,UAAA;MAEA,MAAAC,IAAA,OAAAC,IAAA,CAAAF,UAAA;MACA,UAAAC,IAAA,CAAAE,WAAA,MAAAC,MAAA,CAAAH,IAAA,CAAAI,QAAA,QAAAC,QAAA,YAAAF,MAAA,CAAAH,IAAA,CAAAM,OAAA,IAAAD,QAAA,YAAAF,MAAA,CAAAH,IAAA,CAAAO,QAAA,IAAAF,QAAA,YAAAF,MAAA,CAAAH,IAAA,CAAAQ,UAAA,IAAAH,QAAA;IACA;IAEAI,aAAA;MACA,KAAA5B,mBAAA;IACA;IAEA,MAAA6B,cAAA;MACA,KAAA/B,UAAA;MAEA;QACA,MAAAS,QAAA,SAAAb,cAAA,CAAAoC,iBAAA,MAAA/B,WAAA,CAAAgC,gBAAA;QAEAtB,OAAA,CAAAC,GAAA,qBAAAH,QAAA;QAEA,IAAAA,QAAA,CAAAX,IAAA,IAAAW,QAAA,CAAAX,IAAA,CAAAe,OAAA;UACA,KAAAI,QAAA,CAAAJ,OAAA,MAAAG,EAAA;UACA,KAAAd,mBAAA;;UAEA;UACA,KAAAE,gBAAA;QACA;UACA,MAAAU,QAAA,GAAAL,QAAA,CAAAX,IAAA,GAAAW,QAAA,CAAAX,IAAA,CAAAiB,OAAA,QAAAC,EAAA;UACA,KAAAC,QAAA,CAAAC,KAAA,CAAAJ,QAAA;QACA;MACA,SAAAI,KAAA;QACAP,OAAA,CAAAO,KAAA,kCAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA,MAAAF,EAAA;MACA;QACA,KAAAhB,UAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}