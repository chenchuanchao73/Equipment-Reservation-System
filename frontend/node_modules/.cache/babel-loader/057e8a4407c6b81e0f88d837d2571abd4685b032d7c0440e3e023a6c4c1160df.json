{"ast":null,"code":"import { formatDateTime } from '@/utils/dateUtils';\nimport equipmentApi from '@/api/equipment';\nimport reservationApi from '@/api/reservation';\nimport { categoryApi } from '@/api';\nexport default {\n  name: 'HomePage',\n  data() {\n    return {\n      // 公共查询相关\n      loading: false,\n      querySubmitted: false,\n      reservations: [],\n      categories: [],\n      queryForm: {\n        category: '',\n        status: '',\n        dateRange: null\n      },\n      // 分页相关\n      currentPage: 1,\n      pageSize: 10,\n      // 公告数据\n      announcements: [],\n      // 响应式布局相关\n      isMobile: window.innerWidth <= 768\n    };\n  },\n  computed: {\n    // 根据当前页码和每页显示条数计算当前页的数据\n    paginatedReservations() {\n      const startIndex = (this.currentPage - 1) * this.pageSize;\n      const endIndex = startIndex + this.pageSize;\n      return this.reservations.slice(startIndex, endIndex);\n    },\n    // 根据屏幕宽度动态调整分页组件布局\n    paginationLayout() {\n      return this.isMobile ? 'prev, next' : 'total, sizes, prev, pager, next, jumper';\n    }\n  },\n  created() {\n    // 获取设备类别\n    this.fetchCategories();\n\n    // 默认加载公开查询数据\n    this.handleQuery();\n\n    // 添加窗口大小变化的监听器\n    window.addEventListener('resize', this.handleResize);\n  },\n  beforeDestroy() {\n    // 移除窗口大小变化的监听器\n    window.removeEventListener('resize', this.handleResize);\n  },\n  methods: {\n    // 处理窗口大小变化\n    handleResize() {\n      this.isMobile = window.innerWidth <= 768;\n    },\n    goToEquipment() {\n      this.$router.push('/equipment');\n    },\n    goToQuery() {\n      this.$router.push('/reservation/query');\n    },\n    goToReservationManage() {\n      this.$router.push('/reservation/query');\n    },\n    goToCalendar() {\n      this.$router.push('/calendar');\n    },\n    // 获取设备类别\n    async fetchCategories() {\n      try {\n        // 使用类别管理API获取完整的类别信息\n        const response = await categoryApi.getAllCategories();\n        if (response.data && Array.isArray(response.data)) {\n          // 使用类别的完整名称\n          this.categories = response.data.map(item => item.name);\n        } else {\n          console.error('Invalid categories data format:', response.data);\n          this.categories = [];\n        }\n      } catch (error) {\n        console.error('Failed to fetch equipment categories:', error);\n        this.categories = [];\n      }\n    },\n    // 处理公共查询\n    async handleQuery() {\n      this.loading = true;\n      this.querySubmitted = true;\n      try {\n        // 准备查询参数\n        const params = {\n          limit: 1000 // 设置为显示最多1000条结果，确保能显示所有记录\n        };\n\n        // 添加类别过滤\n        if (this.queryForm.category) {\n          // 需要先获取该类别的所有设备ID\n          const equipmentResponse = await equipmentApi.getEquipments({\n            category: this.queryForm.category,\n            limit: 100 // 增加限制，确保能获取所有设备\n          });\n          if (equipmentResponse.data && equipmentResponse.data.items && equipmentResponse.data.items.length > 0) {\n            // 如果有设备，使用类别参数进行查询\n            params.category = this.queryForm.category;\n          }\n        }\n\n        // 添加状态过滤\n        if (this.queryForm.status) {\n          // 直接使用选择的状态值，因为后端现在支持所有状态\n          params.status = this.queryForm.status;\n          console.log(`设置状态参数为 \"${this.queryForm.status}\"`);\n        }\n\n        // 添加日期范围过滤\n        if (this.queryForm.dateRange && this.queryForm.dateRange.length === 2) {\n          const [startDate, endDate] = this.queryForm.dateRange;\n          params.from_date = startDate.toISOString();\n\n          // 将结束日期调整为当天的最后一秒\n          const endDateObj = new Date(endDate);\n          endDateObj.setHours(23, 59, 59, 999);\n          params.to_date = endDateObj.toISOString();\n        }\n\n        // 发送请求\n        const response = await reservationApi.getReservations(params);\n        let reservations = response.data.items;\n\n        // 不再需要在前端进行筛选，因为后端已经返回了正确的状态\n        // 只记录日志，帮助调试\n        if (this.queryForm.status) {\n          console.log(`获取到状态为 ${this.queryForm.status} 的预约数量: ${reservations.length}`);\n\n          // 记录每个预约的状态，帮助调试\n          reservations.forEach(reservation => {\n            console.log(`预约ID=${reservation.id}, 状态=${reservation.status}, 开始时间=${reservation.start_datetime}, 结束时间=${reservation.end_datetime}`);\n          });\n        }\n\n        // 默认按状态优先级排序\n        this.sortByStatus(reservations);\n        this.reservations = reservations;\n      } catch (error) {\n        console.error('Failed to query public reservations:', error);\n        this.$message.error(this.$t('error.queryFailed'));\n        this.reservations = [];\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 按状态优先级排序\n    sortByStatus(reservations) {\n      reservations.sort((a, b) => {\n        // 按状态优先级排序\n        const priorityMap = {\n          'in_use': 4,\n          // 使用中 - 最高优先级\n          'confirmed': 3,\n          // 已确认 - 次高优先级\n          'expired': 2,\n          // 已过期 - 较低优先级\n          'cancelled': 1 // 已取消 - 最低优先级\n        };\n        const priorityA = priorityMap[a.status] || 0;\n        const priorityB = priorityMap[b.status] || 0;\n\n        // 如果优先级不同，按优先级降序排序\n        if (priorityA !== priorityB) {\n          return priorityB - priorityA;\n        }\n\n        // 如果优先级相同，按ID降序排序\n        return b.id - a.id;\n      });\n      console.log(`按状态优先级排序后的预约数量: ${reservations.length}`);\n    },\n    // 重置查询表单\n    resetQuery() {\n      this.queryForm.category = '';\n      this.queryForm.status = '';\n      this.queryForm.dateRange = null;\n      this.handleQuery();\n    },\n    // 格式化日期时间\n    formatDateTime(_, __, cellValue) {\n      return formatDateTime(cellValue);\n    },\n    // 获取状态类型\n    getStatusType(reservation) {\n      // 直接根据后端返回的状态返回对应的类型\n      switch (reservation.status) {\n        case 'cancelled':\n          return 'danger';\n        // 已取消 - 红色\n        case 'expired':\n          return 'warning';\n        // 已过期 - 橙色\n        case 'in_use':\n          return 'primary';\n        // 使用中 - 蓝色\n        case 'confirmed':\n          return 'success';\n        // 已确认 - 绿色\n        default:\n          return 'info';\n        // 其他状态 - 灰色\n      }\n    },\n    // 获取状态文本\n    getStatusText(reservation) {\n      // 直接根据后端返回的状态返回对应的文本\n      switch (reservation.status) {\n        case 'cancelled':\n          return this.$t('reservation.statusCancelled');\n        // 已取消\n        case 'expired':\n          return this.$t('reservation.statusExpired');\n        // 已过期\n        case 'in_use':\n          return this.$t('reservation.statusInUse');\n        // 使用中\n        case 'confirmed':\n          return this.$t('reservation.statusConfirmed');\n        // 已确认\n        default:\n          return reservation.status;\n        // 其他状态直接显示\n      }\n    },\n    // 处理每页显示条数变化\n    handleSizeChange(size) {\n      this.pageSize = size;\n      // 如果当前页码超出了总页数，重置为第一页\n      const totalPages = Math.ceil(this.reservations.length / this.pageSize);\n      if (this.currentPage > totalPages) {\n        this.currentPage = 1;\n      }\n    },\n    // 处理页码变化\n    handleCurrentChange(page) {\n      this.currentPage = page;\n    },\n    // 处理表格排序变化\n    handleSortChange(column) {\n      if (!column.prop) return;\n      if (column.prop === 'id') {\n        // 按ID排序\n        this.reservations.sort((a, b) => {\n          if (column.order === 'ascending') {\n            return a.id - b.id; // 升序\n          } else {\n            return b.id - a.id; // 降序\n          }\n        });\n      } else if (column.prop === 'start_datetime' || column.prop === 'end_datetime') {\n        // 按日期排序\n        this.reservations.sort((a, b) => {\n          const dateA = new Date(a[column.prop]);\n          const dateB = new Date(b[column.prop]);\n          if (column.order === 'ascending') {\n            return dateA - dateB; // 升序\n          } else {\n            return dateB - dateA; // 降序\n          }\n        });\n      } else if (column.prop === 'status') {\n        // 按状态排序\n        if (column.order === 'ascending') {\n          // 升序：已取消 > 已过期 > 已确认 > 使用中\n          this.reservations.sort((a, b) => {\n            const priorityMap = {\n              'cancelled': 4,\n              // 已取消 - 升序时最高\n              'expired': 3,\n              // 已过期\n              'confirmed': 2,\n              // 已确认\n              'in_use': 1 // 使用中 - 升序时最低\n            };\n            const priorityA = priorityMap[a.status] || 0;\n            const priorityB = priorityMap[b.status] || 0;\n            if (priorityA !== priorityB) {\n              return priorityB - priorityA;\n            }\n            return b.id - a.id; // 相同状态按ID降序\n          });\n        } else {\n          // 降序：使用中 > 已确认 > 已过期 > 已取消\n          this.sortByStatus(this.reservations);\n        }\n      }\n\n      // 重置当前页为第一页\n      this.currentPage = 1;\n    }\n  }\n};","map":{"version":3,"names":["formatDateTime","equipmentApi","reservationApi","categoryApi","name","data","loading","querySubmitted","reservations","categories","queryForm","category","status","dateRange","currentPage","pageSize","announcements","isMobile","window","innerWidth","computed","paginatedReservations","startIndex","endIndex","slice","paginationLayout","created","fetchCategories","handleQuery","addEventListener","handleResize","beforeDestroy","removeEventListener","methods","goToEquipment","$router","push","goToQuery","goToReservationManage","goToCalendar","response","getAllCategories","Array","isArray","map","item","console","error","params","limit","equipmentResponse","getEquipments","items","length","log","startDate","endDate","from_date","toISOString","endDateObj","Date","setHours","to_date","getReservations","forEach","reservation","id","start_datetime","end_datetime","sortByStatus","$message","$t","sort","a","b","priorityMap","priorityA","priorityB","resetQuery","_","__","cellValue","getStatusType","getStatusText","handleSizeChange","size","totalPages","Math","ceil","handleCurrentChange","page","handleSortChange","column","prop","order","dateA","dateB"],"sources":["src/views/Home.vue"],"sourcesContent":["<template>\n  <div class=\"home-page\">\n    <div class=\"banner\">\n      <h1>{{ $t('home.welcome') }}</h1>\n      <p class=\"description\">{{ $t('home.description') }}</p>\n    </div>\n\n    <div class=\"features\">\n      <el-row :gutter=\"30\">\n        <el-col :xs=\"24\" :sm=\"8\">\n          <div class=\"feature-card\">\n            <i class=\"el-icon-date feature-icon\"></i>\n            <h3>{{ $t('home.calendarView') }}</h3>\n            <p>{{ $t('home.calendarViewDesc') }}</p>\n            <el-button type=\"danger\" @click=\"goToCalendar\">\n              <i class=\"el-icon-date\"></i> {{ $t('home.viewCalendar') }} <i class=\"el-icon-arrow-right\"></i>\n            </el-button>\n          </div>\n        </el-col>\n\n        <el-col :xs=\"24\" :sm=\"8\">\n          <div class=\"feature-card\">\n            <i class=\"el-icon-view feature-icon\"></i>\n            <h3>{{ $t('home.viewReservations') }}</h3>\n            <p>{{ $t('home.viewReservationsDesc') }}</p>\n            <el-button type=\"primary\" @click=\"goToEquipment\">\n              <i class=\"el-icon-view\"></i> {{ $t('home.browseEquipment') }} <i class=\"el-icon-arrow-right\"></i>\n            </el-button>\n          </div>\n        </el-col>\n\n        <el-col :xs=\"24\" :sm=\"8\">\n          <div class=\"feature-card\">\n            <i class=\"el-icon-s-order feature-icon\"></i>\n            <h3>{{ $t('home.myReservations') }}</h3>\n            <p>{{ $t('home.myReservationsDesc') }}</p>\n            <el-button type=\"success\" @click=\"goToReservationManage\">\n              <i class=\"el-icon-s-order\"></i> {{ $t('home.manageReservations') }} <i class=\"el-icon-arrow-right\"></i>\n            </el-button>\n          </div>\n        </el-col>\n\n      </el-row>\n    </div>\n\n    <div class=\"public-query-section\">\n      <h2>{{ $t('home.publicQuery') }}</h2>\n\n      <el-form :model=\"queryForm\" label-position=\"top\" class=\"query-form\">\n        <el-row :gutter=\"20\">\n          <el-col :xs=\"24\" :sm=\"8\">\n            <el-form-item :label=\"$t('equipment.category')\">\n              <el-select\n                v-model=\"queryForm.category\"\n                :placeholder=\"$t('common.all') + ' ' + $t('equipment.category')\"\n                clearable\n                style=\"width: 100%\"\n                @change=\"handleQuery\"\n              >\n                <el-option\n                  v-for=\"category in categories\"\n                  :key=\"category\"\n                  :label=\"category\"\n                  :value=\"category\"\n                ></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"8\">\n            <el-form-item :label=\"$t('common.status')\">\n              <el-select\n                v-model=\"queryForm.status\"\n                :placeholder=\"$t('common.all') + ' ' + $t('common.status')\"\n                clearable\n                style=\"width: 100%\"\n                @change=\"handleQuery\"\n              >\n                <el-option\n                  :label=\"$t('reservation.statusConfirmed')\"\n                  value=\"confirmed\"\n                ></el-option>\n                <el-option\n                  :label=\"$t('reservation.statusInUse')\"\n                  value=\"in_use\"\n                ></el-option>\n                <el-option\n                  :label=\"$t('reservation.statusExpired')\"\n                  value=\"expired\"\n                ></el-option>\n                <el-option\n                  :label=\"$t('reservation.statusCancelled')\"\n                  value=\"cancelled\"\n                ></el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"8\">\n            <el-form-item :label=\"$t('reservation.dateRange')\">\n              <el-date-picker\n                v-model=\"queryForm.dateRange\"\n                type=\"daterange\"\n                range-separator=\"-\"\n                :start-placeholder=\"$t('reservation.startDate')\"\n                :end-placeholder=\"$t('reservation.endDate')\"\n                style=\"width: 100%\"\n                @change=\"handleQuery\"\n              ></el-date-picker>\n            </el-form-item>\n          </el-col>\n        </el-row>\n\n        <el-form-item>\n          <el-button type=\"primary\" icon=\"el-icon-search\" @click=\"handleQuery\" :loading=\"loading\">\n            {{ $t('common.search') }}\n          </el-button>\n          <el-button @click=\"resetQuery\" icon=\"el-icon-refresh-left\">{{ $t('common.reset') }}</el-button>\n        </el-form-item>\n      </el-form>\n\n      <!-- 查询结果 -->\n      <div v-if=\"reservations.length > 0\" class=\"query-results\">\n        <!-- 桌面端表格视图 -->\n        <el-table\n          v-if=\"!isMobile\"\n          :data=\"paginatedReservations\"\n          style=\"width: 100%\"\n          v-loading=\"loading\"\n          border\n          stripe\n          @sort-change=\"handleSortChange\"\n        >\n          <el-table-column\n            prop=\"id\"\n            :label=\"$t('common.id')\"\n            min-width=\"80\"\n            sortable\n          ></el-table-column>\n\n          <el-table-column\n            prop=\"equipment_name\"\n            :label=\"$t('equipment.name')\"\n            min-width=\"120\"\n          ></el-table-column>\n\n          <el-table-column\n            prop=\"equipment_category\"\n            :label=\"$t('equipment.category')\"\n            min-width=\"180\"\n          ></el-table-column>\n\n          <el-table-column\n            prop=\"user_name\"\n            :label=\"$t('reservation.reserver')\"\n            min-width=\"100\"\n          ></el-table-column>\n\n          <el-table-column\n            prop=\"user_department\"\n            :label=\"$t('reservation.department')\"\n            min-width=\"100\"\n          ></el-table-column>\n\n          <el-table-column\n            prop=\"start_datetime\"\n            :label=\"$t('reservation.startTime')\"\n            min-width=\"120\"\n            :formatter=\"formatDateTime\"\n            sortable\n          ></el-table-column>\n\n          <el-table-column\n            prop=\"end_datetime\"\n            :label=\"$t('reservation.endTime')\"\n            min-width=\"120\"\n            :formatter=\"formatDateTime\"\n            sortable\n          ></el-table-column>\n\n          <el-table-column\n            prop=\"status\"\n            :label=\"$t('common.status')\"\n            width=\"140\"\n            sortable\n          >\n            <template slot-scope=\"scope\">\n              <el-tag\n                :type=\"getStatusType(scope.row)\"\n                size=\"medium\"\n                style=\"font-weight: bold; padding: 0px 10px; font-size: 14px;\"\n              >\n                {{ getStatusText(scope.row) }}\n              </el-tag>\n            </template>\n          </el-table-column>\n        </el-table>\n\n        <!-- 移动端卡片视图 -->\n        <div v-else class=\"mobile-card-container\" v-loading=\"loading\">\n          <div\n            v-for=\"reservation in paginatedReservations\"\n            :key=\"reservation.id\"\n            class=\"reservation-mobile-card\"\n          >\n            <div class=\"card-header\">\n              <div class=\"card-title\">\n                <span class=\"equipment-name\">{{ reservation.equipment_name }}</span>\n                <el-tag\n                  :type=\"getStatusType(reservation)\"\n                  size=\"small\"\n                  class=\"status-tag\"\n                >\n                  {{ getStatusText(reservation) }}\n                </el-tag>\n              </div>\n              <div class=\"reservation-id\">#{{ reservation.id }}</div>\n            </div>\n\n            <div class=\"card-content\">\n              <div class=\"info-row\">\n                <span class=\"label\">{{ $t('equipment.category') }}:</span>\n                <span class=\"value\">{{ reservation.equipment_category }}</span>\n              </div>\n\n              <div class=\"info-row\">\n                <span class=\"label\">{{ $t('reservation.reserver') }}:</span>\n                <span class=\"value\">{{ reservation.user_name }}</span>\n              </div>\n\n              <div class=\"info-row\">\n                <span class=\"label\">{{ $t('reservation.department') }}:</span>\n                <span class=\"value\">{{ reservation.user_department }}</span>\n              </div>\n\n              <div class=\"time-info\">\n                <div class=\"time-row\">\n                  <i class=\"el-icon-time\"></i>\n                  <span class=\"time-label\">{{ $t('reservation.startTime') }}:</span>\n                  <span class=\"time-value\">{{ formatDateTime(null, null, reservation.start_datetime) }}</span>\n                </div>\n                <div class=\"time-row\">\n                  <i class=\"el-icon-time\"></i>\n                  <span class=\"time-label\">{{ $t('reservation.endTime') }}:</span>\n                  <span class=\"time-value\">{{ formatDateTime(null, null, reservation.end_datetime) }}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 分页控件 -->\n        <div class=\"pagination-container\">\n          <el-pagination\n            @size-change=\"handleSizeChange\"\n            @current-change=\"handleCurrentChange\"\n            :current-page=\"currentPage\"\n            :page-sizes=\"[5, 10, 20, 50]\"\n            :page-size=\"pageSize\"\n            :layout=\"paginationLayout\"\n            :total=\"reservations.length\"\n          >\n          </el-pagination>\n        </div>\n      </div>\n\n      <!-- 无查询结果提示 -->\n      <div v-else-if=\"querySubmitted\" class=\"no-results\">\n        <el-empty :description=\"$t('home.noRecordsFound')\"></el-empty>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { formatDateTime } from '@/utils/dateUtils'\nimport equipmentApi from '@/api/equipment'\nimport reservationApi from '@/api/reservation'\nimport { categoryApi } from '@/api'\n\nexport default {\n  name: 'HomePage',\n\n  data() {\n    return {\n      // 公共查询相关\n      loading: false,\n      querySubmitted: false,\n      reservations: [],\n      categories: [],\n      queryForm: {\n        category: '',\n        status: '',\n        dateRange: null\n      },\n      // 分页相关\n      currentPage: 1,\n      pageSize: 10,\n      // 公告数据\n      announcements: [],\n      // 响应式布局相关\n      isMobile: window.innerWidth <= 768\n    }\n  },\n\n  computed: {\n    // 根据当前页码和每页显示条数计算当前页的数据\n    paginatedReservations() {\n      const startIndex = (this.currentPage - 1) * this.pageSize;\n      const endIndex = startIndex + this.pageSize;\n      return this.reservations.slice(startIndex, endIndex);\n    },\n\n    // 根据屏幕宽度动态调整分页组件布局\n    paginationLayout() {\n      return this.isMobile\n        ? 'prev, next'\n        : 'total, sizes, prev, pager, next, jumper';\n    }\n  },\n\n  created() {\n    // 获取设备类别\n    this.fetchCategories()\n\n    // 默认加载公开查询数据\n    this.handleQuery()\n\n    // 添加窗口大小变化的监听器\n    window.addEventListener('resize', this.handleResize)\n  },\n\n  beforeDestroy() {\n    // 移除窗口大小变化的监听器\n    window.removeEventListener('resize', this.handleResize)\n  },\n\n  methods: {\n    // 处理窗口大小变化\n    handleResize() {\n      this.isMobile = window.innerWidth <= 768\n    },\n\n    goToEquipment() {\n      this.$router.push('/equipment')\n    },\n\n    goToQuery() {\n      this.$router.push('/reservation/query')\n    },\n\n    goToReservationManage() {\n      this.$router.push('/reservation/query')\n    },\n\n    goToCalendar() {\n      this.$router.push('/calendar')\n    },\n\n    // 获取设备类别\n    async fetchCategories() {\n      try {\n        // 使用类别管理API获取完整的类别信息\n        const response = await categoryApi.getAllCategories()\n        if (response.data && Array.isArray(response.data)) {\n          // 使用类别的完整名称\n          this.categories = response.data.map(item => item.name)\n        } else {\n          console.error('Invalid categories data format:', response.data)\n          this.categories = []\n        }\n      } catch (error) {\n        console.error('Failed to fetch equipment categories:', error)\n        this.categories = []\n      }\n    },\n\n    // 处理公共查询\n    async handleQuery() {\n      this.loading = true\n      this.querySubmitted = true\n\n      try {\n        // 准备查询参数\n        const params = {\n          limit: 1000  // 设置为显示最多1000条结果，确保能显示所有记录\n        }\n\n        // 添加类别过滤\n        if (this.queryForm.category) {\n          // 需要先获取该类别的所有设备ID\n          const equipmentResponse = await equipmentApi.getEquipments({\n            category: this.queryForm.category,\n            limit: 100  // 增加限制，确保能获取所有设备\n          })\n\n          if (equipmentResponse.data && equipmentResponse.data.items && equipmentResponse.data.items.length > 0) {\n            // 如果有设备，使用类别参数进行查询\n            params.category = this.queryForm.category\n          }\n        }\n\n        // 添加状态过滤\n        if (this.queryForm.status) {\n          // 直接使用选择的状态值，因为后端现在支持所有状态\n          params.status = this.queryForm.status;\n          console.log(`设置状态参数为 \"${this.queryForm.status}\"`);\n        }\n\n        // 添加日期范围过滤\n        if (this.queryForm.dateRange && this.queryForm.dateRange.length === 2) {\n          const [startDate, endDate] = this.queryForm.dateRange\n          params.from_date = startDate.toISOString()\n\n          // 将结束日期调整为当天的最后一秒\n          const endDateObj = new Date(endDate)\n          endDateObj.setHours(23, 59, 59, 999)\n          params.to_date = endDateObj.toISOString()\n        }\n\n        // 发送请求\n        const response = await reservationApi.getReservations(params)\n        let reservations = response.data.items\n\n        // 不再需要在前端进行筛选，因为后端已经返回了正确的状态\n        // 只记录日志，帮助调试\n        if (this.queryForm.status) {\n          console.log(`获取到状态为 ${this.queryForm.status} 的预约数量: ${reservations.length}`);\n\n          // 记录每个预约的状态，帮助调试\n          reservations.forEach(reservation => {\n            console.log(`预约ID=${reservation.id}, 状态=${reservation.status}, 开始时间=${reservation.start_datetime}, 结束时间=${reservation.end_datetime}`);\n          });\n        }\n\n        // 默认按状态优先级排序\n        this.sortByStatus(reservations);\n\n        this.reservations = reservations\n      } catch (error) {\n        console.error('Failed to query public reservations:', error)\n        this.$message.error(this.$t('error.queryFailed'))\n        this.reservations = []\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // 按状态优先级排序\n    sortByStatus(reservations) {\n      reservations.sort((a, b) => {\n        // 按状态优先级排序\n        const priorityMap = {\n          'in_use': 4,      // 使用中 - 最高优先级\n          'confirmed': 3,   // 已确认 - 次高优先级\n          'expired': 2,     // 已过期 - 较低优先级\n          'cancelled': 1,   // 已取消 - 最低优先级\n        };\n\n        const priorityA = priorityMap[a.status] || 0;\n        const priorityB = priorityMap[b.status] || 0;\n\n        // 如果优先级不同，按优先级降序排序\n        if (priorityA !== priorityB) {\n          return priorityB - priorityA;\n        }\n\n        // 如果优先级相同，按ID降序排序\n        return b.id - a.id;\n      });\n\n      console.log(`按状态优先级排序后的预约数量: ${reservations.length}`);\n    },\n\n    // 重置查询表单\n    resetQuery() {\n      this.queryForm.category = ''\n      this.queryForm.status = ''\n      this.queryForm.dateRange = null\n      this.handleQuery()\n    },\n\n    // 格式化日期时间\n    formatDateTime(_, __, cellValue) {\n      return formatDateTime(cellValue)\n    },\n\n    // 获取状态类型\n    getStatusType(reservation) {\n      // 直接根据后端返回的状态返回对应的类型\n      switch (reservation.status) {\n        case 'cancelled':\n          return 'danger';  // 已取消 - 红色\n        case 'expired':\n          return 'warning'; // 已过期 - 橙色\n        case 'in_use':\n          return 'primary'; // 使用中 - 蓝色\n        case 'confirmed':\n          return 'success'; // 已确认 - 绿色\n        default:\n          return 'info';    // 其他状态 - 灰色\n      }\n    },\n\n    // 获取状态文本\n    getStatusText(reservation) {\n      // 直接根据后端返回的状态返回对应的文本\n      switch (reservation.status) {\n        case 'cancelled':\n          return this.$t('reservation.statusCancelled'); // 已取消\n        case 'expired':\n          return this.$t('reservation.statusExpired');   // 已过期\n        case 'in_use':\n          return this.$t('reservation.statusInUse');     // 使用中\n        case 'confirmed':\n          return this.$t('reservation.statusConfirmed'); // 已确认\n        default:\n          return reservation.status; // 其他状态直接显示\n      }\n    },\n\n    // 处理每页显示条数变化\n    handleSizeChange(size) {\n      this.pageSize = size;\n      // 如果当前页码超出了总页数，重置为第一页\n      const totalPages = Math.ceil(this.reservations.length / this.pageSize);\n      if (this.currentPage > totalPages) {\n        this.currentPage = 1;\n      }\n    },\n\n    // 处理页码变化\n    handleCurrentChange(page) {\n      this.currentPage = page;\n    },\n\n    // 处理表格排序变化\n    handleSortChange(column) {\n      if (!column.prop) return;\n\n      if (column.prop === 'id') {\n        // 按ID排序\n        this.reservations.sort((a, b) => {\n          if (column.order === 'ascending') {\n            return a.id - b.id;  // 升序\n          } else {\n            return b.id - a.id;  // 降序\n          }\n        });\n      } else if (column.prop === 'start_datetime' || column.prop === 'end_datetime') {\n        // 按日期排序\n        this.reservations.sort((a, b) => {\n          const dateA = new Date(a[column.prop]);\n          const dateB = new Date(b[column.prop]);\n\n          if (column.order === 'ascending') {\n            return dateA - dateB;  // 升序\n          } else {\n            return dateB - dateA;  // 降序\n          }\n        });\n      } else if (column.prop === 'status') {\n        // 按状态排序\n        if (column.order === 'ascending') {\n          // 升序：已取消 > 已过期 > 已确认 > 使用中\n          this.reservations.sort((a, b) => {\n            const priorityMap = {\n              'cancelled': 4,   // 已取消 - 升序时最高\n              'expired': 3,     // 已过期\n              'confirmed': 2,   // 已确认\n              'in_use': 1,      // 使用中 - 升序时最低\n            };\n\n            const priorityA = priorityMap[a.status] || 0;\n            const priorityB = priorityMap[b.status] || 0;\n\n            if (priorityA !== priorityB) {\n              return priorityB - priorityA;\n            }\n\n            return b.id - a.id;  // 相同状态按ID降序\n          });\n        } else {\n          // 降序：使用中 > 已确认 > 已过期 > 已取消\n          this.sortByStatus(this.reservations);\n        }\n      }\n\n      // 重置当前页为第一页\n      this.currentPage = 1;\n    },\n  }\n}\n</script>\n\n<style scoped>\n.home-page {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 15px 20px;\n}\n\n.banner {\n  text-align: center;\n  padding: 30px 20px;\n  background-color: #fff;\n  border-radius: 8px;\n  margin-bottom: 30px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n}\n\n.banner h1 {\n  font-size: 2.2rem;\n  color: #303133;\n  margin-bottom: 15px;\n}\n\n.description {\n  font-size: 1.1rem;\n  color: #606266;\n  max-width: 800px;\n  margin: 0 auto 20px;\n}\n\n.banner-buttons {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n}\n\n.features {\n  margin-bottom: 30px;\n}\n\n.feature-card {\n  background-color: #fff;\n  border-radius: 8px;\n  padding: 30px;\n  text-align: center;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  height: 100%;\n  transition: transform 0.3s, box-shadow 0.3s;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.feature-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.2);\n}\n\n.feature-icon {\n  font-size: 3.5rem;\n  color: #409EFF;\n  margin-bottom: 20px;\n  background-color: #ecf5ff;\n  padding: 20px;\n  border-radius: 50%;\n  width: 80px;\n  height: 80px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.feature-card h3 {\n  font-size: 1.6rem;\n  color: #303133;\n  margin-bottom: 15px;\n  font-weight: 500;\n}\n\n.feature-card p {\n  color: #606266;\n  margin-bottom: 25px;\n  line-height: 1.6;\n  font-size: 1.1rem;\n}\n\n.public-query-section {\n  background-color: #fff;\n  border-radius: 8px;\n  padding: 25px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  margin-bottom: 30px;\n}\n\n.public-query-section h2 {\n  text-align: center;\n  margin-bottom: 25px;\n  color: #303133;\n  font-size: 1.8rem;\n}\n\n.query-form {\n  margin-bottom: 20px;\n}\n\n.query-results {\n  margin-top: 20px;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.no-results {\n  margin-top: 30px;\n  text-align: center;\n}\n\n/* 移动端卡片样式 */\n.mobile-card-container {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.reservation-mobile-card {\n  background: #ffffff;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  border: 1px solid #e4e7ed;\n  overflow: hidden;\n  transition: box-shadow 0.3s ease;\n}\n\n.reservation-mobile-card:hover {\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n}\n\n.card-header {\n  padding: 16px;\n  background: #f8f9fa;\n  border-bottom: 1px solid #e4e7ed;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\n.card-title {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  flex: 1;\n}\n\n.equipment-name {\n  font-size: 16px;\n  font-weight: 600;\n  color: #303133;\n  line-height: 1.4;\n}\n\n.status-tag {\n  align-self: flex-start;\n  font-weight: 500;\n}\n\n.reservation-id {\n  font-size: 14px;\n  color: #909399;\n  font-weight: 500;\n  margin-left: 12px;\n}\n\n.card-content {\n  padding: 16px;\n}\n\n.info-row {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n  padding: 8px 0;\n  border-bottom: 1px solid #f0f0f0;\n}\n\n.info-row:last-of-type {\n  border-bottom: none;\n  margin-bottom: 16px;\n}\n\n.info-row .label {\n  font-size: 14px;\n  color: #606266;\n  font-weight: 500;\n  flex-shrink: 0;\n  margin-right: 12px;\n}\n\n.info-row .value {\n  font-size: 14px;\n  color: #303133;\n  text-align: right;\n  word-break: break-word;\n}\n\n.time-info {\n  background: #f8f9fa;\n  border-radius: 6px;\n  padding: 12px;\n  margin-top: 8px;\n}\n\n.time-row {\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n  font-size: 13px;\n}\n\n.time-row:last-child {\n  margin-bottom: 0;\n}\n\n.time-row i {\n  color: #409eff;\n  margin-right: 8px;\n  font-size: 14px;\n}\n\n.time-label {\n  color: #606266;\n  margin-right: 8px;\n  font-weight: 500;\n  min-width: 60px;\n}\n\n.time-value {\n  color: #303133;\n  font-weight: 500;\n}\n\n@media (max-width: 768px) {\n  /* 移动端整体容器优化 - 与个人预约管理页面一致 */\n  .home-container {\n    padding: 10px 4px !important; /* 进一步减少左右边距 */\n  }\n\n  /* Banner 横幅优化 - 更宽的显示 */\n  .banner {\n    padding: 20px 8px; /* 进一步减少左右内边距 */\n    margin: 0 -8px 20px -8px; /* 更大的负边距让banner更宽 */\n    border-radius: 4px; /* 进一步减小圆角 */\n  }\n\n  .banner h1 {\n    font-size: 2rem;\n  }\n\n  .description {\n    font-size: 1rem;\n    padding: 0 4px; /* 减少描述文字内边距 */\n  }\n\n  .banner-buttons {\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    padding: 0 4px; /* 减少按钮内边距 */\n  }\n\n  /* Feature Cards 功能卡片优化 - 更宽的显示 */\n  .features .el-row {\n    margin: 0 -12px !important; /* 更大的负边距让卡片行更宽 */\n  }\n\n  .features .el-col {\n    padding: 0 2px !important; /* 进一步减少列间距 */\n  }\n\n  .feature-card {\n    margin-bottom: 16px;\n    padding: 20px 12px; /* 进一步减少左右内边距 */\n    border-radius: 4px; /* 进一步减小圆角 */\n  }\n\n  .feature-icon {\n    width: 70px;\n    height: 70px;\n    font-size: 3rem; /* 稍微减小图标大小 */\n    padding: 15px;\n  }\n\n  .feature-card h3 {\n    font-size: 1.4rem; /* 稍微减小标题字体 */\n  }\n\n  .feature-card p {\n    font-size: 1rem; /* 稍微减小描述字体 */\n    margin-bottom: 20px;\n  }\n\n  /* Public Query Section 查询区域优化 - 更宽的显示 */\n  .public-query-section {\n    padding: 16px 8px; /* 进一步减少左右内边距 */\n    margin: 0 -8px 20px -8px; /* 更大的负边距让查询区域更宽 */\n    border-radius: 4px; /* 进一步减小圆角 */\n  }\n\n  .public-query-section h2 {\n    font-size: 1.5rem;\n    margin-bottom: 20px;\n  }\n\n  /* 查询表单优化 */\n  .query-form .el-row {\n    margin: 0 -2px !important; /* 进一步减少表单行边距 */\n  }\n\n  .query-form .el-col {\n    padding: 0 2px !important; /* 进一步减少表单列间距 */\n  }\n\n  /* 移动端卡片容器优化 - 与个人预约管理页面一致 */\n  .mobile-card-container {\n    margin: 0 -2px; /* 更小的负边距，与个人预约管理页面一致 */\n    gap: 16px; /* 保持与个人预约管理页面一致的间距 */\n  }\n\n  .reservation-mobile-card {\n    margin: 0 2px; /* 给卡片更小的边距 */\n    border-radius: 8px; /* 与个人预约管理页面保持一致的圆角 */\n  }\n\n  /* 分页容器优化 */\n  .pagination-container {\n    margin: 16px -8px 0 -8px; /* 更大的负边距让分页区域更宽 */\n    padding: 0 4px; /* 减少分页内容内边距 */\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}