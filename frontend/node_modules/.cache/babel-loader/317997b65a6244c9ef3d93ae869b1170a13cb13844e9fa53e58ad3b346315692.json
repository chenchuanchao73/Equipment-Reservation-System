{"ast":null,"code":"import { fetchAllAnnouncements, createAnnouncement, updateAnnouncement, deleteAnnouncement } from '@/api/announcement';\nexport default {\n  name: 'AnnouncementManage',\n  data() {\n    return {\n      announcements: [],\n      form: {\n        id: null,\n        title: '',\n        content: '',\n        is_active: true\n      },\n      editMode: false\n    };\n  },\n  created() {\n    this.loadAnnouncements();\n  },\n  methods: {\n    // 格式化日期为YYYY-MM-DD HH:mm格式\n    formatDate(dateStr) {\n      if (!dateStr) return '';\n      const date = new Date(dateStr);\n      const year = date.getFullYear();\n      const month = String(date.getMonth() + 1).padStart(2, '0');\n      const day = String(date.getDate()).padStart(2, '0');\n      const hours = String(date.getHours()).padStart(2, '0');\n      const minutes = String(date.getMinutes()).padStart(2, '0');\n      return `${year}-${month}-${day} ${hours}:${minutes}`;\n    },\n    async loadAnnouncements() {\n      try {\n        const res = await fetchAllAnnouncements();\n        this.announcements = Array.isArray(res) ? res : [];\n        console.log('加载到所有公告数据:', this.announcements);\n      } catch (e) {\n        console.error('公告加载失败:', e);\n        this.$message.error('公告加载失败');\n      }\n    },\n    addAnnouncement() {\n      this.form = {\n        id: null,\n        title: '',\n        content: '',\n        is_active: true\n      };\n      this.editMode = true;\n    },\n    editAnnouncement(row) {\n      this.form = {\n        ...row\n      };\n      this.editMode = true;\n    },\n    cancelEdit() {\n      this.editMode = false;\n      this.form = {\n        id: null,\n        title: '',\n        content: '',\n        is_active: true\n      };\n    },\n    async submitForm() {\n      if (!this.form.title || !this.form.content) {\n        this.$message.error('标题和内容不能为空');\n        return;\n      }\n      try {\n        if (this.form.id) {\n          await updateAnnouncement(this.form.id, this.form);\n          this.$message.success('公告已更新');\n        } else {\n          await createAnnouncement(this.form);\n          this.$message.success('公告已发布');\n        }\n        this.editMode = false;\n        this.loadAnnouncements();\n      } catch (e) {\n        this.$message.error('操作失败');\n      }\n    },\n    async deleteAnnouncement(id) {\n      try {\n        await deleteAnnouncement(id);\n        this.$message.success('公告已删除');\n        this.loadAnnouncements();\n      } catch (e) {\n        this.$message.error('删除失败');\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}