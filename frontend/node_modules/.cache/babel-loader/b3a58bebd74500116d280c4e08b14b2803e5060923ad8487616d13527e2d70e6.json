{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'AdminSettings',\n  data() {\n    return {\n      activeTab: 'base',\n      emailSettings: {\n        smtp_server: '',\n        smtp_port: 587,\n        sender_email: '',\n        sender_name: '',\n        smtp_username: '',\n        smtp_password: '',\n        use_ssl: true,\n        enabled: false\n      }\n    };\n  },\n  created() {\n    this.fetchEmailSettings();\n  },\n  methods: {\n    async fetchEmailSettings() {\n      try {\n        const res = await axios.get('/api/admin/email/settings');\n        this.emailSettings = res.data;\n      } catch (e) {\n        this.$message.error('获取邮件设置失败');\n      }\n    },\n    async saveEmailSettings() {\n      try {\n        await axios.post('/api/admin/email/settings', this.emailSettings);\n        this.$message.success('保存成功');\n      } catch (e) {\n        this.$message.error('保存失败');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","activeTab","emailSettings","smtp_server","smtp_port","sender_email","sender_name","smtp_username","smtp_password","use_ssl","enabled","created","fetchEmailSettings","methods","res","get","e","$message","error","saveEmailSettings","post","success"],"sources":["src/views/admin/AdminSettings.vue"],"sourcesContent":["<template>\n  <div class=\"admin-settings\">\n    <el-tabs v-model=\"activeTab\">\n      <el-tab-pane label=\"基础设置\" name=\"base\">\n        <p>（这里是原有系统设置内容）</p>\n      </el-tab-pane>\n      <el-tab-pane label=\"邮件设置\" name=\"email\">\n        <el-form :model=\"emailSettings\" label-width=\"120px\" @submit.native.prevent=\"saveEmailSettings\">\n          <el-form-item label=\"SMTP服务器\">\n            <el-input v-model=\"emailSettings.smtp_server\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"端口\">\n            <el-input v-model=\"emailSettings.smtp_port\" type=\"number\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"发件人邮箱\">\n            <el-input v-model=\"emailSettings.sender_email\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"发件人名称\">\n            <el-input v-model=\"emailSettings.sender_name\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"SMTP用户名\">\n            <el-input v-model=\"emailSettings.smtp_username\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"SMTP密码\">\n            <el-input v-model=\"emailSettings.smtp_password\" show-password></el-input>\n          </el-form-item>\n          <el-form-item label=\"使用SSL\">\n            <el-switch v-model=\"emailSettings.use_ssl\"></el-switch>\n          </el-form-item>\n          <el-form-item label=\"启用邮件功能\">\n            <el-switch v-model=\"emailSettings.enabled\"></el-switch>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"saveEmailSettings\">保存</el-button>\n          </el-form-item>\n        </el-form>\n      </el-tab-pane>\n      <!-- 你可以继续添加\"邮件模板\"、\"邮件日志\"Tab -->\n    </el-tabs>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n  name: 'AdminSettings',\n  data() {\n    return {\n      activeTab: 'base',\n      emailSettings: {\n        smtp_server: '',\n        smtp_port: 587,\n        sender_email: '',\n        sender_name: '',\n        smtp_username: '',\n        smtp_password: '',\n        use_ssl: true,\n        enabled: false\n      }\n    }\n  },\n  created() {\n    this.fetchEmailSettings()\n  },\n  methods: {\n    async fetchEmailSettings() {\n      try {\n        const res = await axios.get('/api/admin/email/settings')\n        this.emailSettings = res.data\n      } catch (e) {\n        this.$message.error('获取邮件设置失败')\n      }\n    },\n    async saveEmailSettings() {\n      try {\n        await axios.post('/api/admin/email/settings', this.emailSettings)\n        this.$message.success('保存成功')\n      } catch (e) {\n        this.$message.error('保存失败')\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.admin-settings {\n  padding: 20px;\n}\n</style>\n"],"mappings":"AA2CA,OAAAA,KAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,aAAA;QACAC,WAAA;QACAC,SAAA;QACAC,YAAA;QACAC,WAAA;QACAC,aAAA;QACAC,aAAA;QACAC,OAAA;QACAC,OAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,kBAAA;EACA;EACAC,OAAA;IACA,MAAAD,mBAAA;MACA;QACA,MAAAE,GAAA,SAAAhB,KAAA,CAAAiB,GAAA;QACA,KAAAb,aAAA,GAAAY,GAAA,CAAAd,IAAA;MACA,SAAAgB,CAAA;QACA,KAAAC,QAAA,CAAAC,KAAA;MACA;IACA;IACA,MAAAC,kBAAA;MACA;QACA,MAAArB,KAAA,CAAAsB,IAAA,mCAAAlB,aAAA;QACA,KAAAe,QAAA,CAAAI,OAAA;MACA,SAAAL,CAAA;QACA,KAAAC,QAAA,CAAAC,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}